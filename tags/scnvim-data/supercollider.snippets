# SuperCollider snippets
# Snippet generator: SCNvim.sc

snippet A2K.kr
A2K.kr(${1:in: 0.0})
endsnippet

snippet APCMini.initClass
APCMini.initClass(${1:})
endsnippet

snippet APCMini.new
APCMini.new(${1:device_number: nil})
endsnippet

snippet APCMini.oscPath
APCMini.oscPath(${1:})
endsnippet

snippet AbstractDispatcher.new
AbstractDispatcher.new(${1:})
endsnippet

snippet AbstractDispatcher.initClass
AbstractDispatcher.initClass(${1:})
endsnippet

snippet AbstractGroup.new
AbstractGroup.new(${1:target: nil}, ${2: addAction: addToHead})
endsnippet

snippet AbstractGroup.after
AbstractGroup.after(${1:aNode: nil})
endsnippet

snippet AbstractGroup.before
AbstractGroup.before(${1:aNode: nil})
endsnippet

snippet AbstractGroup.head
AbstractGroup.head(${1:aGroup: nil})
endsnippet

snippet AbstractGroup.tail
AbstractGroup.tail(${1:aGroup: nil})
endsnippet

snippet AbstractGroup.replace
AbstractGroup.replace(${1:nodeToReplace: nil})
endsnippet

snippet AbstractGroup.creationCmd
AbstractGroup.creationCmd(${1:})
endsnippet

snippet AbstractIn.isInputUGen
AbstractIn.isInputUGen(${1:})
endsnippet

snippet AbstractMDPlugin.clearMetadata
AbstractMDPlugin.clearMetadata(${1:path: nil})
endsnippet

snippet AbstractMDPlugin.writeMetadata
AbstractMDPlugin.writeMetadata(${1:metadata: nil}, ${2: synthdef: nil}, ${3: path: nil})
endsnippet

snippet AbstractMDPlugin.writeMetadataFile
AbstractMDPlugin.writeMetadataFile(${1:})
endsnippet

snippet AbstractMDPlugin.readMetadata
AbstractMDPlugin.readMetadata(${1:path: nil})
endsnippet

snippet AbstractMDPlugin.readMetadataFile
AbstractMDPlugin.readMetadataFile(${1:})
endsnippet

snippet AbstractMDPlugin.applyExtension
AbstractMDPlugin.applyExtension(${1:path: nil})
endsnippet

snippet AbstractMDPlugin.mdExtension
AbstractMDPlugin.mdExtension(${1:})
endsnippet

snippet AbstractNodeWatcher.new
AbstractNodeWatcher.new(${1:server: nil})
endsnippet

snippet AbstractOut.isOutputUGen
AbstractOut.isOutputUGen(${1:})
endsnippet

snippet AbstractOut.numFixedArgs
AbstractOut.numFixedArgs(${1:})
endsnippet

snippet AbstractPlayControl.new
AbstractPlayControl.new(${1:source: nil}, ${2: channelOffset: 0})
endsnippet

snippet AbstractPlayControl.initClass
AbstractPlayControl.initClass(${1:})
endsnippet

snippet AbstractResponderFunc.initClass
AbstractResponderFunc.initClass(${1:})
endsnippet

snippet AbstractResponderFunc.allFuncProxies
AbstractResponderFunc.allFuncProxies(${1:})
endsnippet

snippet AbstractResponderFunc.allEnabled
AbstractResponderFunc.allEnabled(${1:})
endsnippet

snippet AbstractResponderFunc.allDisabled
AbstractResponderFunc.allDisabled(${1:})
endsnippet

snippet AbstractServerAction.init
AbstractServerAction.init(${1:})
endsnippet

snippet AbstractServerAction.performFunction
AbstractServerAction.performFunction(${1:server: nil}, ${2: function: nil})
endsnippet

snippet AbstractServerAction.run
AbstractServerAction.run(${1:server: nil})
endsnippet

snippet AbstractServerAction.functionSelector
AbstractServerAction.functionSelector(${1:})
endsnippet

snippet AbstractServerAction.add
AbstractServerAction.add(${1:object: nil}, ${2: server: nil})
endsnippet

snippet AbstractServerAction.addToAll
AbstractServerAction.addToAll(${1:object: nil})
endsnippet

snippet AbstractServerAction.remove
AbstractServerAction.remove(${1:object: nil}, ${2: server: nil})
endsnippet

snippet AbstractServerAction.removeServer
AbstractServerAction.removeServer(${1:server: nil})
endsnippet

snippet AbstractSystemAction.init
AbstractSystemAction.init(${1:})
endsnippet

snippet AbstractSystemAction.add
AbstractSystemAction.add(${1:object: nil})
endsnippet

snippet AbstractSystemAction.remove
AbstractSystemAction.remove(${1:object: nil})
endsnippet

snippet AbstractSystemAction.removeAll
AbstractSystemAction.removeAll(${1:})
endsnippet

snippet AbstractSystemAction.objects
AbstractSystemAction.objects(${1:})
endsnippet

snippet AbstractSystemAction.objects_
AbstractSystemAction.objects_(${1:obj: nil})
endsnippet

snippet AmpComp.ir
AmpComp.ir(${1:freq: nil}, ${2: root: nil}, ${3: exp: 0.3333})
endsnippet

snippet AmpComp.ar
AmpComp.ar(${1:freq: nil}, ${2: root: nil}, ${3: exp: 0.3333})
endsnippet

snippet AmpComp.kr
AmpComp.kr(${1:freq: nil}, ${2: root: nil}, ${3: exp: 0.3333})
endsnippet

snippet AmpCompA.ir
AmpCompA.ir(${1:freq: 1000}, ${2: root: 0}, ${3: minAmp: 0.32}, ${4: rootAmp: 1.0})
endsnippet

snippet AmpCompA.ar
AmpCompA.ar(${1:freq: 1000}, ${2: root: 0}, ${3: minAmp: 0.32}, ${4: rootAmp: 1.0})
endsnippet

snippet AmpCompA.kr
AmpCompA.kr(${1:freq: 1000}, ${2: root: 0}, ${3: minAmp: 0.32}, ${4: rootAmp: 1.0})
endsnippet

snippet Amplitude.ar
Amplitude.ar(${1:in: 0.0}, ${2: attackTime: 0.01}, ${3: releaseTime: 0.01}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Amplitude.kr
Amplitude.kr(${1:in: 0.0}, ${2: attackTime: 0.01}, ${3: releaseTime: 0.01}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet AnalogIn.ar
AnalogIn.ar(${1:analogPin: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet AnalogIn.kr
AnalogIn.kr(${1:analogPin: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet AnalogOut.ar
AnalogOut.ar(${1:analogPin: 0}, ${2: output: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet AnalogOut.kr
AnalogOut.kr(${1:analogPin: 0}, ${2: output: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet AppClock.initClass
AppClock.initClass(${1:})
endsnippet

snippet AppClock.clear
AppClock.clear(${1:})
endsnippet

snippet AppClock.sched
AppClock.sched(${1:delta: nil}, ${2: item: nil})
endsnippet

snippet AppClock.tick
AppClock.tick(${1:})
endsnippet

snippet AppClock.prSchedNotify
AppClock.prSchedNotify(${1:})
endsnippet

snippet Archive.global
Archive.global(${1:})
endsnippet

snippet Archive.global_
Archive.global_(${1:obj: nil})
endsnippet

snippet Archive.initClass
Archive.initClass(${1:})
endsnippet

snippet Archive.read
Archive.read(${1:filename: nil})
endsnippet

snippet Archive.write
Archive.write(${1:filename: nil})
endsnippet

snippet Array.with
Array.with(${1:args: [  ]})
endsnippet

snippet Array2D.new
Array2D.new(${1:rows: 1}, ${2: cols: 1})
endsnippet

snippet Array2D.fromArray
Array2D.fromArray(${1:rows: nil}, ${2: cols: nil}, ${3: array: nil})
endsnippet

snippet ArrayedCollection.newClear
ArrayedCollection.newClear(${1:indexedSize: 0})
endsnippet

snippet ArrayedCollection.iota
ArrayedCollection.iota(${1:sizes: [  ]})
endsnippet

snippet Association.new
Association.new(${1:key: nil}, ${2: value: nil})
endsnippet

snippet AudioControl.names
AudioControl.names(${1:names: nil})
endsnippet

snippet AudioControl.ar
AudioControl.ar(${1:values: nil})
endsnippet

snippet AudioControl.isAudioControlUGen
AudioControl.isAudioControlUGen(${1:})
endsnippet

snippet AudioControl.isControlUGen
AudioControl.isControlUGen(${1:})
endsnippet

snippet AudioIn.ar
AudioIn.ar(${1:channel: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet AudioIn.channelOffset
AudioIn.channelOffset(${1:})
endsnippet

snippet BAllPass.ar
BAllPass.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BAllPass.sc
BAllPass.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0})
endsnippet

snippet BBandPass.ar
BBandPass.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: bw: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BBandPass.sc
BBandPass.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: bw: 1.0})
endsnippet

snippet BBandStop.ar
BBandStop.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: bw: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BBandStop.sc
BBandStop.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: bw: 1.0})
endsnippet

snippet BHiPass.ar
BHiPass.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BHiPass.sc
BHiPass.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0})
endsnippet

snippet BHiPass4.ar
BHiPass4.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BHiShelf.ar
BHiShelf.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rs: 1.0}, ${4: db: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet BHiShelf.sc
BHiShelf.sc(${1:dummy: nil}, ${2: freq: 120.0}, ${3: rs: 1.0}, ${4: db: 0.0})
endsnippet

snippet BLowPass.ar
BLowPass.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BLowPass.sc
BLowPass.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0})
endsnippet

snippet BLowPass4.ar
BLowPass4.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BLowShelf.ar
BLowShelf.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rs: 1.0}, ${4: db: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet BLowShelf.sc
BLowShelf.sc(${1:dummy: nil}, ${2: freq: 120.0}, ${3: rs: 1.0}, ${4: db: 0.0})
endsnippet

snippet BPF.ar
BPF.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BPF.kr
BPF.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BPeakEQ.ar
BPeakEQ.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: db: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet BPeakEQ.sc
BPeakEQ.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: db: 0.0})
endsnippet

snippet Bag.new
Bag.new(${1:n: 4})
endsnippet

snippet Balance2.ar
Balance2.ar(${1:left: nil}, ${2: right: nil}, ${3: pos: 0.0}, ${4: level: 1.0})
endsnippet

snippet Balance2.kr
Balance2.kr(${1:left: nil}, ${2: right: nil}, ${3: pos: 0.0}, ${4: level: 1.0})
endsnippet

snippet Ball.ar
Ball.ar(${1:in: 0.0}, ${2: g: 1}, ${3: damp: 0}, ${4: friction: 0.01})
endsnippet

snippet Ball.kr
Ball.kr(${1:in: 0.0}, ${2: g: 1}, ${3: damp: 0}, ${4: friction: 0.01})
endsnippet

snippet BeatTrack.kr
BeatTrack.kr(${1:chain: nil}, ${2: lock: 0})
endsnippet

snippet BeatTrack2.kr
BeatTrack2.kr(${1:busindex: nil}, ${2: numfeatures: nil}, ${3: windowsize: 2.0}, ${4: phaseaccuracy: 0.02}, ${5: lock: 0}, ${6: weightingscheme: nil})
endsnippet

snippet BelaScope.scope
BelaScope.scope(${1:channelOffset: nil}, ${2: signals: nil})
endsnippet

snippet BelaScope.monitorBus
BelaScope.monitorBus(${1:channelOffset: nil}, ${2: busindex: nil}, ${3: numChannels: nil}, ${4: target: nil}, ${5: rate: audio})
endsnippet

snippet BelaScope.prInputAsAudioRateUGens
BelaScope.prInputAsAudioRateUGens(${1:signals: nil})
endsnippet

snippet BelaScopeOut.ar
BelaScopeOut.ar(${1:offset: 0}, ${2: channelsArray: nil})
endsnippet

snippet BelaScopeOut.numFixedArgs
BelaScopeOut.numFixedArgs(${1:})
endsnippet

snippet BelaServerOptions.initClass
BelaServerOptions.initClass(${1:})
endsnippet

snippet BendResponder.init
BendResponder.init(${1:})
endsnippet

snippet BendResponder.initialized
BendResponder.initialized(${1:})
endsnippet

snippet BendResponder.responders
BendResponder.responders(${1:})
endsnippet

snippet BendResponder.add
BendResponder.add(${1:resp: nil})
endsnippet

snippet BendResponder.remove
BendResponder.remove(${1:resp: nil})
endsnippet

snippet Bessel.new
Bessel.new(${1:x: nil})
endsnippet

snippet BiPanB2.ar
BiPanB2.ar(${1:inA: nil}, ${2: inB: nil}, ${3: azimuth: nil}, ${4: gain: 1})
endsnippet

snippet BiPanB2.kr
BiPanB2.kr(${1:inA: nil}, ${2: inB: nil}, ${3: azimuth: nil}, ${4: gain: 1})
endsnippet

snippet BinaryOpFunction.new
BinaryOpFunction.new(${1:selector: nil}, ${2: a: nil}, ${3: b: nil}, ${4: adverb: nil})
endsnippet

snippet BinaryOpPlug.new
BinaryOpPlug.new(${1:operator: nil}, ${2: a: nil}, ${3: b: nil})
endsnippet

snippet BinaryOpStream.new
BinaryOpStream.new(${1:operator: nil}, ${2: a: nil}, ${3: b: nil})
endsnippet

snippet BinaryOpUGen.new
BinaryOpUGen.new(${1:selector: nil}, ${2: a: nil}, ${3: b: nil})
endsnippet

snippet BinaryOpUGen.new1
BinaryOpUGen.new1(${1:rate: nil}, ${2: selector: nil}, ${3: a: nil}, ${4: b: nil})
endsnippet

snippet BinaryOpXStream.new
BinaryOpXStream.new(${1:operator: nil}, ${2: a: nil}, ${3: b: nil})
endsnippet

snippet Blip.ar
Blip.ar(${1:freq: 440.0}, ${2: numharm: 200.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Blip.kr
Blip.kr(${1:freq: 440.0}, ${2: numharm: 200.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Boolean.new
Boolean.new(${1:})
endsnippet

snippet Boolean.newCopyArgs
Boolean.newCopyArgs(${1:})
endsnippet

snippet BroadcastServer.new
BroadcastServer.new(${1:name: nil}, ${2: addr: nil}, ${3: options: nil}, ${4: clientID: nil})
endsnippet

snippet BroadcastServer.for
BroadcastServer.for(${1:homeServer: nil}, ${2: addresses: nil})
endsnippet

snippet BufCombN.ar
BufCombN.ar(${1:buf: 0}, ${2: in: 0.0}, ${3: delaytime: 0.2}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet BufDelayN.ar
BufDelayN.ar(${1:buf: 0}, ${2: in: 0.0}, ${3: delaytime: 0.2}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BufDelayN.kr
BufDelayN.kr(${1:buf: 0}, ${2: in: 0.0}, ${3: delaytime: 0.2}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BufEnvir.new
BufEnvir.new(${1:server: nil})
endsnippet

snippet BufInfoUGenBase.kr
BufInfoUGenBase.kr(${1:bufnum: nil})
endsnippet

snippet BufInfoUGenBase.ir
BufInfoUGenBase.ir(${1:bufnum: nil})
endsnippet

snippet BufRd.ar
BufRd.ar(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: phase: 0.0}, ${4: loop: 1.0}, ${5: interpolation: 2})
endsnippet

snippet BufRd.kr
BufRd.kr(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: phase: 0.0}, ${4: loop: 1.0}, ${5: interpolation: 2})
endsnippet

snippet BufWr.ar
BufWr.ar(${1:inputArray: nil}, ${2: bufnum: 0}, ${3: phase: 0.0}, ${4: loop: 1.0})
endsnippet

snippet BufWr.kr
BufWr.kr(${1:inputArray: nil}, ${2: bufnum: 0}, ${3: phase: 0.0}, ${4: loop: 1.0})
endsnippet

snippet Buffer.initClass
Buffer.initClass(${1:})
endsnippet

snippet Buffer.new
Buffer.new(${1:server: nil}, ${2: numFrames: nil}, ${3: numChannels: nil}, ${4: bufnum: nil})
endsnippet

snippet Buffer.alloc
Buffer.alloc(${1:server: nil}, ${2: numFrames: nil}, ${3: numChannels: 1}, ${4: completionMessage: nil}, ${5: bufnum: nil})
endsnippet

snippet Buffer.allocConsecutive
Buffer.allocConsecutive(${1:numBufs: 1}, ${2: server: nil}, ${3: numFrames: nil}, ${4: numChannels: 1}, ${5: completionMessage: nil}, ${6: bufnum: nil})
endsnippet

snippet Buffer.read
Buffer.read(${1:server: nil}, ${2: path: nil}, ${3: startFrame: 0}, ${4: numFrames: -1}, ${5: action: nil}, ${6: bufnum: nil})
endsnippet

snippet Buffer.readChannel
Buffer.readChannel(${1:server: nil}, ${2: path: nil}, ${3: startFrame: 0}, ${4: numFrames: -1}, ${5: channels: nil}, ${6: action: nil}, ${7: bufnum: nil})
endsnippet

snippet Buffer.readNoUpdate
Buffer.readNoUpdate(${1:server: nil}, ${2: path: nil}, ${3: startFrame: 0}, ${4: numFrames: -1}, ${5: bufnum: nil}, ${6: completionMessage: nil})
endsnippet

snippet Buffer.cueSoundFile
Buffer.cueSoundFile(${1:server: nil}, ${2: path: nil}, ${3: startFrame: 0}, ${4: numChannels: 2}, ${5: bufferSize: 32768}, ${6: completionMessage: nil})
endsnippet

snippet Buffer.loadCollection
Buffer.loadCollection(${1:server: nil}, ${2: collection: nil}, ${3: numChannels: 1}, ${4: action: nil})
endsnippet

snippet Buffer.sendCollection
Buffer.sendCollection(${1:server: nil}, ${2: collection: nil}, ${3: numChannels: 1}, ${4: wait: -1}, ${5: action: nil})
endsnippet

snippet Buffer.freeAll
Buffer.freeAll(${1:server: nil})
endsnippet

snippet Buffer.initServerCache
Buffer.initServerCache(${1:server: nil})
endsnippet

snippet Buffer.clearServerCaches
Buffer.clearServerCaches(${1:server: nil})
endsnippet

snippet Buffer.cachedBuffersDo
Buffer.cachedBuffersDo(${1:server: nil}, ${2: func: nil})
endsnippet

snippet Buffer.cachedBufferAt
Buffer.cachedBufferAt(${1:server: nil}, ${2: bufnum: nil})
endsnippet

snippet Buffer.loadDialog
Buffer.loadDialog(${1:server: nil}, ${2: startFrame: 0}, ${3: numFrames: nil}, ${4: action: nil}, ${5: bufnum: nil})
endsnippet

snippet BundleNetAddr.copyFrom
BundleNetAddr.copyFrom(${1:addr: nil}, ${2: bundle: nil})
endsnippet

snippet Bus.control
Bus.control(${1:server: nil}, ${2: numChannels: 1})
endsnippet

snippet Bus.audio
Bus.audio(${1:server: nil}, ${2: numChannels: 1})
endsnippet

snippet Bus.alloc
Bus.alloc(${1:rate: nil}, ${2: server: nil}, ${3: numChannels: 1})
endsnippet

snippet Bus.new
Bus.new(${1:rate: audio}, ${2: index: 0}, ${3: numChannels: 2}, ${4: server: nil})
endsnippet

snippet Bus.newFrom
Bus.newFrom(${1:bus: nil}, ${2: offset: nil}, ${3: numChannels: 1})
endsnippet

snippet BusPlug.new
BusPlug.new(${1:server: nil})
endsnippet

snippet BusPlug.for
BusPlug.for(${1:bus: nil})
endsnippet

snippet BusPlug.audio
BusPlug.audio(${1:server: nil}, ${2: numChannels: nil})
endsnippet

snippet BusPlug.control
BusPlug.control(${1:server: nil}, ${2: numChannels: nil})
endsnippet

snippet BusScopeSynth.new
BusScopeSynth.new(${1:server: nil})
endsnippet

snippet BusSynthDefs.initClass
BusSynthDefs.initClass(${1:})
endsnippet

snippet BusSynthDefs.doOnStartUp
BusSynthDefs.doOnStartUp(${1:})
endsnippet

snippet Button.qtClass
Button.qtClass(${1:})
endsnippet

snippet CCResponder.new
CCResponder.new(${1:function: nil}, ${2: src: nil}, ${3: chan: nil}, ${4: num: nil}, ${5: value: nil}, ${6: install: true}, ${7: swallowEvent: false})
endsnippet

snippet CCResponder.initialized
CCResponder.initialized(${1:})
endsnippet

snippet CCResponder.responders
CCResponder.responders(${1:})
endsnippet

snippet CCResponder.add
CCResponder.add(${1:resp: nil})
endsnippet

snippet CCResponder.remove
CCResponder.remove(${1:resp: nil})
endsnippet

snippet CCResponder.init
CCResponder.init(${1:})
endsnippet

snippet COsc.ar
COsc.ar(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: beats: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet COsc.kr
COsc.kr(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: beats: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Cartesian.new
Cartesian.new(${1:x: 0}, ${2: y: 0}, ${3: z: 0})
endsnippet

snippet CartesianArray.new
CartesianArray.new(${1:n: nil})
endsnippet

snippet Changed.kr
Changed.kr(${1:input: nil}, ${2: threshold: 0})
endsnippet

snippet Changed.ar
Changed.ar(${1:input: nil}, ${2: threshold: 0})
endsnippet

snippet Char.new
Char.new(${1:})
endsnippet

snippet CheckBadValues.ar
CheckBadValues.ar(${1:in: 0.0}, ${2: id: 0}, ${3: post: 2})
endsnippet

snippet CheckBadValues.kr
CheckBadValues.kr(${1:in: 0.0}, ${2: id: 0}, ${3: post: 2})
endsnippet

snippet CheckBox.qtClass
CheckBox.qtClass(${1:})
endsnippet

snippet CheckBox.new
CheckBox.new(${1:parent: nil}, ${2: bounds: nil}, ${3: text: nil})
endsnippet

snippet Class.initClassTree
Class.initClassTree(${1:aClass: nil})
endsnippet

snippet Class.allClasses
Class.allClasses(${1:})
endsnippet

snippet Class.findAllReferences
Class.findAllReferences(${1:aSymbol: nil})
endsnippet

snippet ClassBrowser.new
ClassBrowser.new(${1:class: nil})
endsnippet

snippet ClassBrowser.getClass
ClassBrowser.getClass(${1:method: nil})
endsnippet

snippet ClassBrowser.initGUI
ClassBrowser.initGUI(${1:})
endsnippet

snippet CleanupStream.new
CleanupStream.new(${1:stream: nil}, ${2: cleanup: nil})
endsnippet

snippet ClearBuf.new
ClearBuf.new(${1:buf: nil})
endsnippet

snippet ClearList.new
ClearList.new(${1:size: nil})
endsnippet

snippet Client.new
Client.new(${1:name: default}, ${2: addr: nil})
endsnippet

snippet Client.initClass
Client.initClass(${1:})
endsnippet

snippet ClientFunc.new
ClientFunc.new(${1:name: nil}, ${2: func: nil})
endsnippet

snippet ClientFunc.initClass
ClientFunc.initClass(${1:})
endsnippet

snippet ClientFunc.clear
ClientFunc.clear(${1:})
endsnippet

snippet ClientFunc.at
ClientFunc.at(${1:key: nil})
endsnippet

snippet ClientFunc.removeAt
ClientFunc.removeAt(${1:key: nil})
endsnippet

snippet Clock.play
Clock.play(${1:task: nil})
endsnippet

snippet Clock.seconds
Clock.seconds(${1:})
endsnippet

snippet Clock.beats
Clock.beats(${1:})
endsnippet

snippet Clock.beats2secs
Clock.beats2secs(${1:beats: nil})
endsnippet

snippet Clock.secs2beats
Clock.secs2beats(${1:secs: nil})
endsnippet

snippet Clock.beats2bars
Clock.beats2bars(${1:})
endsnippet

snippet Clock.bars2beats
Clock.bars2beats(${1:})
endsnippet

snippet Clock.timeToNextBeat
Clock.timeToNextBeat(${1:})
endsnippet

snippet Clock.nextTimeOnGrid
Clock.nextTimeOnGrid(${1:quant: 1}, ${2: phase: 0})
endsnippet

snippet CmdPeriod.doOnce
CmdPeriod.doOnce(${1:object: nil})
endsnippet

snippet CmdPeriod.run
CmdPeriod.run(${1:})
endsnippet

snippet CmdPeriod.hardRun
CmdPeriod.hardRun(${1:})
endsnippet

snippet CoinGate.ar
CoinGate.ar(${1:prob: nil}, ${2: in: nil})
endsnippet

snippet CoinGate.kr
CoinGate.kr(${1:prob: nil}, ${2: in: nil})
endsnippet

snippet CollStream.new
CollStream.new(${1:collection: nil})
endsnippet

snippet CollStream.on
CollStream.on(${1:aCollection: nil})
endsnippet

snippet Collection.newFrom
Collection.newFrom(${1:aCollection: nil})
endsnippet

snippet Collection.with
Collection.with(${1:args: [  ]})
endsnippet

snippet Collection.fill
Collection.fill(${1:size: nil}, ${2: function: nil})
endsnippet

snippet Collection.fill2D
Collection.fill2D(${1:rows: nil}, ${2: cols: nil}, ${3: function: nil})
endsnippet

snippet Collection.fill3D
Collection.fill3D(${1:planes: nil}, ${2: rows: nil}, ${3: cols: nil}, ${4: function: nil})
endsnippet

snippet Collection.fillND
Collection.fillND(${1:dimensions: nil}, ${2: function: nil}, ${3: args: [  ]})
endsnippet

snippet Color.new
Color.new(${1:red: 0.0}, ${2: green: 0.0}, ${3: blue: 0.0}, ${4: alpha: 1.0})
endsnippet

snippet Color.new255
Color.new255(${1:red: 0}, ${2: green: 0}, ${3: blue: 0}, ${4: alpha: 255})
endsnippet

snippet Color.fromArray
Color.fromArray(${1:array: nil})
endsnippet

snippet Color.black
Color.black(${1:})
endsnippet

snippet Color.white
Color.white(${1:})
endsnippet

snippet Color.red
Color.red(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.green
Color.green(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.blue
Color.blue(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.cyan
Color.cyan(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.magenta
Color.magenta(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.yellow
Color.yellow(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.clear
Color.clear(${1:})
endsnippet

snippet Color.grey
Color.grey(${1:grey: 0.5}, ${2: alpha: 1.0})
endsnippet

snippet Color.gray
Color.gray(${1:gray: 0.5}, ${2: alpha: 1.0})
endsnippet

snippet Color.rand
Color.rand(${1:lo: 0.3}, ${2: hi: 0.9})
endsnippet

snippet Color.hsv
Color.hsv(${1:hue: nil}, ${2: sat: nil}, ${3: val: nil}, ${4: alpha: 1})
endsnippet

snippet Color.fromHexString
Color.fromHexString(${1:string: nil})
endsnippet

snippet CombN.ar
CombN.ar(${1:in: 0.0}, ${2: maxdelaytime: 0.2}, ${3: delaytime: 0.2}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet CombN.kr
CombN.kr(${1:in: 0.0}, ${2: maxdelaytime: 0.2}, ${3: delaytime: 0.2}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet Compander.ar
Compander.ar(${1:in: 0.0}, ${2: control: 0.0}, ${3: thresh: 0.5}, ${4: slopeBelow: 1.0}, ${5: slopeAbove: 1.0}, ${6: clampTime: 0.01}, ${7: relaxTime: 0.1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet CompanderD.ar
CompanderD.ar(${1:in: 0.0}, ${2: thresh: 0.5}, ${3: slopeBelow: 1.0}, ${4: slopeAbove: 1.0}, ${5: clampTime: 0.01}, ${6: relaxTime: 0.01}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet Complex.new
Complex.new(${1:real: nil}, ${2: imag: nil})
endsnippet

snippet CondVar.new
CondVar.new(${1:})
endsnippet

snippet Condition.new
Condition.new(${1:test: false})
endsnippet

snippet ContiguousBlock.new
ContiguousBlock.new(${1:start: nil}, ${2: size: nil})
endsnippet

snippet ContiguousBlockAllocator.new
ContiguousBlockAllocator.new(${1:size: nil}, ${2: pos: 0}, ${3: addrOffset: 0})
endsnippet

snippet Control.names
Control.names(${1:names: nil})
endsnippet

snippet Control.kr
Control.kr(${1:values: nil})
endsnippet

snippet Control.ir
Control.ir(${1:values: nil})
endsnippet

snippet Control.isControlUGen
Control.isControlUGen(${1:})
endsnippet

snippet ControlName.new
ControlName.new(${1:name: nil}, ${2: index: nil}, ${3: rate: nil}, ${4: defaultValue: nil}, ${5: argNum: nil}, ${6: lag: nil})
endsnippet

snippet ControlSpec.new
ControlSpec.new(${1:minval: 0.0}, ${2: maxval: 1.0}, ${3: warp: lin}, ${4: step: 0.0}, ${5: default: nil}, ${6: units: nil}, ${7: grid: nil})
endsnippet

snippet ControlSpec.newFrom
ControlSpec.newFrom(${1:similar: nil})
endsnippet

snippet ControlSpec.initClass
ControlSpec.initClass(${1:})
endsnippet

snippet Controller.oscPath
Controller.oscPath(${1:})
endsnippet

snippet Controller.getLayoutSection
Controller.getLayoutSection(${1:layoutSection: nil})
endsnippet

snippet Convolution.ar
Convolution.ar(${1:in: nil}, ${2: kernel: nil}, ${3: framesize: 512}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Convolution2.ar
Convolution2.ar(${1:in: nil}, ${2: kernel: nil}, ${3: trigger: 0}, ${4: framesize: 2048}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet Convolution2L.ar
Convolution2L.ar(${1:in: nil}, ${2: kernel: nil}, ${3: trigger: 0}, ${4: framesize: 2048}, ${5: crossfade: 1}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet Convolution3.ar
Convolution3.ar(${1:in: nil}, ${2: kernel: nil}, ${3: trigger: 0}, ${4: framesize: 2048}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet Convolution3.kr
Convolution3.kr(${1:in: nil}, ${2: kernel: nil}, ${3: trigger: 0}, ${4: framesize: 2048}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet CoverMe.initClass
CoverMe.initClass(${1:})
endsnippet

snippet CoverMe.start
CoverMe.start(${1:})
endsnippet

snippet CoverMe.stop
CoverMe.stop(${1:})
endsnippet

snippet CoverMe.showFiles
CoverMe.showFiles(${1:})
endsnippet

snippet Crackle.ar
Crackle.ar(${1:chaosParam: 1.5}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Crackle.kr
Crackle.kr(${1:chaosParam: 1.5}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet CurveWarp.new
CurveWarp.new(${1:spec: nil}, ${2: curve: -2})
endsnippet

snippet CuspN.ar
CuspN.ar(${1:freq: 22050}, ${2: a: 1}, ${3: b: 1.9}, ${4: xi: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet CustomViewAction.new
CustomViewAction.new(${1:view: nil}, ${2: function: nil})
endsnippet

snippet CustomViewAction.qtClass
CustomViewAction.qtClass(${1:})
endsnippet

snippet DC.ar
DC.ar(${1:in: 0.0})
endsnippet

snippet DC.kr
DC.kr(${1:in: 0.0})
endsnippet

snippet Date.getDate
Date.getDate(${1:})
endsnippet

snippet Date.localtime
Date.localtime(${1:})
endsnippet

snippet Date.gmtime
Date.gmtime(${1:})
endsnippet

snippet Date.new
Date.new(${1:year: nil}, ${2: month: nil}, ${3: day: nil}, ${4: hour: nil}, ${5: minute: nil}, ${6: second: nil}, ${7: dayOfWeek: nil}, ${8: rawSeconds: nil})
endsnippet

snippet Date.seed
Date.seed(${1:})
endsnippet

snippet Dbrown.new
Dbrown.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: step: 0.01}, ${4: length: inf})
endsnippet

snippet Dbufrd.new
Dbufrd.new(${1:bufnum: 0}, ${2: phase: 0.0}, ${3: loop: 1.0})
endsnippet

snippet Dbufwr.new
Dbufwr.new(${1:input: 0.0}, ${2: bufnum: 0}, ${3: phase: 0.0}, ${4: loop: 1.0})
endsnippet

snippet Dconst.new
Dconst.new(${1:sum: nil}, ${2: in: nil}, ${3: tolerance: 0.001})
endsnippet

snippet Ddup.new
Ddup.new(${1:n: nil}, ${2: in: nil})
endsnippet

snippet Decay.ar
Decay.ar(${1:in: 0.0}, ${2: decayTime: 1.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Decay.kr
Decay.kr(${1:in: 0.0}, ${2: decayTime: 1.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Decay2.ar
Decay2.ar(${1:in: 0.0}, ${2: attackTime: 0.01}, ${3: decayTime: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Decay2.kr
Decay2.kr(${1:in: 0.0}, ${2: attackTime: 0.01}, ${3: decayTime: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DecodeB2.ar
DecodeB2.ar(${1:numChans: nil}, ${2: w: nil}, ${3: x: nil}, ${4: y: nil}, ${5: orientation: 0.5})
endsnippet

snippet DecodeB2.kr
DecodeB2.kr(${1:numChans: nil}, ${2: w: nil}, ${3: x: nil}, ${4: y: nil}, ${5: orientation: 0.5})
endsnippet

snippet DegreeToKey.ar
DegreeToKey.ar(${1:bufnum: nil}, ${2: in: 0.0}, ${3: octave: 12.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DegreeToKey.kr
DegreeToKey.kr(${1:bufnum: nil}, ${2: in: 0.0}, ${3: octave: 12.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DelTapRd.ar
DelTapRd.ar(${1:buffer: nil}, ${2: phase: nil}, ${3: delTime: nil}, ${4: interp: 1}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet DelTapRd.kr
DelTapRd.kr(${1:buffer: nil}, ${2: phase: nil}, ${3: delTime: nil}, ${4: interp: 1}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet DelTapWr.ar
DelTapWr.ar(${1:buffer: nil}, ${2: in: nil})
endsnippet

snippet DelTapWr.kr
DelTapWr.kr(${1:buffer: nil}, ${2: in: nil})
endsnippet

snippet Delay1.ar
Delay1.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Delay1.kr
Delay1.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet DelayN.ar
DelayN.ar(${1:in: 0.0}, ${2: maxdelaytime: 0.2}, ${3: delaytime: 0.2}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DelayN.kr
DelayN.kr(${1:in: 0.0}, ${2: maxdelaytime: 0.2}, ${3: delaytime: 0.2}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Demand.ar
Demand.ar(${1:trig: nil}, ${2: reset: nil}, ${3: demandUGens: nil})
endsnippet

snippet Demand.kr
Demand.kr(${1:trig: nil}, ${2: reset: nil}, ${3: demandUGens: nil})
endsnippet

snippet DemandEnvGen.kr
DemandEnvGen.kr(${1:level: nil}, ${2: dur: nil}, ${3: shape: 1}, ${4: curve: 0}, ${5: gate: 1.0}, ${6: reset: 1.0}, ${7: levelScale: 1.0}, ${8: levelBias: 0.0}, ${9: timeScale: 1.0}, ${10: doneAction: 0})
endsnippet

snippet DemandEnvGen.ar
DemandEnvGen.ar(${1:level: nil}, ${2: dur: nil}, ${3: shape: 1}, ${4: curve: 0}, ${5: gate: 1.0}, ${6: reset: 1.0}, ${7: levelScale: 1.0}, ${8: levelBias: 0.0}, ${9: timeScale: 1.0}, ${10: doneAction: 0})
endsnippet

snippet DeprecatedError.new
DeprecatedError.new(${1:receiver: nil}, ${2: method: nil}, ${3: alternateMethod: nil}, ${4: class: nil})
endsnippet

snippet DetectSilence.ar
DetectSilence.ar(${1:in: 0.0}, ${2: amp: 0.0001}, ${3: time: 0.1}, ${4: doneAction: 0})
endsnippet

snippet DetectSilence.kr
DetectSilence.kr(${1:in: 0.0}, ${2: amp: 0.0001}, ${3: time: 0.1}, ${4: doneAction: 0})
endsnippet

snippet Dgeom.new
Dgeom.new(${1:start: 1}, ${2: grow: 2}, ${3: length: inf})
endsnippet

snippet Dialog.openPanel
Dialog.openPanel(${1:okFunc: nil}, ${2: cancelFunc: nil}, ${3: multipleSelection: false}, ${4: path: nil})
endsnippet

snippet Dialog.savePanel
Dialog.savePanel(${1:okFunc: nil}, ${2: cancelFunc: nil}, ${3: path: nil})
endsnippet

snippet Dialog.getPaths
Dialog.getPaths(${1:okFunc: nil}, ${2: cancelFunc: nil}, ${3: allowsMultiple: true})
endsnippet

snippet Dictionary.new
Dictionary.new(${1:n: 8})
endsnippet

snippet Dictionary.newFrom
Dictionary.newFrom(${1:aCollection: nil})
endsnippet

snippet DigitalIO.ar
DigitalIO.ar(${1:digitalPin: 0}, ${2: output: 0}, ${3: pinMode: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DigitalIO.kr
DigitalIO.kr(${1:digitalPin: 0}, ${2: output: 0}, ${3: pinMode: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DigitalIn.ar
DigitalIn.ar(${1:digitalPin: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet DigitalIn.kr
DigitalIn.kr(${1:digitalPin: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet DigitalOut.ar
DigitalOut.ar(${1:digitalPin: 0}, ${2: output: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet DigitalOut.kr
DigitalOut.kr(${1:digitalPin: 0}, ${2: output: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet DiskIn.ar
DiskIn.ar(${1:numChannels: nil}, ${2: bufnum: nil}, ${3: loop: 0})
endsnippet

snippet DiskOut.ar
DiskOut.ar(${1:bufnum: nil}, ${2: channelsArray: nil})
endsnippet

snippet Document.new
Document.new(${1:path: nil}, ${2: dataptr: nil})
endsnippet

snippet Document.current
Document.current(${1:})
endsnippet

snippet Document.dir_
Document.dir_(${1:path: nil})
endsnippet

snippet DoesNotUnderstandError.new
DoesNotUnderstandError.new(${1:receiver: nil}, ${2: selector: nil}, ${3: args: nil})
endsnippet

snippet Done.kr
Done.kr(${1:src: nil})
endsnippet

snippet Download.new
Download.new(${1:requestedURL: nil}, ${2: localPath: nil}, ${3: finishedFunc: nil}, ${4: errorFunc: nil}, ${5: progressFunc: nil})
endsnippet

snippet Download.qtClass
Download.qtClass(${1:})
endsnippet

snippet Download.cancelAll
Download.cancelAll(${1:})
endsnippet

snippet Dpoll.new
Dpoll.new(${1:in: nil}, ${2: label: nil}, ${3: run: 1}, ${4: trigid: -1})
endsnippet

snippet Dpoll.new1
Dpoll.new1(${1:rate: nil}, ${2: in: nil}, ${3: label: nil}, ${4: run: nil}, ${5: trigid: nil})
endsnippet

snippet DragView.new
DragView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet DrawGrid.new
DrawGrid.new(${1:bounds: nil}, ${2: horzGrid: nil}, ${3: vertGrid: nil})
endsnippet

snippet DrawGrid.test
DrawGrid.test(${1:horzGrid: nil}, ${2: vertGrid: nil}, ${3: bounds: nil})
endsnippet

snippet DrawGridX.new
DrawGridX.new(${1:grid: nil})
endsnippet

snippet Dreset.new
Dreset.new(${1:in: nil}, ${2: reset: 0.0})
endsnippet

snippet Dseries.new
Dseries.new(${1:start: 1}, ${2: step: 1}, ${3: length: inf})
endsnippet

snippet Dstutter.initClass
Dstutter.initClass(${1:})
endsnippet

snippet Dstutter.new
Dstutter.new(${1:n: nil}, ${2: in: nil})
endsnippet

snippet Dswitch1.new
Dswitch1.new(${1:list: nil}, ${2: index: nil})
endsnippet

snippet Dunique.new
Dunique.new(${1:source: nil}, ${2: maxBufferSize: 1024}, ${3: protected: true})
endsnippet

snippet Dust.ar
Dust.ar(${1:density: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Dust.kr
Dust.kr(${1:density: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Dust2.ar
Dust2.ar(${1:density: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Dust2.kr
Dust2.kr(${1:density: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Duty.ar
Duty.ar(${1:dur: 1.0}, ${2: reset: 0.0}, ${3: level: 1.0}, ${4: doneAction: 0})
endsnippet

snippet Duty.kr
Duty.kr(${1:dur: 1.0}, ${2: reset: 0.0}, ${3: level: 1.0}, ${4: doneAction: 0})
endsnippet

snippet Dwhite.new
Dwhite.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: length: inf})
endsnippet

snippet Dwrand.new
Dwrand.new(${1:list: nil}, ${2: weights: nil}, ${3: repeats: 1})
endsnippet

snippet DynKlang.ar
DynKlang.ar(${1:specificationsArrayRef: nil}, ${2: freqscale: 1.0}, ${3: freqoffset: 0.0})
endsnippet

snippet DynKlang.kr
DynKlang.kr(${1:specificationsArrayRef: nil}, ${2: freqscale: 1.0}, ${3: freqoffset: 0.0})
endsnippet

snippet DynKlang.new1
DynKlang.new1(${1:rate: nil}, ${2: specificationsArrayRef: nil}, ${3: freqscale: 1.0}, ${4: freqoffset: 0.0})
endsnippet

snippet DynKlank.ar
DynKlank.ar(${1:specificationsArrayRef: nil}, ${2: input: nil}, ${3: freqscale: 1.0}, ${4: freqoffset: 0.0}, ${5: decayscale: 1.0})
endsnippet

snippet DynKlank.kr
DynKlank.kr(${1:specificationsArrayRef: nil}, ${2: input: nil}, ${3: freqscale: 1.0}, ${4: freqoffset: 0.0}, ${5: decayscale: 1.0})
endsnippet

snippet DynKlank.new1
DynKlank.new1(${1:rate: nil}, ${2: specificationsArrayRef: nil}, ${3: input: nil}, ${4: freqscale: 1.0}, ${5: freqoffset: 0.0}, ${6: decayscale: 1.0})
endsnippet

snippet EZControlSpecEditor.new
EZControlSpecEditor.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: Mn/Mx/Wp/Stp}, ${4: controlSpec: nil}, ${5: labelWidth: 100}, ${6: labelHeight: 20}, ${7: layout: horz}, ${8: gap: nil}, ${9: margin: nil})
endsnippet

snippet EZKnob.new
EZKnob.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: controlSpec: nil}, ${5: action: nil}, ${6: initVal: nil}, ${7: initAction: false}, ${8: labelWidth: 60}, ${9: knobSize: nil}, ${10: unitWidth: 0}, ${11: labelHeight: 20}, ${12: layout: vert}, ${13: gap: nil}, ${14: margin: nil})
endsnippet

snippet EZLists.new
EZLists.new(${1:parentView: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: items: nil}, ${5: globalAction: nil}, ${6: initVal: 0}, ${7: initAction: false}, ${8: labelWidth: nil}, ${9: labelHeight: 20}, ${10: layout: nil}, ${11: gap: nil}, ${12: margin: nil})
endsnippet

snippet EZNumber.new
EZNumber.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: controlSpec: nil}, ${5: action: nil}, ${6: initVal: nil}, ${7: initAction: false}, ${8: labelWidth: 60}, ${9: numberWidth: nil}, ${10: unitWidth: 0}, ${11: labelHeight: 20}, ${12: layout: horz}, ${13: gap: nil}, ${14: margin: nil})
endsnippet

snippet EZRanger.new
EZRanger.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: controlSpec: nil}, ${5: action: nil}, ${6: initVal: nil}, ${7: initAction: false}, ${8: labelWidth: 60}, ${9: numberWidth: 45}, ${10: unitWidth: 0}, ${11: labelHeight: 20}, ${12: layout: horz}, ${13: gap: nil}, ${14: margin: nil})
endsnippet

snippet EZScroller.new
EZScroller.new(${1:w: nil}, ${2: bounds: nil}, ${3: maxItems: nil}, ${4: numItems: nil}, ${5: action: nil}, ${6: initVal: 0})
endsnippet

snippet EZSlider.new
EZSlider.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: controlSpec: nil}, ${5: action: nil}, ${6: initVal: nil}, ${7: initAction: false}, ${8: labelWidth: 60}, ${9: numberWidth: 45}, ${10: unitWidth: 0}, ${11: labelHeight: 20}, ${12: layout: horz}, ${13: gap: nil}, ${14: margin: nil})
endsnippet

snippet EZText.new
EZText.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: action: nil}, ${5: initVal: nil}, ${6: initAction: false}, ${7: labelWidth: 60}, ${8: textWidth: nil}, ${9: labelHeight: 20}, ${10: layout: horz}, ${11: gap: nil}, ${12: margin: nil})
endsnippet

snippet Element.new
Element.new(${1:controlType: nil}, ${2: id: nil}, ${3: uid: nil}, ${4: messageTypes: nil}, ${5: oscRootPath: nil}, ${6: listeners: nil}, ${7: outConnection: nil})
endsnippet

snippet EmbedOnce.new
EmbedOnce.new(${1:stream: nil}, ${2: cleanup: nil})
endsnippet

snippet EndPointDetails.new
EndPointDetails.new(${1:uid: nil}, ${2: endPoint: nil})
endsnippet

snippet Env.new
Env.new(${1:levels: [ 0}, ${2: 1}, ${3: 0 ]}, ${4: times: [ 1}, ${5: 1 ]}, ${6: curve: lin}, ${7: releaseNode: nil}, ${8: loopNode: nil}, ${9: offset: 0})
endsnippet

snippet Env.newClear
Env.newClear(${1:numSegments: 8}, ${2: numChannels: 1})
endsnippet

snippet Env.initClass
Env.initClass(${1:})
endsnippet

snippet Env.triangle
Env.triangle(${1:dur: 1.0}, ${2: level: 1.0})
endsnippet

snippet Env.sine
Env.sine(${1:dur: 1.0}, ${2: level: 1.0})
endsnippet

snippet Env.perc
Env.perc(${1:attackTime: 0.01}, ${2: releaseTime: 1.0}, ${3: level: 1.0}, ${4: curve: -4.0})
endsnippet

snippet Env.linen
Env.linen(${1:attackTime: 0.01}, ${2: sustainTime: 1.0}, ${3: releaseTime: 1.0}, ${4: level: 1.0}, ${5: curve: lin})
endsnippet

snippet Env.xyc
Env.xyc(${1:xyc: nil})
endsnippet

snippet Env.pairs
Env.pairs(${1:pairs: nil}, ${2: curve: nil})
endsnippet

snippet Env.step
Env.step(${1:levels: [ 0}, ${2: 1 ]}, ${3: times: [ 1}, ${4: 1 ]}, ${5: releaseNode: nil}, ${6: loopNode: nil}, ${7: offset: 0})
endsnippet

snippet Env.cutoff
Env.cutoff(${1:releaseTime: 0.1}, ${2: level: 1.0}, ${3: curve: lin})
endsnippet

snippet Env.dadsr
Env.dadsr(${1:delayTime: 0.1}, ${2: attackTime: 0.01}, ${3: decayTime: 0.3}, ${4: sustainLevel: 0.5}, ${5: releaseTime: 1.0}, ${6: peakLevel: 1.0}, ${7: curve: -4.0}, ${8: bias: 0.0})
endsnippet

snippet Env.adsr
Env.adsr(${1:attackTime: 0.01}, ${2: decayTime: 0.3}, ${3: sustainLevel: 0.5}, ${4: releaseTime: 1.0}, ${5: peakLevel: 1.0}, ${6: curve: -4.0}, ${7: bias: 0.0})
endsnippet

snippet Env.asr
Env.asr(${1:attackTime: 0.01}, ${2: sustainLevel: 1.0}, ${3: releaseTime: 1.0}, ${4: curve: -4.0})
endsnippet

snippet Env.circle
Env.circle(${1:levels: nil}, ${2: times: nil}, ${3: curve: lin})
endsnippet

snippet Env.shapeNumber
Env.shapeNumber(${1:shapeName: nil})
endsnippet

snippet EnvGate.new
EnvGate.new(${1:i_level: 1}, ${2: gate: nil}, ${3: fadeTime: nil}, ${4: doneAction: 2}, ${5: curve: sin})
endsnippet

snippet EnvGen.ar
EnvGen.ar(${1:envelope: nil}, ${2: gate: 1.0}, ${3: levelScale: 1.0}, ${4: levelBias: 0.0}, ${5: timeScale: 1.0}, ${6: doneAction: 0})
endsnippet

snippet EnvGen.kr
EnvGen.kr(${1:envelope: nil}, ${2: gate: 1.0}, ${3: levelScale: 1.0}, ${4: levelBias: 0.0}, ${5: timeScale: 1.0}, ${6: doneAction: 0})
endsnippet

snippet EnvGen.convertEnv
EnvGen.convertEnv(${1:env: nil})
endsnippet

snippet EnvGen.new1
EnvGen.new1(${1:rate: nil}, ${2: gate: nil}, ${3: levelScale: nil}, ${4: levelBias: nil}, ${5: timeScale: nil}, ${6: doneAction: nil}, ${7: envArray: nil})
endsnippet

snippet EnvelopeView.qtClass
EnvelopeView.qtClass(${1:})
endsnippet

snippet EnvirGui.new
EnvirGui.new(${1:object: nil}, ${2: numItems: 8}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: [  ]})
endsnippet

snippet Environment.make
Environment.make(${1:function: nil})
endsnippet

snippet Environment.use
Environment.use(${1:function: nil})
endsnippet

snippet Environment.pop
Environment.pop(${1:})
endsnippet

snippet Environment.push
Environment.push(${1:envir: nil})
endsnippet

snippet EnvironmentRedirect.new
EnvironmentRedirect.new(${1:envir: nil})
endsnippet

snippet EnvironmentRedirect.make
EnvironmentRedirect.make(${1:function: nil})
endsnippet

snippet EnvironmentRedirect.use
EnvironmentRedirect.use(${1:function: nil})
endsnippet

snippet EnvironmentRedirect.newFrom
EnvironmentRedirect.newFrom(${1:aCollection: nil})
endsnippet

snippet EnvironmentRedirect.push
EnvironmentRedirect.push(${1:})
endsnippet

snippet EnvironmentRedirect.pop
EnvironmentRedirect.pop(${1:})
endsnippet

snippet Event.new
Event.new(${1:n: 8}, ${2: proto: nil}, ${3: parent: nil}, ${4: know: true})
endsnippet

snippet Event.default
Event.default(${1:})
endsnippet

snippet Event.silent
Event.silent(${1:dur: 1.0}, ${2: inEvent: nil})
endsnippet

snippet Event.addEventType
Event.addEventType(${1:type: nil}, ${2: func: nil}, ${3: parentEvent: nil})
endsnippet

snippet Event.addParentType
Event.addParentType(${1:type: nil}, ${2: parentEvent: nil})
endsnippet

snippet Event.removeEventType
Event.removeEventType(${1:type: nil})
endsnippet

snippet Event.removeParentType
Event.removeParentType(${1:type: nil})
endsnippet

snippet Event.parentTypes
Event.parentTypes(${1:})
endsnippet

snippet Event.eventTypes
Event.eventTypes(${1:})
endsnippet

snippet Event.initClass
Event.initClass(${1:})
endsnippet

snippet Event.makeDefaultSynthDef
Event.makeDefaultSynthDef(${1:})
endsnippet

snippet Event.makeParentEvents
Event.makeParentEvents(${1:})
endsnippet

snippet Event.checkIDs
Event.checkIDs(${1:id: nil}, ${2: server: nil})
endsnippet

snippet EventPatternProxy.defaultValue
EventPatternProxy.defaultValue(${1:})
endsnippet

snippet EventPatternProxy.parallelise
EventPatternProxy.parallelise(${1:list: nil})
endsnippet

snippet EventStreamCleanup.new
EventStreamCleanup.new(${1:})
endsnippet

snippet EventStreamPlayer.new
EventStreamPlayer.new(${1:stream: nil}, ${2: event: nil})
endsnippet

snippet EventTypesWithCleanup.initClass
EventTypesWithCleanup.initClass(${1:})
endsnippet

snippet EventTypesWithCleanup.cleanup
EventTypesWithCleanup.cleanup(${1:ev: nil}, ${2: flag: true})
endsnippet

snippet Exception.new
Exception.new(${1:what: nil})
endsnippet

snippet Executor.new
Executor.new(${1:})
endsnippet

snippet ExpRand.new
ExpRand.new(${1:lo: 0.01}, ${2: hi: 1.0})
endsnippet

snippet FBSineN.ar
FBSineN.ar(${1:freq: 22050}, ${2: im: 1}, ${3: fb: 0.1}, ${4: a: 1.1}, ${5: c: 0.5}, ${6: xi: 0.1}, ${7: yi: 0.1}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet FFT.new
FFT.new(${1:buffer: nil}, ${2: in: 0.0}, ${3: hop: 0.5}, ${4: wintype: 0}, ${5: active: 1}, ${6: winsize: 0})
endsnippet

snippet FFTTrigger.new
FFTTrigger.new(${1:buffer: nil}, ${2: hop: 0.5}, ${3: polar: 0.0})
endsnippet

snippet FOS.ar
FOS.ar(${1:in: 0.0}, ${2: a0: 0.0}, ${3: a1: 0.0}, ${4: b1: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet FOS.kr
FOS.kr(${1:in: 0.0}, ${2: a0: 0.0}, ${3: a1: 0.0}, ${4: b1: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet FSinOsc.ar
FSinOsc.ar(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet FSinOsc.kr
FSinOsc.kr(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Fdef.initClass
Fdef.initClass(${1:})
endsnippet

snippet Fdef.new
Fdef.new(${1:key: nil}, ${2: val: nil})
endsnippet

snippet File.initClass
File.initClass(${1:})
endsnippet

snippet File.new
File.new(${1:pathName: nil}, ${2: mode: nil})
endsnippet

snippet File.open
File.open(${1:pathName: nil}, ${2: mode: nil})
endsnippet

snippet File.use
File.use(${1:pathName: nil}, ${2: mode: nil}, ${3: function: nil})
endsnippet

snippet File.readAllString
File.readAllString(${1:pathName: nil})
endsnippet

snippet File.readAllSignal
File.readAllSignal(${1:pathName: nil})
endsnippet

snippet File.readAllStringHTML
File.readAllStringHTML(${1:pathName: nil})
endsnippet

snippet File.readAllStringRTF
File.readAllStringRTF(${1:pathName: nil})
endsnippet

snippet File.delete
File.delete(${1:pathName: nil})
endsnippet

snippet File.deleteAll
File.deleteAll(${1:pathName: nil})
endsnippet

snippet File.mtime
File.mtime(${1:pathName: nil})
endsnippet

snippet File.exists
File.exists(${1:pathName: nil})
endsnippet

snippet File.existsCaseSensitive
File.existsCaseSensitive(${1:pathName: nil})
endsnippet

snippet File.realpath
File.realpath(${1:pathName: nil})
endsnippet

snippet File.mkdir
File.mkdir(${1:pathName: nil})
endsnippet

snippet File.copy
File.copy(${1:pathNameFrom: nil}, ${2: pathNameTo: nil})
endsnippet

snippet File.type
File.type(${1:pathName: nil})
endsnippet

snippet File.prType
File.prType(${1:pathName: nil})
endsnippet

snippet File.fileSize
File.fileSize(${1:pathName: nil})
endsnippet

snippet File.getcwd
File.getcwd(${1:})
endsnippet

snippet File.prGetcwd
File.prGetcwd(${1:string: nil})
endsnippet

snippet File.openDialog
File.openDialog(${1:prompt: nil}, ${2: successFunc: nil}, ${3: cancelFunc: nil})
endsnippet

snippet File.saveDialog
File.saveDialog(${1:prompt: nil}, ${2: defaultName: nil}, ${3: successFunc: nil}, ${4: cancelFunc: nil})
endsnippet

snippet File.openDialogs
File.openDialogs(${1:})
endsnippet

snippet FileDialog.qtClass
FileDialog.qtClass(${1:})
endsnippet

snippet FileDialog.new
FileDialog.new(${1:okFunc: nil}, ${2: cancelFunc: nil}, ${3: fileMode: 1}, ${4: acceptMode: 0}, ${5: stripResult: false}, ${6: path: nil})
endsnippet

snippet FileReader.new
FileReader.new(${1:pathOrFile: nil}, ${2: skipEmptyLines: false}, ${3: skipBlanks: false}, ${4: delimiter: nil})
endsnippet

snippet FileReader.read
FileReader.read(${1:path: nil}, ${2: skipEmptyLines: false}, ${3: skipBlanks: false}, ${4: func: nil}, ${5: delimiter: nil}, ${6: startRow: 0}, ${7: skipSize: 0})
endsnippet

snippet FileReader.readInterpret
FileReader.readInterpret(${1:path: nil}, ${2: skipEmptyLines: false}, ${3: skipBlanks: false}, ${4: delimiter: nil}, ${5: startRow: 0}, ${6: skipSize: 0})
endsnippet

snippet Filter.scopeResponse
Filter.scopeResponse(${1:server: nil}, ${2: freqMode: 1}, ${3: label: nil}, ${4: args: nil})
endsnippet

snippet FilterPattern.new
FilterPattern.new(${1:pattern: nil})
endsnippet

snippet Float.from32Bits
Float.from32Bits(${1:word: nil})
endsnippet

snippet Float.from64Bits
Float.from64Bits(${1:hiWord: nil}, ${2: loWord: nil})
endsnippet

snippet FlowLayout.new
FlowLayout.new(${1:bounds: nil}, ${2: margin: nil}, ${3: gap: nil})
endsnippet

snippet FlowVar.new
FlowVar.new(${1:inVal: unbound})
endsnippet

snippet FlowView.layout
FlowView.layout(${1:f: nil}, ${2: bounds: nil})
endsnippet

snippet FlowView.viewClass
FlowView.viewClass(${1:})
endsnippet

snippet FlowView.new
FlowView.new(${1:parent: nil}, ${2: bounds: nil}, ${3: margin: nil}, ${4: gap: nil}, ${5: windowTitle: })
endsnippet

snippet FlowViewLayout.new
FlowViewLayout.new(${1:bounds: nil}, ${2: margin: nil}, ${3: gap: nil})
endsnippet

snippet Font.initClass
Font.initClass(${1:})
endsnippet

snippet Font.new
Font.new(${1:name: nil}, ${2: size: nil}, ${3: bold: false}, ${4: italic: false}, ${5: usePointSize: false})
endsnippet

snippet Font.availableFonts
Font.availableFonts(${1:})
endsnippet

snippet Font.antiAliasing_
Font.antiAliasing_(${1:flag: nil})
endsnippet

snippet Font.smoothing_
Font.smoothing_(${1:flag: nil})
endsnippet

snippet Font.default
Font.default(${1:})
endsnippet

snippet Font.default_
Font.default_(${1:font: nil})
endsnippet

snippet Font.setDefault
Font.setDefault(${1:font: nil}, ${2: class: nil})
endsnippet

snippet Font.monospace
Font.monospace(${1:size: nil}, ${2: bold: false}, ${3: italic: false}, ${4: usePointSize: false})
endsnippet

snippet Font.serif
Font.serif(${1:size: nil}, ${2: bold: false}, ${3: italic: false}, ${4: usePointSize: false})
endsnippet

snippet Font.sansSerif
Font.sansSerif(${1:size: nil}, ${2: bold: false}, ${3: italic: false}, ${4: usePointSize: false})
endsnippet

snippet Font.prSetDefault
Font.prSetDefault(${1:font: nil}, ${2: className: nil})
endsnippet

snippet Font.prDefaultFamilyForStyle
Font.prDefaultFamilyForStyle(${1:style: -1})
endsnippet

snippet Formant.ar
Formant.ar(${1:fundfreq: 440.0}, ${2: formfreq: 1760.0}, ${3: bwfreq: 880.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Formlet.ar
Formlet.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: attacktime: 1.0}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet Formlet.kr
Formlet.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: attacktime: 1.0}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet Free.kr
Free.kr(${1:trig: nil}, ${2: id: nil})
endsnippet

snippet FreeSelf.kr
FreeSelf.kr(${1:in: nil})
endsnippet

snippet FreeSelfWhenDone.kr
FreeSelfWhenDone.kr(${1:src: nil})
endsnippet

snippet FreeVerb.ar
FreeVerb.ar(${1:in: nil}, ${2: mix: 0.33}, ${3: room: 0.5}, ${4: damp: 0.5}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet FreeVerb2.ar
FreeVerb2.ar(${1:in: nil}, ${2: in2: nil}, ${3: mix: 0.33}, ${4: room: 0.5}, ${5: damp: 0.5}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet FreqScope.new
FreqScope.new(${1:width: 522}, ${2: height: 300}, ${3: busNum: 0}, ${4: scopeColor: nil}, ${5: bgColor: nil}, ${6: server: nil})
endsnippet

snippet FreqScopeView.initClass
FreqScopeView.initClass(${1:})
endsnippet

snippet FreqScopeView.new
FreqScopeView.new(${1:parent: nil}, ${2: bounds: nil}, ${3: server: nil})
endsnippet

snippet FreqScopeView.initSynthDefs
FreqScopeView.initSynthDefs(${1:})
endsnippet

snippet FreqScopeView.response
FreqScopeView.response(${1:parent: nil}, ${2: bounds: nil}, ${3: bus1: nil}, ${4: bus2: nil}, ${5: freqMode: 1})
endsnippet

snippet FreqShift.ar
FreqShift.ar(${1:in: nil}, ${2: freq: 0.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet FuncFilterPattern.new
FuncFilterPattern.new(${1:func: nil}, ${2: pattern: nil})
endsnippet

snippet FuncStream.new
FuncStream.new(${1:nextFunc: nil}, ${2: resetFunc: nil})
endsnippet

snippet FuncStreamAsRoutine.new
FuncStreamAsRoutine.new(${1:nextFunc: nil}, ${2: resetFunc: nil})
endsnippet

snippet Function.new
Function.new(${1:})
endsnippet

snippet FunctionList.new
FunctionList.new(${1:functions: nil})
endsnippet

snippet FunctionMapping.new
FunctionMapping.new(${1:name_: nil})
endsnippet

snippet FuzzySet.new
FuzzySet.new(${1:size: 8})
endsnippet

snippet GUI.new
GUI.new(${1:key: nil})
endsnippet

snippet GUI.makeGUI
GUI.makeGUI(${1:key: nil}, ${2: args: nil}, ${3: properties: nil})
endsnippet

snippet GUI.initClass
GUI.initClass(${1:})
endsnippet

snippet GUI.swing
GUI.swing(${1:})
endsnippet

snippet GUI.qt
GUI.qt(${1:})
endsnippet

snippet GUI.fromID
GUI.fromID(${1:id: nil})
endsnippet

snippet GUI.current
GUI.current(${1:})
endsnippet

snippet GUI.get
GUI.get(${1:id: nil})
endsnippet

snippet GUI.set
GUI.set(${1:aScheme: nil})
endsnippet

snippet GUI.use
GUI.use(${1:aScheme: nil}, ${2: func: nil})
endsnippet

snippet GUI.useID
GUI.useID(${1:id: nil}, ${2: func: nil})
endsnippet

snippet GUI.add
GUI.add(${1:aScheme: nil})
endsnippet

snippet GUI.doesNotUnderstand
GUI.doesNotUnderstand(${1:selector: nil}, ${2: args: [  ]})
endsnippet

snippet GUI.setSkin
GUI.setSkin(${1:skinName: nil})
endsnippet

snippet GVerb.ar
GVerb.ar(${1:in: nil}, ${2: roomsize: 10}, ${3: revtime: 3}, ${4: damping: 0.5}, ${5: inputbw: 0.5}, ${6: spread: 15}, ${7: drylevel: 1}, ${8: earlyreflevel: 0.7}, ${9: taillevel: 0.5}, ${10: maxroomsize: 300}, ${11: mul: 1}, ${12: add: 0})
endsnippet

snippet GbmanN.ar
GbmanN.ar(${1:freq: 22050}, ${2: xi: 1.2}, ${3: yi: 2.1}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet GenLaguerre.new
GenLaguerre.new(${1:n: nil}, ${2: a: nil})
endsnippet

snippet GenLaguerre.calc
GenLaguerre.calc(${1:n: nil}, ${2: a: nil}, ${3: x: nil})
endsnippet

snippet Gendy1.ar
Gendy1.ar(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: minfreq: 440}, ${6: maxfreq: 660}, ${7: ampscale: 0.5}, ${8: durscale: 0.5}, ${9: initCPs: 12}, ${10: knum: nil}, ${11: mul: 1.0}, ${12: add: 0.0})
endsnippet

snippet Gendy1.kr
Gendy1.kr(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: minfreq: 20}, ${6: maxfreq: 1000}, ${7: ampscale: 0.5}, ${8: durscale: 0.5}, ${9: initCPs: 12}, ${10: knum: nil}, ${11: mul: 1.0}, ${12: add: 0.0})
endsnippet

snippet Gendy2.ar
Gendy2.ar(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: minfreq: 440}, ${6: maxfreq: 660}, ${7: ampscale: 0.5}, ${8: durscale: 0.5}, ${9: initCPs: 12}, ${10: knum: nil}, ${11: a: 1.17}, ${12: c: 0.31}, ${13: mul: 1.0}, ${14: add: 0.0})
endsnippet

snippet Gendy2.kr
Gendy2.kr(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: minfreq: 20}, ${6: maxfreq: 1000}, ${7: ampscale: 0.5}, ${8: durscale: 0.5}, ${9: initCPs: 12}, ${10: knum: nil}, ${11: a: 1.17}, ${12: c: 0.31}, ${13: mul: 1.0}, ${14: add: 0.0})
endsnippet

snippet Gendy3.ar
Gendy3.ar(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: freq: 440}, ${6: ampscale: 0.5}, ${7: durscale: 0.5}, ${8: initCPs: 12}, ${9: knum: nil}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet Gendy3.kr
Gendy3.kr(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: freq: 440}, ${6: ampscale: 0.5}, ${7: durscale: 0.5}, ${8: initCPs: 12}, ${9: knum: nil}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet Git.isGit
Git.isGit(${1:localPath: nil})
endsnippet

snippet Git.new
Git.new(${1:localPath: nil})
endsnippet

snippet Git.checkForGit
Git.checkForGit(${1:})
endsnippet

snippet Gradient.new
Gradient.new(${1:color1: nil}, ${2: color2: nil}, ${3: direction: h}, ${4: steps: 64})
endsnippet

snippet GrainBuf.ar
GrainBuf.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: sndbuf: nil}, ${5: rate: 1}, ${6: pos: 0}, ${7: interp: 2}, ${8: pan: 0}, ${9: envbufnum: -1}, ${10: maxGrains: 512}, ${11: mul: 1}, ${12: add: 0})
endsnippet

snippet GrainFM.ar
GrainFM.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: carfreq: 440}, ${5: modfreq: 200}, ${6: index: 1}, ${7: pan: 0}, ${8: envbufnum: -1}, ${9: maxGrains: 512}, ${10: mul: 1}, ${11: add: 0})
endsnippet

snippet GrainIn.ar
GrainIn.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: in: nil}, ${5: pan: 0}, ${6: envbufnum: -1}, ${7: maxGrains: 512}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet GrainSin.ar
GrainSin.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: freq: 440}, ${5: pan: 0}, ${6: envbufnum: -1}, ${7: maxGrains: 512}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet GraphBuilder.wrapOut
GraphBuilder.wrapOut(${1:name: nil}, ${2: func: nil}, ${3: rates: nil}, ${4: prependArgs: nil}, ${5: outClass: Out}, ${6: fadeTime: nil})
endsnippet

snippet GraphBuilder.makeFadeEnv
GraphBuilder.makeFadeEnv(${1:fadeTime: 0.02})
endsnippet

snippet GridLayout.new
GridLayout.new(${1:})
endsnippet

snippet GridLayout.qtClass
GridLayout.qtClass(${1:})
endsnippet

snippet GridLayout.parse
GridLayout.parse(${1:in: nil}, ${2: row: nil}, ${3: col: nil})
endsnippet

snippet GridLayout.rows
GridLayout.rows(${1:rows: [  ]})
endsnippet

snippet GridLayout.columns
GridLayout.columns(${1:cols: [  ]})
endsnippet

snippet GridLines.new
GridLines.new(${1:spec: nil})
endsnippet

snippet Group.creationCmd
Group.creationCmd(${1:})
endsnippet

snippet HID.initClass
HID.initClass(${1:})
endsnippet

snippet HID.addRecvFunc
HID.addRecvFunc(${1:function: nil})
endsnippet

snippet HID.removeRecvFunc
HID.removeRecvFunc(${1:function: nil})
endsnippet

snippet HID.addDevFunc
HID.addDevFunc(${1:function: nil})
endsnippet

snippet HID.removeDevFunc
HID.removeDevFunc(${1:function: nil})
endsnippet

snippet HID.action_
HID.action_(${1:function: nil})
endsnippet

snippet HID.deviceAction_
HID.deviceAction_(${1:function: nil})
endsnippet

snippet HID.findAvailable
HID.findAvailable(${1:})
endsnippet

snippet HID.openAt
HID.openAt(${1:index: nil})
endsnippet

snippet HID.open
HID.open(${1:vendorID: nil}, ${2: productID: nil}, ${3: path: nil})
endsnippet

snippet HID.mergeUsageDict
HID.mergeUsageDict(${1:dev: nil})
endsnippet

snippet HID.removeUsageDict
HID.removeUsageDict(${1:dev: nil})
endsnippet

snippet HID.openPath
HID.openPath(${1:path: nil})
endsnippet

snippet HID.initializeHID
HID.initializeHID(${1:})
endsnippet

snippet HID.closeAll
HID.closeAll(${1:})
endsnippet

snippet HID.findBy
HID.findBy(${1:vendorID: nil}, ${2: productID: nil}, ${3: path: nil}, ${4: serial: nil}, ${5: releaseNumber: nil})
endsnippet

snippet HID.doPrAction
HID.doPrAction(${1:value: nil}, ${2: physValue: nil}, ${3: rawValue: nil}, ${4: arrayValue: nil}, ${5: usage: nil}, ${6: page: nil}, ${7: elid: nil}, ${8: devid: nil})
endsnippet

snippet HID.prInitHID
HID.prInitHID(${1:})
endsnippet

snippet HID.prCloseAll
HID.prCloseAll(${1:})
endsnippet

snippet HID.prOpenDevice
HID.prOpenDevice(${1:vendorID: nil}, ${2: productID: nil}, ${3: path: nil})
endsnippet

snippet HID.prCloseDevice
HID.prCloseDevice(${1:joyid: nil})
endsnippet

snippet HID.prGetDeviceInfo
HID.prGetDeviceInfo(${1:joyid: nil})
endsnippet

snippet HID.prGetNumberOfCollections
HID.prGetNumberOfCollections(${1:joyid: nil})
endsnippet

snippet HID.prGetCollectionInfo
HID.prGetCollectionInfo(${1:joyid: nil}, ${2: colid: nil})
endsnippet

snippet HID.prGetNumberOfElements
HID.prGetNumberOfElements(${1:joyid: nil})
endsnippet

snippet HID.prGetElementInfo
HID.prGetElementInfo(${1:joyid: nil}, ${2: elid: nil})
endsnippet

snippet HID.prSetElementOutput
HID.prSetElementOutput(${1:joyid: nil}, ${2: elid: nil}, ${3: value: nil})
endsnippet

snippet HID.prSetElementRepeat
HID.prSetElementRepeat(${1:joyid: nil}, ${2: elid: nil}, ${3: value: nil})
endsnippet

snippet HID.prbuildDeviceList
HID.prbuildDeviceList(${1:})
endsnippet

snippet HID.prHIDDeviceClosed
HID.prHIDDeviceClosed(${1:devid: nil})
endsnippet

snippet HID.prHIDElementData
HID.prHIDElementData(${1:devid: nil}, ${2: elid: nil}, ${3: page: nil}, ${4: usage: nil}, ${5: rawValue: nil}, ${6: value: nil}, ${7: physValue: nil}, ${8: arrayValue: nil})
endsnippet

snippet HID.prHIDDeviceData
HID.prHIDDeviceData(${1:devid: nil}, ${2: numelements: nil})
endsnippet

snippet HID.new
HID.new(${1:args: [  ]})
endsnippet

snippet HID.basicNew
HID.basicNew(${1:id: nil})
endsnippet

snippet HID.postAvailable
HID.postAvailable(${1:})
endsnippet

snippet HID.postAvailableUsages
HID.postAvailableUsages(${1:})
endsnippet

snippet HIDCollection.new
HIDCollection.new(${1:args: [  ]})
endsnippet

snippet HIDElement.new
HIDElement.new(${1:args: [  ]})
endsnippet

snippet HIDElementProto.new
HIDElementProto.new(${1:})
endsnippet

snippet HIDElementProto.newType
HIDElementProto.newType(${1:uName: nil}, ${2: pName: nil})
endsnippet

snippet HIDElementProto.newTypeID
HIDElementProto.newTypeID(${1:uID: nil}, ${2: pID: nil})
endsnippet

snippet HIDElementProto.newFromDict
HIDElementProto.newFromDict(${1:dict: nil})
endsnippet

snippet HIDElementProtoDispatcher.new
HIDElementProtoDispatcher.new(${1:})
endsnippet

snippet HIDFunc.initClass
HIDFunc.initClass(${1:})
endsnippet

snippet HIDFunc.usage
HIDFunc.usage(${1:func: nil}, ${2: elUsageName: nil}, ${3: devUsageName: nil}, ${4: deviceInfo: nil}, ${5: argTemplate: nil}, ${6: argTemplateType: nil}, ${7: dispatcher: nil})
endsnippet

snippet HIDFunc.usageID
HIDFunc.usageID(${1:func: nil}, ${2: elUsageID: nil}, ${3: elPageID: nil}, ${4: deviceName: nil}, ${5: deviceInfo: nil}, ${6: argTemplate: nil}, ${7: argTemplateType: nil}, ${8: dispatcher: nil})
endsnippet

snippet HIDFunc.device
HIDFunc.device(${1:func: nil}, ${2: elUsageName: nil}, ${3: deviceName: nil}, ${4: deviceInfo: nil}, ${5: argTemplate: nil}, ${6: argTemplateType: nil}, ${7: dispatcher: nil})
endsnippet

snippet HIDFunc.proto
HIDFunc.proto(${1:func: nil}, ${2: protoElement: nil}, ${3: deviceInfo: nil}, ${4: argTemplate: nil}, ${5: argTemplateType: nil}, ${6: dispatcher: nil})
endsnippet

snippet HIDFunc.element
HIDFunc.element(${1:func: nil}, ${2: elID: nil}, ${3: deviceName: nil}, ${4: deviceInfo: nil}, ${5: argTemplate: nil}, ${6: argTemplateType: nil}, ${7: dispatcher: nil})
endsnippet

snippet HIDFunc.trace
HIDFunc.trace(${1:bool: true})
endsnippet

snippet HIDFunc.cmdPeriod
HIDFunc.cmdPeriod(${1:})
endsnippet

snippet HIDFuncDeviceProtoMatcher.new
HIDFuncDeviceProtoMatcher.new(${1:srcID: nil}, ${2: func: nil})
endsnippet

snippet HIDFuncElementProtoMatcher.new
HIDFuncElementProtoMatcher.new(${1:elProto: nil}, ${2: func: nil})
endsnippet

snippet HIDInfo.new
HIDInfo.new(${1:args: [  ]})
endsnippet

snippet HIDProto.new
HIDProto.new(${1:})
endsnippet

snippet HIDProto.newType
HIDProto.newType(${1:uName: nil}, ${2: pName: nil})
endsnippet

snippet HIDProto.newProduct
HIDProto.newProduct(${1:pName: nil}, ${2: vName: nil})
endsnippet

snippet HIDProto.newFromDict
HIDProto.newFromDict(${1:dict: nil})
endsnippet

snippet HIDRawValueMatcher.new
HIDRawValueMatcher.new(${1:argTemplate: nil}, ${2: func: nil})
endsnippet

snippet HIDUsage.initClass
HIDUsage.initClass(${1:})
endsnippet

snippet HIDUsage.getUsageDescription
HIDUsage.getUsageDescription(${1:usagePage: nil}, ${2: usage: nil})
endsnippet

snippet HIDUsage.idsToName
HIDUsage.idsToName(${1:page: nil}, ${2: usage: nil})
endsnippet

snippet HIDUsage.getUsageIds
HIDUsage.getUsageIds(${1:usageName: nil})
endsnippet

snippet HIDUsage.readHUTFile
HIDUsage.readHUTFile(${1:yamlfile: nil})
endsnippet

snippet HIDUsageDispatcher.new
HIDUsageDispatcher.new(${1:})
endsnippet

snippet HIDValueMatcher.new
HIDValueMatcher.new(${1:argTemplate: nil}, ${2: func: nil})
endsnippet

snippet HIDdef.initClass
HIDdef.initClass(${1:})
endsnippet

snippet HIDdef.new
HIDdef.new(${1:key: nil}, ${2: func: nil})
endsnippet

snippet HIDdef.usage
HIDdef.usage(${1:key: nil}, ${2: func: nil}, ${3: elUsageName: nil}, ${4: devUsageName: nil}, ${5: deviceInfo: nil}, ${6: argTemplate: nil}, ${7: argTemplateType: nil}, ${8: dispatcher: nil})
endsnippet

snippet HIDdef.usageID
HIDdef.usageID(${1:key: nil}, ${2: func: nil}, ${3: elUsageID: nil}, ${4: elPageID: nil}, ${5: deviceName: nil}, ${6: deviceInfo: nil}, ${7: argTemplate: nil}, ${8: argTemplateType: nil}, ${9: dispatcher: nil})
endsnippet

snippet HIDdef.device
HIDdef.device(${1:key: nil}, ${2: func: nil}, ${3: elUsageName: nil}, ${4: deviceName: nil}, ${5: deviceInfo: nil}, ${6: argTemplate: nil}, ${7: argTemplateType: nil}, ${8: dispatcher: nil})
endsnippet

snippet HIDdef.proto
HIDdef.proto(${1:key: nil}, ${2: func: nil}, ${3: protoElement: nil}, ${4: deviceInfo: nil}, ${5: argTemplate: nil}, ${6: argTemplateType: nil}, ${7: dispatcher: nil})
endsnippet

snippet HIDdef.element
HIDdef.element(${1:key: nil}, ${2: func: nil}, ${3: elID: nil}, ${4: deviceName: nil}, ${5: deviceInfo: nil}, ${6: argTemplate: nil}, ${7: argTemplateType: nil}, ${8: dispatcher: nil})
endsnippet

snippet HIDdef.freeAll
HIDdef.freeAll(${1:})
endsnippet

snippet HLayout.qtClass
HLayout.qtClass(${1:})
endsnippet

snippet HLayoutView.qtClass
HLayoutView.qtClass(${1:})
endsnippet

snippet Halo.initClass
Halo.initClass(${1:})
endsnippet

snippet Halo.put
Halo.put(${1:args: [  ]})
endsnippet

snippet Halo.at
Halo.at(${1:keys: [  ]})
endsnippet

snippet Halo.postTree
Halo.postTree(${1:})
endsnippet

snippet Harmonics.new
Harmonics.new(${1:size: 32})
endsnippet

snippet Hasher.ar
Hasher.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Hasher.kr
Hasher.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Help.gui
Help.gui(${1:})
endsnippet

snippet Help.dir
Help.dir(${1:})
endsnippet

snippet Help.methodArgs
Help.methodArgs(${1:string: nil})
endsnippet

snippet HelpBrowser.initClass
HelpBrowser.initClass(${1:})
endsnippet

snippet HelpBrowser.instance
HelpBrowser.instance(${1:})
endsnippet

snippet HelpBrowser.new
HelpBrowser.new(${1:aHomeUrl: nil}, ${2: newWin: nil})
endsnippet

snippet HelpBrowser.goTo
HelpBrowser.goTo(${1:url: nil})
endsnippet

snippet HelpBrowser.front
HelpBrowser.front(${1:})
endsnippet

snippet HelpBrowser.goHome
HelpBrowser.goHome(${1:})
endsnippet

snippet HelpBrowser.openBrowsePage
HelpBrowser.openBrowsePage(${1:category: nil})
endsnippet

snippet HelpBrowser.openSearchPage
HelpBrowser.openSearchPage(${1:text: nil})
endsnippet

snippet HelpBrowser.openHelpFor
HelpBrowser.openHelpFor(${1:text: nil})
endsnippet

snippet HelpBrowser.openHelpForMethod
HelpBrowser.openHelpForMethod(${1:method: nil})
endsnippet

snippet HenonN.ar
HenonN.ar(${1:freq: 22050}, ${2: a: 1.4}, ${3: b: 0.3}, ${4: x0: 0}, ${5: x1: 0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet Hilbert.ar
Hilbert.ar(${1:in: nil}, ${2: mul: 1}, ${3: add: 0})
endsnippet

snippet HilbertFIR.ar
HilbertFIR.ar(${1:in: nil}, ${2: buffer: nil})
endsnippet

snippet HiliteGradient.new
HiliteGradient.new(${1:color1: nil}, ${2: color2: nil}, ${3: direction: v}, ${4: steps: 64}, ${5: frac: 0.33})
endsnippet

snippet History.timeStamp
History.timeStamp(${1:})
endsnippet

snippet History.dateString
History.dateString(${1:})
endsnippet

snippet History.initClass
History.initClass(${1:})
endsnippet

snippet History.start
History.start(${1:})
endsnippet

snippet History.end
History.end(${1:})
endsnippet

snippet History.hasMovedOn_
History.hasMovedOn_(${1:flag: true})
endsnippet

snippet History.hasMovedOn
History.hasMovedOn(${1:})
endsnippet

snippet History.play
History.play(${1:start: 0}, ${2: end: nil}, ${3: verbose: true})
endsnippet

snippet History.stop
History.stop(${1:})
endsnippet

snippet History.enter
History.enter(${1:lineStr: nil}, ${2: id: me})
endsnippet

snippet History.lines
History.lines(${1:})
endsnippet

snippet History.lineShorts
History.lineShorts(${1:})
endsnippet

snippet History.removeAt
History.removeAt(${1:index: nil})
endsnippet

snippet History.removeLast
History.removeLast(${1:})
endsnippet

snippet History.keep
History.keep(${1:num: nil})
endsnippet

snippet History.drop
History.drop(${1:num: nil})
endsnippet

snippet History.clear
History.clear(${1:})
endsnippet

snippet History.new
History.new(${1:lines: nil})
endsnippet

snippet History.saveCS
History.saveCS(${1:path: nil}, ${2: forward: false})
endsnippet

snippet History.loadCS
History.loadCS(${1:path: nil}, ${2: forward: false})
endsnippet

snippet History.localOn
History.localOn(${1:})
endsnippet

snippet History.localOff
History.localOff(${1:})
endsnippet

snippet History.saveStory
History.saveStory(${1:path: nil})
endsnippet

snippet History.formatTime
History.formatTime(${1:val: nil})
endsnippet

snippet History.unformatTime
History.unformatTime(${1:str: nil})
endsnippet

snippet History.prettyString
History.prettyString(${1:str: nil})
endsnippet

snippet History.shorten
History.shorten(${1:line: nil}, ${2: maxLength: nil})
endsnippet

snippet History.getTimeFromString
History.getTimeFromString(${1:str: nil})
endsnippet

snippet History.asLines
History.asLines(${1:str: nil})
endsnippet

snippet History.evalLineAt
History.evalLineAt(${1:index: nil})
endsnippet

snippet History.eval
History.eval(${1:codeString: nil}, ${2: ignoreError: nil})
endsnippet

snippet History.cmdPeriod
History.cmdPeriod(${1:})
endsnippet

snippet History.playCmdPeriod
History.playCmdPeriod(${1:})
endsnippet

snippet History.makeLogFolder
History.makeLogFolder(${1:})
endsnippet

snippet History.showLogFolder
History.showLogFolder(${1:})
endsnippet

snippet History.checkLogStarted
History.checkLogStarted(${1:})
endsnippet

snippet History.startLog
History.startLog(${1:})
endsnippet

snippet History.addToLog
History.addToLog(${1:line: nil})
endsnippet

snippet History.endLog
History.endLog(${1:})
endsnippet

snippet History.showLogFile
History.showLogFile(${1:})
endsnippet

snippet History.readFromDoc
History.readFromDoc(${1:path: nil})
endsnippet

snippet History.checkPath
History.checkPath(${1:path: nil})
endsnippet

snippet History.loadStory
History.loadStory(${1:path: nil})
endsnippet

snippet History.rewrite
History.rewrite(${1:path: nil}, ${2: open: true})
endsnippet

snippet History.makeWin
History.makeWin(${1:where: nil}, ${2: numItems: 8})
endsnippet

snippet History.document
History.document(${1:})
endsnippet

snippet HistoryDispatch.new
HistoryDispatch.new(${1:})
endsnippet

snippet HistoryGui.new
HistoryGui.new(${1:object: nil}, ${2: numItems: 8}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: [  ]})
endsnippet

snippet IEnvGen.ar
IEnvGen.ar(${1:envelope: nil}, ${2: index: nil}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet IEnvGen.kr
IEnvGen.kr(${1:envelope: nil}, ${2: index: nil}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet IEnvGen.convertEnv
IEnvGen.convertEnv(${1:env: nil})
endsnippet

snippet IEnvGen.new1
IEnvGen.new1(${1:rate: nil}, ${2: index: nil}, ${3: envArray: nil})
endsnippet

snippet IFFT.new
IFFT.new(${1:buffer: nil}, ${2: wintype: 0}, ${3: winsize: 0})
endsnippet

snippet IFFT.ar
IFFT.ar(${1:buffer: nil}, ${2: wintype: 0}, ${3: winsize: 0})
endsnippet

snippet IFFT.kr
IFFT.kr(${1:buffer: nil}, ${2: wintype: 0}, ${3: winsize: 0})
endsnippet

snippet IODesc.new
IODesc.new(${1:rate: nil}, ${2: numberOfChannels: nil}, ${3: startingChannel: ?}, ${4: type: nil})
endsnippet

snippet IRand.new
IRand.new(${1:lo: 0}, ${2: hi: 127})
endsnippet

snippet IdentityDictionary.new
IdentityDictionary.new(${1:n: 8}, ${2: proto: nil}, ${3: parent: nil}, ${4: know: false})
endsnippet

snippet Image.initClass
Image.initClass(${1:})
endsnippet

snippet Image.new
Image.new(${1:multiple: nil}, ${2: height: nil})
endsnippet

snippet Image.openSVG
Image.openSVG(${1:path: nil}, ${2: size: nil})
endsnippet

snippet Image.newEmpty
Image.newEmpty(${1:width: nil}, ${2: height: nil})
endsnippet

snippet Image.color
Image.color(${1:args: [  ]})
endsnippet

snippet Image.open
Image.open(${1:path: nil})
endsnippet

snippet Image.openURL
Image.openURL(${1:url: nil}, ${2: timeout: 60})
endsnippet

snippet Image.fromImage
Image.fromImage(${1:image: nil})
endsnippet

snippet Image.fromWindow
Image.fromWindow(${1:window: nil}, ${2: rect: nil})
endsnippet

snippet Image.formats
Image.formats(${1:rw: r})
endsnippet

snippet Image.interpolations
Image.interpolations(${1:})
endsnippet

snippet Image.colorToPixel
Image.colorToPixel(${1:color: nil})
endsnippet

snippet Image.pixelToColor
Image.pixelToColor(${1:pixel: nil})
endsnippet

snippet Image.closeAllPlotWindows
Image.closeAllPlotWindows(${1:})
endsnippet

snippet Image.prFormats
Image.prFormats(${1:rw: nil})
endsnippet

snippet ImmutableError.new
ImmutableError.new(${1:receiver: nil}, ${2: value: nil})
endsnippet

snippet Impulse.ar
Impulse.ar(${1:freq: 440.0}, ${2: phase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Impulse.kr
Impulse.kr(${1:freq: 440.0}, ${2: phase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet In.ar
In.ar(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet In.kr
In.kr(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet InBus.ar
InBus.ar(${1:bus: nil}, ${2: numChannels: nil}, ${3: offset: 0}, ${4: clip: nil})
endsnippet

snippet InBus.kr
InBus.kr(${1:bus: nil}, ${2: numChannels: nil}, ${3: offset: 0}, ${4: clip: nil})
endsnippet

snippet InBus.new1
InBus.new1(${1:rate: nil}, ${2: bus: nil}, ${3: numChannels: nil}, ${4: offset: nil}, ${5: clip: nil})
endsnippet

snippet InFeedback.ar
InFeedback.ar(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet InRange.ar
InRange.ar(${1:in: 0.0}, ${2: lo: 0.0}, ${3: hi: 1.0})
endsnippet

snippet InRange.kr
InRange.kr(${1:in: 0.0}, ${2: lo: 0.0}, ${3: hi: 1.0})
endsnippet

snippet InRange.ir
InRange.ir(${1:in: 0.0}, ${2: lo: 0.0}, ${3: hi: 1.0})
endsnippet

snippet InRect.ar
InRect.ar(${1:x: 0.0}, ${2: y: 0.0}, ${3: rect: nil})
endsnippet

snippet InRect.kr
InRect.kr(${1:x: 0.0}, ${2: y: 0.0}, ${3: rect: nil})
endsnippet

snippet InTrig.kr
InTrig.kr(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet Index.ar
Index.ar(${1:bufnum: nil}, ${2: in: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Index.kr
Index.kr(${1:bufnum: nil}, ${2: in: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet InfoUGenBase.ir
InfoUGenBase.ir(${1:})
endsnippet

snippet Inspector.new
Inspector.new(${1:object: nil})
endsnippet

snippet Inspector.initClass
Inspector.initClass(${1:})
endsnippet

snippet Inspector.inspectorFor
Inspector.inspectorFor(${1:object: nil})
endsnippet

snippet Integrator.ar
Integrator.ar(${1:in: 0.0}, ${2: coef: 1.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Integrator.kr
Integrator.kr(${1:in: 0.0}, ${2: coef: 1.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Interpreter.new
Interpreter.new(${1:})
endsnippet

snippet Interval.new
Interval.new(${1:start: nil}, ${2: end: nil}, ${3: step: 1})
endsnippet

snippet JITGui.initClass
JITGui.initClass(${1:})
endsnippet

snippet JITGui.new
JITGui.new(${1:object: nil}, ${2: numItems: 0}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: [  ]})
endsnippet

snippet K2A.ar
K2A.ar(${1:in: 0.0})
endsnippet

snippet KeyState.kr
KeyState.kr(${1:keycode: 0}, ${2: minval: 0}, ${3: maxval: 1}, ${4: lag: 0.2})
endsnippet

snippet KeyTrack.kr
KeyTrack.kr(${1:chain: nil}, ${2: keydecay: 2.0}, ${3: chromaleak: 0.5})
endsnippet

snippet Klang.ar
Klang.ar(${1:specificationsArrayRef: nil}, ${2: freqscale: 1.0}, ${3: freqoffset: 0.0})
endsnippet

snippet Klang.new1
Klang.new1(${1:rate: nil}, ${2: freqscale: nil}, ${3: freqoffset: nil}, ${4: arrayRef: nil})
endsnippet

snippet Klank.ar
Klank.ar(${1:specificationsArrayRef: nil}, ${2: input: nil}, ${3: freqscale: 1.0}, ${4: freqoffset: 0.0}, ${5: decayscale: 1.0})
endsnippet

snippet Klank.new1
Klank.new1(${1:rate: nil}, ${2: input: nil}, ${3: freqscale: nil}, ${4: freqoffset: nil}, ${5: decayscale: nil}, ${6: arrayRef: nil})
endsnippet

snippet Knob.qtClass
Knob.qtClass(${1:})
endsnippet

snippet Knob.new
Knob.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet LFGauss.ar
LFGauss.ar(${1:duration: 1}, ${2: width: 0.1}, ${3: iphase: 0.0}, ${4: loop: 1}, ${5: doneAction: 0})
endsnippet

snippet LFGauss.kr
LFGauss.kr(${1:duration: 1}, ${2: width: 0.1}, ${3: iphase: 0.0}, ${4: loop: 1}, ${5: doneAction: 0})
endsnippet

snippet LFNoise0.ar
LFNoise0.ar(${1:freq: 500.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LFNoise0.kr
LFNoise0.kr(${1:freq: 500.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LFPulse.ar
LFPulse.ar(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: width: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LFPulse.kr
LFPulse.kr(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: width: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LFSaw.ar
LFSaw.ar(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LFSaw.kr
LFSaw.kr(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LID.running
LID.running(${1:})
endsnippet

snippet LID.initClass
LID.initClass(${1:})
endsnippet

snippet LID.initializeLID
LID.initializeLID(${1:})
endsnippet

snippet LID.findAvailable
LID.findAvailable(${1:name: nil})
endsnippet

snippet LID.postAvailable
LID.postAvailable(${1:})
endsnippet

snippet LID.register
LID.register(${1:name: nil}, ${2: spec: nil})
endsnippet

snippet LID.mouseDeviceSpec
LID.mouseDeviceSpec(${1:})
endsnippet

snippet LID.keyboardDeviceSpec
LID.keyboardDeviceSpec(${1:})
endsnippet

snippet LID.openDevices
LID.openDevices(${1:})
endsnippet

snippet LID.closeAll
LID.closeAll(${1:})
endsnippet

snippet LID.openAt
LID.openAt(${1:index: nil})
endsnippet

snippet LID.findBy
LID.findBy(${1:vendorID: nil}, ${2: productID: nil}, ${3: path: nil}, ${4: version: nil}, ${5: physical: nil}, ${6: unique: nil})
endsnippet

snippet LID.open
LID.open(${1:vendorID: nil}, ${2: productID: nil}, ${3: path: nil}, ${4: version: nil}, ${5: physical: nil}, ${6: unique: nil})
endsnippet

snippet LID.openPath
LID.openPath(${1:path: nil})
endsnippet

snippet LID.new
LID.new(${1:path: nil})
endsnippet

snippet LID.debug_
LID.debug_(${1:onoff: true})
endsnippet

snippet LID.debug
LID.debug(${1:})
endsnippet

snippet LID.addRecvFunc
LID.addRecvFunc(${1:function: nil})
endsnippet

snippet LID.removeRecvFunc
LID.removeRecvFunc(${1:function: nil})
endsnippet

snippet LID.action_
LID.action_(${1:function: nil})
endsnippet

snippet LID.prStartEventLoop
LID.prStartEventLoop(${1:})
endsnippet

snippet LID.prStopEventLoop
LID.prStopEventLoop(${1:})
endsnippet

snippet LIDGui.new
LIDGui.new(${1:device: nil})
endsnippet

snippet LIDSlot.initClass
LIDSlot.initClass(${1:})
endsnippet

snippet LIDSlot.new
LIDSlot.new(${1:device: nil}, ${2: evtType: nil}, ${3: evtCode: nil})
endsnippet

snippet LPF.ar
LPF.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LPF.kr
LPF.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LPZ1.ar
LPZ1.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LPZ1.kr
LPZ1.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LPZ2.ar
LPZ2.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LPZ2.kr
LPZ2.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LRUNumberAllocator.new
LRUNumberAllocator.new(${1:lo: nil}, ${2: hi: nil})
endsnippet

snippet LaTeX.lineEnd
LaTeX.lineEnd(${1:})
endsnippet

snippet LaTeX.hline
LaTeX.hline(${1:})
endsnippet

snippet LaTeX.cline
LaTeX.cline(${1:which: nil})
endsnippet

snippet LaTeX.tabletab
LaTeX.tabletab(${1:})
endsnippet

snippet LaTeX.math
LaTeX.math(${1:str: nil}, ${2: flag: true})
endsnippet

snippet LaTeX.row
LaTeX.row(${1:obj: nil}, ${2: align: l}, ${3: n: 1})
endsnippet

snippet LaTeX.asTable
LaTeX.asTable(${1:dict: nil}, ${2: func: nil})
endsnippet

snippet LaTeX.tabularFooter
LaTeX.tabularFooter(${1:})
endsnippet

snippet LaTeX.tableHeader
LaTeX.tableHeader(${1:n: nil}, ${2: align: l}, ${3: separator:  })
endsnippet

snippet LaTeX.tableDict
LaTeX.tableDict(${1:dict: nil}, ${2: hlines: [  ]}, ${3: align: l}, ${4: separator:  }, ${5: math: true})
endsnippet

snippet LaTeX.numericalDict
LaTeX.numericalDict(${1:dict: nil}, ${2: keyName: nil}, ${3: valName: nil}, ${4: math: true})
endsnippet

snippet LaTeX.barChart
LaTeX.barChart(${1:vals: nil}, ${2: min: 0}, ${3: max: nil}, ${4: interval: nil}, ${5: shades: false}, ${6: precision: nil}, ${7: extras: nil})
endsnippet

snippet Lag.ar
Lag.ar(${1:in: 0.0}, ${2: lagTime: 0.1}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Lag.kr
Lag.kr(${1:in: 0.0}, ${2: lagTime: 0.1}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LagControl.kr
LagControl.kr(${1:values: nil}, ${2: lags: nil})
endsnippet

snippet LagControl.ar
LagControl.ar(${1:values: nil}, ${2: lags: nil})
endsnippet

snippet LagControl.ir
LagControl.ir(${1:})
endsnippet

snippet LagIn.kr
LagIn.kr(${1:bus: 0}, ${2: numChannels: 1}, ${3: lag: 0.1})
endsnippet

snippet LagUD.ar
LagUD.ar(${1:in: 0.0}, ${2: lagTimeU: 0.1}, ${3: lagTimeD: 0.1}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LagUD.kr
LagUD.kr(${1:in: 0.0}, ${2: lagTimeU: 0.1}, ${3: lagTimeD: 0.1}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LanguageConfig.store
LanguageConfig.store(${1:file: nil})
endsnippet

snippet LanguageConfig.currentPath
LanguageConfig.currentPath(${1:})
endsnippet

snippet LanguageConfig.includePaths
LanguageConfig.includePaths(${1:})
endsnippet

snippet LanguageConfig.addIncludePath
LanguageConfig.addIncludePath(${1:aPath: nil})
endsnippet

snippet LanguageConfig.removeIncludePath
LanguageConfig.removeIncludePath(${1:aPath: nil})
endsnippet

snippet LanguageConfig.excludePaths
LanguageConfig.excludePaths(${1:})
endsnippet

snippet LanguageConfig.addExcludePath
LanguageConfig.addExcludePath(${1:aPath: nil})
endsnippet

snippet LanguageConfig.removeExcludePath
LanguageConfig.removeExcludePath(${1:aPath: nil})
endsnippet

snippet LanguageConfig.postInlineWarnings
LanguageConfig.postInlineWarnings(${1:})
endsnippet

snippet LanguageConfig.postInlineWarnings_
LanguageConfig.postInlineWarnings_(${1:aBoolean: nil})
endsnippet

snippet LanguageConfig.excludeDefaultPaths
LanguageConfig.excludeDefaultPaths(${1:})
endsnippet

snippet LanguageConfig.excludeDefaultPaths_
LanguageConfig.excludeDefaultPaths_(${1:aBoolean: nil})
endsnippet

snippet LastValue.ar
LastValue.ar(${1:in: 0.0}, ${2: diff: 0.01})
endsnippet

snippet LastValue.kr
LastValue.kr(${1:in: 0.0}, ${2: diff: 0.01})
endsnippet

snippet Latch.ar
Latch.ar(${1:in: 0.0}, ${2: trig: 0.0})
endsnippet

snippet Latch.kr
Latch.kr(${1:in: 0.0}, ${2: trig: 0.0})
endsnippet

snippet LatoocarfianN.ar
LatoocarfianN.ar(${1:freq: 22050}, ${2: a: 1}, ${3: b: 3}, ${4: c: 0.5}, ${5: d: 0.5}, ${6: xi: 0.5}, ${7: yi: 0.5}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet Launchpad.initClass
Launchpad.initClass(${1:})
endsnippet

snippet Launchpad.new
Launchpad.new(${1:device_number: nil})
endsnippet

snippet Launchpad.oscPath
Launchpad.oscPath(${1:})
endsnippet

snippet LeakDC.ar
LeakDC.ar(${1:in: 0.0}, ${2: coef: 0.995}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LeakDC.kr
LeakDC.kr(${1:in: 0.0}, ${2: coef: 0.9}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LessKeys.initClass
LessKeys.initClass(${1:})
endsnippet

snippet LessKeys.enable
LessKeys.enable(${1:})
endsnippet

snippet LessKeys.disable
LessKeys.disable(${1:})
endsnippet

snippet LevelIndicator.qtClass
LevelIndicator.qtClass(${1:})
endsnippet

snippet LevelIndicator.meterServer
LevelIndicator.meterServer(${1:server: nil})
endsnippet

snippet Library.global
Library.global(${1:})
endsnippet

snippet Library.global_
Library.global_(${1:obj: nil})
endsnippet

snippet Library.initClass
Library.initClass(${1:})
endsnippet

snippet LibraryBase.global
LibraryBase.global(${1:})
endsnippet

snippet LibraryBase.global_
LibraryBase.global_(${1:obj: nil})
endsnippet

snippet LibraryBase.clear
LibraryBase.clear(${1:})
endsnippet

snippet LibraryBase.at
LibraryBase.at(${1:args: [  ]})
endsnippet

snippet LibraryBase.atList
LibraryBase.atList(${1:args: nil})
endsnippet

snippet LibraryBase.putList
LibraryBase.putList(${1:args: nil})
endsnippet

snippet LibraryBase.put
LibraryBase.put(${1:args: [  ]})
endsnippet

snippet LibraryBase.create
LibraryBase.create(${1:args: [  ]})
endsnippet

snippet LibraryBase.postTree
LibraryBase.postTree(${1:})
endsnippet

snippet LinCongN.ar
LinCongN.ar(${1:freq: 22050}, ${2: a: 1.1}, ${3: c: 0.13}, ${4: m: 1.0}, ${5: xi: 0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet LinExp.ar
LinExp.ar(${1:in: 0.0}, ${2: srclo: 0.0}, ${3: srchi: 1.0}, ${4: dstlo: 1.0}, ${5: dsthi: 2.0})
endsnippet

snippet LinExp.kr
LinExp.kr(${1:in: 0.0}, ${2: srclo: 0.0}, ${3: srchi: 1.0}, ${4: dstlo: 1.0}, ${5: dsthi: 2.0})
endsnippet

snippet LinLin.ar
LinLin.ar(${1:in: 0.0}, ${2: srclo: 0.0}, ${3: srchi: 1.0}, ${4: dstlo: 1.0}, ${5: dsthi: 2.0})
endsnippet

snippet LinLin.kr
LinLin.kr(${1:in: 0.0}, ${2: srclo: 0.0}, ${3: srchi: 1.0}, ${4: dstlo: 1.0}, ${5: dsthi: 2.0})
endsnippet

snippet LinRand.new
LinRand.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: minmax: 0})
endsnippet

snippet LinSelectX.crossfadeClass
LinSelectX.crossfadeClass(${1:})
endsnippet

snippet LinXFade2.ar
LinXFade2.ar(${1:inA: nil}, ${2: inB: 0.0}, ${3: pan: 0.0}, ${4: level: 1.0})
endsnippet

snippet LinXFade2.kr
LinXFade2.kr(${1:inA: nil}, ${2: inB: 0.0}, ${3: pan: 0.0}, ${4: level: 1.0})
endsnippet

snippet Line.ar
Line.ar(${1:start: 0.0}, ${2: end: 1.0}, ${3: dur: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0}, ${6: doneAction: 0})
endsnippet

snippet Line.kr
Line.kr(${1:start: 0.0}, ${2: end: 1.0}, ${3: dur: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0}, ${6: doneAction: 0})
endsnippet

snippet LineLayout.new
LineLayout.new(${1:items: [  ]})
endsnippet

snippet LineLayout.parse
LineLayout.parse(${1:in: nil})
endsnippet

snippet Linen.kr
Linen.kr(${1:gate: 1.0}, ${2: attackTime: 0.01}, ${3: susLevel: 1.0}, ${4: releaseTime: 1.0}, ${5: doneAction: 0})
endsnippet

snippet LinkClock.newFromTempoClock
LinkClock.newFromTempoClock(${1:clock: nil})
endsnippet

snippet LinkedListNode.new
LinkedListNode.new(${1:item: nil})
endsnippet

snippet LinuxPlatform.getTerminalEmulatorCmd
LinuxPlatform.getTerminalEmulatorCmd(${1:})
endsnippet

snippet List.new
List.new(${1:size: 8})
endsnippet

snippet List.newClear
List.newClear(${1:size: 0})
endsnippet

snippet List.copyInstance
List.copyInstance(${1:aList: nil})
endsnippet

snippet List.newUsing
List.newUsing(${1:anArray: nil})
endsnippet

snippet ListDUGen.new
ListDUGen.new(${1:list: nil}, ${2: repeats: 1})
endsnippet

snippet ListPattern.new
ListPattern.new(${1:list: nil}, ${2: repeats: 1})
endsnippet

snippet ListView.qtClass
ListView.qtClass(${1:})
endsnippet

snippet ListView.new
ListView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet LocalBuf.new
LocalBuf.new(${1:numFrames: 1}, ${2: numChannels: 1})
endsnippet

snippet LocalBuf.new1
LocalBuf.new1(${1:rate: nil}, ${2: args: [  ]})
endsnippet

snippet LocalBuf.newFrom
LocalBuf.newFrom(${1:list: nil})
endsnippet

snippet LocalClient.default
LocalClient.default(${1:})
endsnippet

snippet LocalClient.initClass
LocalClient.initClass(${1:})
endsnippet

snippet LocalClient.stop
LocalClient.stop(${1:})
endsnippet

snippet LocalIn.ar
LocalIn.ar(${1:numChannels: 1}, ${2: default: 0.0})
endsnippet

snippet LocalIn.kr
LocalIn.kr(${1:numChannels: 1}, ${2: default: 0.0})
endsnippet

snippet LocalOut.ar
LocalOut.ar(${1:channelsArray: nil})
endsnippet

snippet LocalOut.kr
LocalOut.kr(${1:channelsArray: nil})
endsnippet

snippet LocalOut.numFixedArgs
LocalOut.numFixedArgs(${1:})
endsnippet

snippet Logistic.ar
Logistic.ar(${1:chaosParam: 3.0}, ${2: freq: 1000.0}, ${3: init: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Logistic.kr
Logistic.kr(${1:chaosParam: 3.0}, ${2: freq: 1000.0}, ${3: init: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LorenzL.ar
LorenzL.ar(${1:freq: 22050}, ${2: s: 10}, ${3: r: 28}, ${4: b: 2.667}, ${5: h: 0.05}, ${6: xi: 0.1}, ${7: yi: 0}, ${8: zi: 0}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet Loudness.kr
Loudness.kr(${1:chain: nil}, ${2: smask: 0.25}, ${3: tmask: 1})
endsnippet

snippet MFCC.kr
MFCC.kr(${1:chain: nil}, ${2: numcoeff: 13})
endsnippet

snippet MIDIClient.init
MIDIClient.init(${1:inports: nil}, ${2: outports: nil}, ${3: verbose: true})
endsnippet

snippet MIDIClient.list
MIDIClient.list(${1:})
endsnippet

snippet MIDIClient.prInit
MIDIClient.prInit(${1:inports: nil}, ${2: outports: nil})
endsnippet

snippet MIDIClient.prInitClient
MIDIClient.prInitClient(${1:})
endsnippet

snippet MIDIClient.prList
MIDIClient.prList(${1:})
endsnippet

snippet MIDIClient.disposeClient
MIDIClient.disposeClient(${1:})
endsnippet

snippet MIDIClient.prDisposeClient
MIDIClient.prDisposeClient(${1:})
endsnippet

snippet MIDIClient.restart
MIDIClient.restart(${1:})
endsnippet

snippet MIDIClient.externalSources
MIDIClient.externalSources(${1:})
endsnippet

snippet MIDIClient.externalDestinations
MIDIClient.externalDestinations(${1:})
endsnippet

snippet MIDIClient.getClientID
MIDIClient.getClientID(${1:})
endsnippet

snippet MIDIEndPoint.new
MIDIEndPoint.new(${1:device: nil}, ${2: name: nil}, ${3: uid: nil})
endsnippet

snippet MIDIEvent.new
MIDIEvent.new(${1:status: nil}, ${2: port: nil}, ${3: chan: nil}, ${4: b: nil}, ${5: c: nil}, ${6: thread: nil})
endsnippet

snippet MIDIFunc.initClass
MIDIFunc.initClass(${1:})
endsnippet

snippet MIDIFunc.trace
MIDIFunc.trace(${1:bool: true})
endsnippet

snippet MIDIFunc.cmdPeriod
MIDIFunc.cmdPeriod(${1:})
endsnippet

snippet MIDIFunc.new
MIDIFunc.new(${1:func: nil}, ${2: msgNum: nil}, ${3: chan: nil}, ${4: msgType: nil}, ${5: srcID: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet MIDIFunc.cc
MIDIFunc.cc(${1:func: nil}, ${2: ccNum: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIFunc.noteOn
MIDIFunc.noteOn(${1:func: nil}, ${2: noteNum: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIFunc.noteOff
MIDIFunc.noteOff(${1:func: nil}, ${2: noteNum: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIFunc.polytouch
MIDIFunc.polytouch(${1:func: nil}, ${2: noteNum: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIFunc.touch
MIDIFunc.touch(${1:func: nil}, ${2: chan: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIFunc.bend
MIDIFunc.bend(${1:func: nil}, ${2: chan: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIFunc.program
MIDIFunc.program(${1:func: nil}, ${2: chan: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIFunc.sysex
MIDIFunc.sysex(${1:func: nil}, ${2: srcID: nil}, ${3: argTemplate: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIFunc.mtcQuarterFrame
MIDIFunc.mtcQuarterFrame(${1:func: nil}, ${2: srcID: nil}, ${3: argTemplate: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIFunc.smpte
MIDIFunc.smpte(${1:func: nil}, ${2: srcID: nil}, ${3: argTemplate: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIFunc.songPosition
MIDIFunc.songPosition(${1:func: nil}, ${2: srcID: nil}, ${3: argTemplate: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIFunc.songSelect
MIDIFunc.songSelect(${1:func: nil}, ${2: srcID: nil}, ${3: argTemplate: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIFunc.tuneRequest
MIDIFunc.tuneRequest(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.midiClock
MIDIFunc.midiClock(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.sysrt
MIDIFunc.sysrt(${1:func: nil}, ${2: index: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIFunc.tick
MIDIFunc.tick(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.start
MIDIFunc.start(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.continue
MIDIFunc.continue(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.stop
MIDIFunc.stop(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.activeSense
MIDIFunc.activeSense(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.reset
MIDIFunc.reset(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFuncBothCAMessageMatcher.new
MIDIFuncBothCAMessageMatcher.new(${1:chanArray: nil}, ${2: srcID: nil}, ${3: func: nil})
endsnippet

snippet MIDIFuncBothMessageMatcher.new
MIDIFuncBothMessageMatcher.new(${1:chan: nil}, ${2: srcID: nil}, ${3: func: nil})
endsnippet

snippet MIDIFuncChanArrayMessageMatcher.new
MIDIFuncChanArrayMessageMatcher.new(${1:chanArray: nil}, ${2: func: nil})
endsnippet

snippet MIDIFuncChanMessageMatcher.new
MIDIFuncChanMessageMatcher.new(${1:chan: nil}, ${2: func: nil})
endsnippet

snippet MIDIFuncSrcMessageMatcher.new
MIDIFuncSrcMessageMatcher.new(${1:srcID: nil}, ${2: func: nil})
endsnippet

snippet MIDIHelpers.findEndpointDetails
MIDIHelpers.findEndpointDetails(${1:regex: nil}, ${2: deviceNumber: nil})
endsnippet

snippet MIDIIn.addFuncTo
MIDIIn.addFuncTo(${1:what: nil}, ${2: func: nil})
endsnippet

snippet MIDIIn.removeFuncFrom
MIDIIn.removeFuncFrom(${1:what: nil}, ${2: func: nil})
endsnippet

snippet MIDIIn.replaceFuncTo
MIDIIn.replaceFuncTo(${1:what: nil}, ${2: func: nil}, ${3: newFunc: nil})
endsnippet

snippet MIDIIn.waitNoteOn
MIDIIn.waitNoteOn(${1:port: nil}, ${2: chan: nil}, ${3: note: nil}, ${4: veloc: nil})
endsnippet

snippet MIDIIn.waitNoteOff
MIDIIn.waitNoteOff(${1:port: nil}, ${2: chan: nil}, ${3: note: nil}, ${4: veloc: nil})
endsnippet

snippet MIDIIn.waitPoly
MIDIIn.waitPoly(${1:port: nil}, ${2: chan: nil}, ${3: note: nil}, ${4: veloc: nil})
endsnippet

snippet MIDIIn.waitTouch
MIDIIn.waitTouch(${1:port: nil}, ${2: chan: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.waitControl
MIDIIn.waitControl(${1:port: nil}, ${2: chan: nil}, ${3: num: nil}, ${4: val: nil})
endsnippet

snippet MIDIIn.waitBend
MIDIIn.waitBend(${1:port: nil}, ${2: chan: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.waitProgram
MIDIIn.waitProgram(${1:port: nil}, ${2: chan: nil}, ${3: num: nil})
endsnippet

snippet MIDIIn.doAction
MIDIIn.doAction(${1:src: nil}, ${2: status: nil}, ${3: a: nil}, ${4: b: nil}, ${5: c: nil})
endsnippet

snippet MIDIIn.doNoteOnAction
MIDIIn.doNoteOnAction(${1:src: nil}, ${2: chan: nil}, ${3: num: nil}, ${4: veloc: nil})
endsnippet

snippet MIDIIn.doNoteOffAction
MIDIIn.doNoteOffAction(${1:src: nil}, ${2: chan: nil}, ${3: num: nil}, ${4: veloc: nil})
endsnippet

snippet MIDIIn.doPolyTouchAction
MIDIIn.doPolyTouchAction(${1:src: nil}, ${2: chan: nil}, ${3: num: nil}, ${4: val: nil})
endsnippet

snippet MIDIIn.doControlAction
MIDIIn.doControlAction(${1:src: nil}, ${2: chan: nil}, ${3: num: nil}, ${4: val: nil})
endsnippet

snippet MIDIIn.doProgramAction
MIDIIn.doProgramAction(${1:src: nil}, ${2: chan: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.doTouchAction
MIDIIn.doTouchAction(${1:src: nil}, ${2: chan: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.doBendAction
MIDIIn.doBendAction(${1:src: nil}, ${2: chan: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.doSysexAction
MIDIIn.doSysexAction(${1:src: nil}, ${2: packet: nil})
endsnippet

snippet MIDIIn.doInvalidSysexAction
MIDIIn.doInvalidSysexAction(${1:src: nil}, ${2: packet: nil})
endsnippet

snippet MIDIIn.doSysrtAction
MIDIIn.doSysrtAction(${1:src: nil}, ${2: index: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.doSMPTEaction
MIDIIn.doSMPTEaction(${1:src: nil}, ${2: frameRate: nil}, ${3: timecode: nil})
endsnippet

snippet MIDIIn.findPort
MIDIIn.findPort(${1:deviceName: nil}, ${2: portName: nil})
endsnippet

snippet MIDIIn.disconnectAll
MIDIIn.disconnectAll(${1:})
endsnippet

snippet MIDIIn.connectAll
MIDIIn.connectAll(${1:verbose: true})
endsnippet

snippet MIDIIn.connect
MIDIIn.connect(${1:inport: 0}, ${2: device: 0})
endsnippet

snippet MIDIIn.disconnect
MIDIIn.disconnect(${1:inport: 0}, ${2: device: 0})
endsnippet

snippet MIDIIn.connectByUID
MIDIIn.connectByUID(${1:inport: nil}, ${2: uid: nil})
endsnippet

snippet MIDIIn.disconnectByUID
MIDIIn.disconnectByUID(${1:inport: nil}, ${2: uid: nil})
endsnippet

snippet MIDIIn.prDispatchEvent
MIDIIn.prDispatchEvent(${1:eventList: nil}, ${2: status: nil}, ${3: port: nil}, ${4: chan: nil}, ${5: b: nil}, ${6: c: nil})
endsnippet

snippet MIDIMessageDispatcher.new
MIDIMessageDispatcher.new(${1:messageType: nil})
endsnippet

snippet MIDIOut.new
MIDIOut.new(${1:port: nil}, ${2: uid: nil})
endsnippet

snippet MIDIOut.newByName
MIDIOut.newByName(${1:deviceName: nil}, ${2: portName: nil}, ${3: dieIfNotFound: true})
endsnippet

snippet MIDIOut.findPort
MIDIOut.findPort(${1:deviceName: nil}, ${2: portName: nil})
endsnippet

snippet MIDIOut.connect
MIDIOut.connect(${1:outport: 0}, ${2: device: 0})
endsnippet

snippet MIDIOut.disconnect
MIDIOut.disconnect(${1:outport: 0}, ${2: device: 0})
endsnippet

snippet MIDIOut.connectByUID
MIDIOut.connectByUID(${1:outport: nil}, ${2: uid: nil})
endsnippet

snippet MIDIOut.disconnectByUID
MIDIOut.disconnectByUID(${1:outport: nil}, ${2: uid: nil})
endsnippet

snippet MIDIOut.connectAll
MIDIOut.connectAll(${1:verbose: true})
endsnippet

snippet MIDIResponder.removeAll
MIDIResponder.removeAll(${1:})
endsnippet

snippet MIDISMPTEAssembler.new
MIDISMPTEAssembler.new(${1:func: nil})
endsnippet

snippet MIDIValueMatcher.new
MIDIValueMatcher.new(${1:argTemplate: nil}, ${2: func: nil})
endsnippet

snippet MIDIdef.initClass
MIDIdef.initClass(${1:})
endsnippet

snippet MIDIdef.new
MIDIdef.new(${1:key: nil}, ${2: func: nil}, ${3: msgNum: nil}, ${4: chan: nil}, ${5: msgType: nil}, ${6: srcID: nil}, ${7: argTemplate: nil}, ${8: dispatcher: nil})
endsnippet

snippet MIDIdef.cc
MIDIdef.cc(${1:key: nil}, ${2: func: nil}, ${3: ccNum: nil}, ${4: chan: nil}, ${5: srcID: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet MIDIdef.noteOn
MIDIdef.noteOn(${1:key: nil}, ${2: func: nil}, ${3: noteNum: nil}, ${4: chan: nil}, ${5: srcID: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet MIDIdef.noteOff
MIDIdef.noteOff(${1:key: nil}, ${2: func: nil}, ${3: noteNum: nil}, ${4: chan: nil}, ${5: srcID: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet MIDIdef.polytouch
MIDIdef.polytouch(${1:key: nil}, ${2: func: nil}, ${3: noteNum: nil}, ${4: chan: nil}, ${5: srcID: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet MIDIdef.touch
MIDIdef.touch(${1:key: nil}, ${2: func: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIdef.bend
MIDIdef.bend(${1:key: nil}, ${2: func: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIdef.program
MIDIdef.program(${1:key: nil}, ${2: func: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIdef.sysex
MIDIdef.sysex(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIdef.mtcQuarterFrame
MIDIdef.mtcQuarterFrame(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIdef.smpte
MIDIdef.smpte(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIdef.songPosition
MIDIdef.songPosition(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIdef.songSelect
MIDIdef.songSelect(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIdef.tuneRequest
MIDIdef.tuneRequest(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.midiClock
MIDIdef.midiClock(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.sysrt
MIDIdef.sysrt(${1:key: nil}, ${2: func: nil}, ${3: index: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIdef.tick
MIDIdef.tick(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.start
MIDIdef.start(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.continue
MIDIdef.continue(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.stop
MIDIdef.stop(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.activeSense
MIDIdef.activeSense(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.reset
MIDIdef.reset(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.freeAll
MIDIdef.freeAll(${1:})
endsnippet

snippet MPD18.initClass
MPD18.initClass(${1:})
endsnippet

snippet MPD18.new
MPD18.new(${1:device_number: nil})
endsnippet

snippet MPD18.oscPath
MPD18.oscPath(${1:})
endsnippet

snippet Main.version
Main.version(${1:})
endsnippet

snippet Main.scVersionMajor
Main.scVersionMajor(${1:})
endsnippet

snippet Main.scVersionMinor
Main.scVersionMinor(${1:})
endsnippet

snippet Main.scVersionPatch
Main.scVersionPatch(${1:})
endsnippet

snippet Main.scVersionTweak
Main.scVersionTweak(${1:})
endsnippet

snippet Main.versionAtLeast
Main.versionAtLeast(${1:maj: nil}, ${2: min: nil}, ${3: patch: nil})
endsnippet

snippet Main.versionAtMost
Main.versionAtMost(${1:maj: nil}, ${2: min: nil}, ${3: patch: nil})
endsnippet

snippet Main.overwriteMsg
Main.overwriteMsg(${1:})
endsnippet

snippet Main.scVersionPostfix
Main.scVersionPostfix(${1:})
endsnippet

snippet Main.packages
Main.packages(${1:})
endsnippet

snippet MainFX.initClass
MainFX.initClass(${1:})
endsnippet

snippet MainFX.default
MainFX.default(${1:})
endsnippet

snippet MainFX.new
MainFX.new(${1:server: nil}, ${2: numChannels: nil}, ${3: slotNames: nil}, ${4: busIndex: nil})
endsnippet

snippet MainFX.make
MainFX.make(${1:server: nil}, ${2: numChannels: nil}, ${3: slotNames: nil})
endsnippet

snippet MainFX.clear
MainFX.clear(${1:name: nil})
endsnippet

snippet MainMenu.initClass
MainMenu.initClass(${1:})
endsnippet

snippet MainMenu.initBuiltInMenus
MainMenu.initBuiltInMenus(${1:})
endsnippet

snippet MainMenu.register
MainMenu.register(${1:action: nil}, ${2: menu: nil}, ${3: group: none})
endsnippet

snippet MainMenu.unregister
MainMenu.unregister(${1:removeAction: nil})
endsnippet

snippet MainMenu.registerQuarkMenu
MainMenu.registerQuarkMenu(${1:quarkName: nil}, ${2: menu: nil})
endsnippet

snippet MainMenu.unregisterQuarkMenu
MainMenu.unregisterQuarkMenu(${1:quarkName: nil})
endsnippet

snippet MainMenu.clear
MainMenu.clear(${1:})
endsnippet

snippet MainMenu.add
MainMenu.add(${1:menu: nil})
endsnippet

snippet MainMenu.remove
MainMenu.remove(${1:menu: nil})
endsnippet

snippet MainMenu.insert
MainMenu.insert(${1:index: nil}, ${2: menu: nil})
endsnippet

snippet MainMenu.prGetMenu
MainMenu.prGetMenu(${1:name: nil})
endsnippet

snippet MainMenu.prGetMenuGroup
MainMenu.prGetMenuGroup(${1:menuName: nil}, ${2: groupName: nil})
endsnippet

snippet MainMenu.prUpdateServersMenu
MainMenu.prUpdateServersMenu(${1:})
endsnippet

snippet MainMenu.prBuildAppMenus
MainMenu.prBuildAppMenus(${1:})
endsnippet

snippet MainMenu.prUpdate
MainMenu.prUpdate(${1:})
endsnippet

snippet MainMenu.prSetAppMenus
MainMenu.prSetAppMenus(${1:menus: nil})
endsnippet

snippet MantissaMask.ar
MantissaMask.ar(${1:in: 0.0}, ${2: bits: 3}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet MantissaMask.kr
MantissaMask.kr(${1:in: 0.0}, ${2: bits: 3}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Mapping.genControl
Mapping.genControl(${1:instance: nil}, ${2: mapping: nil})
endsnippet

snippet MarkovSet.new
MarkovSet.new(${1:args: nil}, ${2: updateSeeds: false})
endsnippet

snippet MarkovSet.fill
MarkovSet.fill(${1:length: nil}, ${2: stream: nil})
endsnippet

snippet MarkovSetN.new
MarkovSetN.new(${1:args: nil}, ${2: order: 1}, ${3: updateSeeds: false})
endsnippet

snippet MarkovSetN.fill
MarkovSetN.fill(${1:n: nil}, ${2: stream: nil}, ${3: order: 1})
endsnippet

snippet MasterFX.new
MasterFX.new(${1:server: nil}, ${2: numChannels: nil}, ${3: slotNames: nil}, ${4: busIndex: nil})
endsnippet

snippet MasterFXGui.new
MasterFXGui.new(${1:chain: nil}, ${2: numItems: 16}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: nil})
endsnippet

snippet Matrix.newClear
Matrix.newClear(${1:rows: 1}, ${2: cols: 1})
endsnippet

snippet Matrix.with
Matrix.with(${1:array: nil})
endsnippet

snippet Matrix.withFlatArray
Matrix.withFlatArray(${1:rows: nil}, ${2: cols: nil}, ${3: array: nil})
endsnippet

snippet Matrix.newIdentity
Matrix.newIdentity(${1:n: nil})
endsnippet

snippet Matrix.fill
Matrix.fill(${1:rows: nil}, ${2: cols: nil}, ${3: func: nil})
endsnippet

snippet Matrix.newDiagonal
Matrix.newDiagonal(${1:diagonal: nil})
endsnippet

snippet Matrix.newDFT
Matrix.newDFT(${1:n: nil})
endsnippet

snippet Matrix.newIDFT
Matrix.newIDFT(${1:n: nil})
endsnippet

snippet Matrix.mul
Matrix.mul(${1:m1: 0}, ${2: m2: 0})
endsnippet

snippet MaxLocalBufs.new
MaxLocalBufs.new(${1:})
endsnippet

snippet Median.ar
Median.ar(${1:length: 3}, ${2: in: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Median.kr
Median.kr(${1:length: 3}, ${2: in: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Menu.qtClass
Menu.qtClass(${1:})
endsnippet

snippet Menu.new
Menu.new(${1:actions: [  ]})
endsnippet

snippet Menu.newFrom
Menu.newFrom(${1:otherMenu: nil})
endsnippet

snippet MenuAction.qtClass
MenuAction.qtClass(${1:})
endsnippet

snippet MenuAction.new
MenuAction.new(${1:string: nil}, ${2: function: nil})
endsnippet

snippet MenuAction.separator
MenuAction.separator(${1:string: nil})
endsnippet

snippet Message.new
Message.new(${1:receiver: nil}, ${2: selector: nil}, ${3: args: nil})
endsnippet

snippet MeterSync.new
MeterSync.new(${1:clock: nil}, ${2: id: nil}, ${3: ports: nil})
endsnippet

snippet MethodError.new
MethodError.new(${1:what: nil}, ${2: receiver: nil})
endsnippet

snippet MethodOverride.new
MethodOverride.new(${1:ownerClass: nil}, ${2: selector: nil}, ${3: activePath: nil}, ${4: overriddenPath: nil})
endsnippet

snippet MethodOverride.fromLine
MethodOverride.fromLine(${1:string: nil})
endsnippet

snippet MethodOverride.all
MethodOverride.all(${1:})
endsnippet

snippet MethodOverride.printAll
MethodOverride.printAll(${1:})
endsnippet

snippet MethodOverride.printAllShort
MethodOverride.printAllShort(${1:})
endsnippet

snippet MethodQuote.new
MethodQuote.new(${1:selector: nil})
endsnippet

snippet MidEQ.ar
MidEQ.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: db: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet MidEQ.kr
MidEQ.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: db: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet MidiController.oscPath
MidiController.oscPath(${1:})
endsnippet

snippet MidiController.new
MidiController.new(${1:name_: nil}, ${2: deviceNumber_: nil})
endsnippet

snippet MidiFunctionBend.new
MidiFunctionBend.new(${1:name: nil})
endsnippet

snippet MidiFunctionControl.new
MidiFunctionControl.new(${1:name: nil})
endsnippet

snippet MidiFunctionNoteOff.new
MidiFunctionNoteOff.new(${1:name: nil})
endsnippet

snippet MidiFunctionNoteOn.new
MidiFunctionNoteOn.new(${1:name: nil})
endsnippet

snippet MidiFunctionPolytouch.new
MidiFunctionPolytouch.new(${1:name: nil})
endsnippet

snippet MidiFunctionProgram.new
MidiFunctionProgram.new(${1:name: nil})
endsnippet

snippet MidiFunctionSMPTE.new
MidiFunctionSMPTE.new(${1:name: nil})
endsnippet

snippet MidiFunctionSysex.new
MidiFunctionSysex.new(${1:name: nil})
endsnippet

snippet MidiFunctionSysrt.new
MidiFunctionSysrt.new(${1:name: nil})
endsnippet

snippet MidiFunctionTouch.new
MidiFunctionTouch.new(${1:name: nil})
endsnippet

snippet MidiInLocal.new
MidiInLocal.new(${1:inport_: nil}, ${2: device_: nil})
endsnippet

snippet MidiMix.initClass
MidiMix.initClass(${1:})
endsnippet

snippet MidiMix.new
MidiMix.new(${1:device_number: nil})
endsnippet

snippet MidiMix.oscPath
MidiMix.oscPath(${1:})
endsnippet

snippet MiniLabMKII.initClass
MiniLabMKII.initClass(${1:})
endsnippet

snippet MiniLabMKII.new
MiniLabMKII.new(${1:device_number: nil})
endsnippet

snippet MiniLabMKII.oscPath
MiniLabMKII.oscPath(${1:})
endsnippet

snippet Mix.new
Mix.new(${1:array: nil})
endsnippet

snippet Mix.fill
Mix.fill(${1:n: nil}, ${2: function: nil})
endsnippet

snippet Mix.ar
Mix.ar(${1:array: nil})
endsnippet

snippet Mix.kr
Mix.kr(${1:array: nil})
endsnippet

snippet Mix.arFill
Mix.arFill(${1:n: nil}, ${2: function: nil})
endsnippet

snippet Mix.krFill
Mix.krFill(${1:n: nil}, ${2: function: nil})
endsnippet

snippet MixedBundleTester.reset
MixedBundleTester.reset(${1:})
endsnippet

snippet MixedBundleTester.findMessage
MixedBundleTester.findMessage(${1:message: nil})
endsnippet

snippet MixedBundleTester.findPreparationMessage
MixedBundleTester.findPreparationMessage(${1:message: nil})
endsnippet

snippet MixedBundleTester.report
MixedBundleTester.report(${1:})
endsnippet

snippet ModDif.ar
ModDif.ar(${1:x: 0.0}, ${2: y: 0.0}, ${3: mod: 1.0})
endsnippet

snippet ModDif.kr
ModDif.kr(${1:x: 0.0}, ${2: y: 0.0}, ${3: mod: 1.0})
endsnippet

snippet ModDif.ir
ModDif.ir(${1:x: 0.0}, ${2: y: 0.0}, ${3: mod: 1.0})
endsnippet

snippet MonitorGui.initClass
MonitorGui.initClass(${1:})
endsnippet

snippet MonitorGui.new
MonitorGui.new(${1:object: nil}, ${2: parent: nil}, ${3: bounds: nil}, ${4: makeSkip: true}, ${5: options: [  ]})
endsnippet

snippet MoogFF.ar
MoogFF.ar(${1:in: nil}, ${2: freq: 100}, ${3: gain: 2}, ${4: reset: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet MoogFF.kr
MoogFF.kr(${1:in: nil}, ${2: freq: 100}, ${3: gain: 2}, ${4: reset: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet MostChange.ar
MostChange.ar(${1:a: 0.0}, ${2: b: 0.0})
endsnippet

snippet MostChange.kr
MostChange.kr(${1:a: 0.0}, ${2: b: 0.0})
endsnippet

snippet MouseButton.kr
MouseButton.kr(${1:minval: 0}, ${2: maxval: 1}, ${3: lag: 0.2})
endsnippet

snippet MouseX.kr
MouseX.kr(${1:minval: 0}, ${2: maxval: 1}, ${3: warp: 0}, ${4: lag: 0.2})
endsnippet

snippet MulAdd.new
MulAdd.new(${1:in: nil}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet MulAdd.new1
MulAdd.new1(${1:rate: nil}, ${2: in: nil}, ${3: mul: nil}, ${4: add: nil})
endsnippet

snippet MulAdd.canBeMulAdd
MulAdd.canBeMulAdd(${1:in: nil}, ${2: mul: nil}, ${3: add: nil})
endsnippet

snippet MultiLevelIdentityDictionary.new
MultiLevelIdentityDictionary.new(${1:})
endsnippet

snippet MultiOutUGen.newFromDesc
MultiOutUGen.newFromDesc(${1:rate: nil}, ${2: numOutputs: nil}, ${3: inputs: nil})
endsnippet

snippet MultiSliderView.qtClass
MultiSliderView.qtClass(${1:})
endsnippet

snippet MultiTap.ar
MultiTap.ar(${1:timesArray: nil}, ${2: levelsArray: nil}, ${3: in: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0}, ${6: bufnum: nil})
endsnippet

snippet MultiplexAnalogIn.ar
MultiplexAnalogIn.ar(${1:analogPin: 0}, ${2: muxChannel: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet MultiplexAnalogIn.kr
MultiplexAnalogIn.kr(${1:analogPin: 0}, ${2: muxChannel: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet NAryOpFunction.new
NAryOpFunction.new(${1:selector: nil}, ${2: a: nil}, ${3: arglist: nil})
endsnippet

snippet NAryOpStream.new
NAryOpStream.new(${1:operator: nil}, ${2: a: nil}, ${3: arglist: nil})
endsnippet

snippet NAryValueProxy.new
NAryValueProxy.new(${1:receiver: nil}, ${2: args: nil})
endsnippet

snippet NPVoicer.new
NPVoicer.new(${1:proxy: nil}, ${2: indivParams: nil})
endsnippet

snippet NRand.new
NRand.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: n: 0})
endsnippet

snippet NamedControl.ar
NamedControl.ar(${1:name: nil}, ${2: values: nil}, ${3: lags: nil}, ${4: spec: nil})
endsnippet

snippet NamedControl.kr
NamedControl.kr(${1:name: nil}, ${2: values: nil}, ${3: lags: nil}, ${4: fixedLag: false}, ${5: spec: nil})
endsnippet

snippet NamedControl.ir
NamedControl.ir(${1:name: nil}, ${2: values: nil}, ${3: lags: nil}, ${4: spec: nil})
endsnippet

snippet NamedControl.tr
NamedControl.tr(${1:name: nil}, ${2: values: nil}, ${3: lags: nil}, ${4: spec: nil})
endsnippet

snippet NamedControl.new
NamedControl.new(${1:name: nil}, ${2: values: nil}, ${3: rate: nil}, ${4: lags: nil}, ${5: fixedLag: false}, ${6: spec: nil})
endsnippet

snippet NamedControl.initDict
NamedControl.initDict(${1:})
endsnippet

snippet NanoKontrol.initClass
NanoKontrol.initClass(${1:})
endsnippet

snippet NanoKontrol.new
NanoKontrol.new(${1:device_number: nil})
endsnippet

snippet NanoKontrol.oscPath
NanoKontrol.oscPath(${1:})
endsnippet

snippet Ndef.initClass
Ndef.initClass(${1:})
endsnippet

snippet Ndef.new
Ndef.new(${1:key: nil}, ${2: object: nil})
endsnippet

snippet Ndef.ar
Ndef.ar(${1:key: nil}, ${2: numChannels: nil}, ${3: offset: 0})
endsnippet

snippet Ndef.kr
Ndef.kr(${1:key: nil}, ${2: numChannels: nil}, ${3: offset: 0})
endsnippet

snippet Ndef.clear
Ndef.clear(${1:fadeTime: nil})
endsnippet

snippet Ndef.dictFor
Ndef.dictFor(${1:server: nil})
endsnippet

snippet Ndef.gui
Ndef.gui(${1:server: nil}, ${2: numItems: nil}, ${3: bounds: nil}, ${4: preset: nil})
endsnippet

snippet NdefGui.initClass
NdefGui.initClass(${1:})
endsnippet

snippet NdefGui.new
NdefGui.new(${1:object: nil}, ${2: numItems: 4}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: nil})
endsnippet

snippet NdefGui.big
NdefGui.big(${1:})
endsnippet

snippet NdefGui.full
NdefGui.full(${1:})
endsnippet

snippet NdefGui.audio
NdefGui.audio(${1:})
endsnippet

snippet NdefGui.audioSm
NdefGui.audioSm(${1:})
endsnippet

snippet NdefGui.control
NdefGui.control(${1:})
endsnippet

snippet NdefGui.makeButFuncs
NdefGui.makeButFuncs(${1:})
endsnippet

snippet NdefPreset.initClass
NdefPreset.initClass(${1:})
endsnippet

snippet NdefPreset.proxyClass
NdefPreset.proxyClass(${1:})
endsnippet

snippet NdefPreset.new
NdefPreset.new(${1:key: nil}, ${2: namesToStore: nil}, ${3: settings: nil}, ${4: specs: nil}, ${5: morphFuncs: nil})
endsnippet

snippet NetAddr.initClass
NetAddr.initClass(${1:})
endsnippet

snippet NetAddr.new
NetAddr.new(${1:hostname: nil}, ${2: port: nil})
endsnippet

snippet NetAddr.fromIP
NetAddr.fromIP(${1:addr: nil}, ${2: port: nil})
endsnippet

snippet NetAddr.langPort
NetAddr.langPort(${1:})
endsnippet

snippet NetAddr.matchLangIP
NetAddr.matchLangIP(${1:ipstring: nil})
endsnippet

snippet NetAddr.localEndPoint
NetAddr.localEndPoint(${1:})
endsnippet

snippet NetAddr.localAddr
NetAddr.localAddr(${1:})
endsnippet

snippet NetAddr.useDoubles_
NetAddr.useDoubles_(${1:flag: false})
endsnippet

snippet NetAddr.broadcastFlag
NetAddr.broadcastFlag(${1:})
endsnippet

snippet NetAddr.broadcastFlag_
NetAddr.broadcastFlag_(${1:flag: true})
endsnippet

snippet NetAddr.disconnectAll
NetAddr.disconnectAll(${1:})
endsnippet

snippet NetAddr.connections
NetAddr.connections(${1:})
endsnippet

snippet Nil.new
Nil.new(${1:})
endsnippet

snippet Node.initClass
Node.initClass(${1:})
endsnippet

snippet Node.basicNew
Node.basicNew(${1:server: nil}, ${2: nodeID: nil})
endsnippet

snippet Node.actionNumberFor
Node.actionNumberFor(${1:addAction: addToHead})
endsnippet

snippet Node.setnMsgArgs
Node.setnMsgArgs(${1:args: [  ]})
endsnippet

snippet Node.orderNodesMsg
Node.orderNodesMsg(${1:nodes: nil})
endsnippet

snippet NodeControl.new
NodeControl.new(${1:node: nil}, ${2: index: nil})
endsnippet

snippet NodeIDAllocator.new
NodeIDAllocator.new(${1:user: 0}, ${2: initTemp: 1000})
endsnippet

snippet NodeProxy.new
NodeProxy.new(${1:server: nil}, ${2: rate: nil}, ${3: numChannels: nil}, ${4: inputs: nil})
endsnippet

snippet NodeProxyPreset.proxyClass
NodeProxyPreset.proxyClass(${1:})
endsnippet

snippet NodeProxyPreset.new
NodeProxyPreset.new(${1:obj: nil}, ${2: namesToStore: nil}, ${3: settings: nil}, ${4: specs: nil}, ${5: morphFuncs: nil})
endsnippet

snippet NodeWatcher.initClass
NodeWatcher.initClass(${1:})
endsnippet

snippet NodeWatcher.cmdPeriod
NodeWatcher.cmdPeriod(${1:})
endsnippet

snippet NodeWatcher.doOnServerQuit
NodeWatcher.doOnServerQuit(${1:aServer: nil})
endsnippet

snippet NodeWatcher.doOnServerBoot
NodeWatcher.doOnServerBoot(${1:aServer: nil})
endsnippet

snippet NodeWatcher.newFrom
NodeWatcher.newFrom(${1:server: nil})
endsnippet

snippet NodeWatcher.register
NodeWatcher.register(${1:node: nil}, ${2: assumePlaying: false})
endsnippet

snippet NodeWatcher.unregister
NodeWatcher.unregister(${1:node: nil})
endsnippet

snippet Normalizer.ar
Normalizer.ar(${1:in: 0.0}, ${2: level: 1.0}, ${3: dur: 0.01})
endsnippet

snippet NoteOffResponder.init
NoteOffResponder.init(${1:})
endsnippet

snippet NoteOffResponder.initialized
NoteOffResponder.initialized(${1:})
endsnippet

snippet NoteOffResponder.responders
NoteOffResponder.responders(${1:})
endsnippet

snippet NoteOffResponder.add
NoteOffResponder.add(${1:resp: nil})
endsnippet

snippet NoteOffResponder.remove
NoteOffResponder.remove(${1:resp: nil})
endsnippet

snippet NoteOnResponder.new
NoteOnResponder.new(${1:function: nil}, ${2: src: nil}, ${3: chan: nil}, ${4: num: nil}, ${5: veloc: nil}, ${6: install: true}, ${7: swallowEvent: false})
endsnippet

snippet NoteOnResponder.initialized
NoteOnResponder.initialized(${1:})
endsnippet

snippet NoteOnResponder.responders
NoteOnResponder.responders(${1:})
endsnippet

snippet NoteOnResponder.init
NoteOnResponder.init(${1:})
endsnippet

snippet NoteOnResponder.add
NoteOnResponder.add(${1:resp: nil})
endsnippet

snippet NoteOnResponder.remove
NoteOnResponder.remove(${1:resp: nil})
endsnippet

snippet NotificationCenter.notify
NotificationCenter.notify(${1:object: nil}, ${2: message: nil}, ${3: args: nil})
endsnippet

snippet NotificationCenter.register
NotificationCenter.register(${1:object: nil}, ${2: message: nil}, ${3: listener: nil}, ${4: action: nil})
endsnippet

snippet NotificationCenter.unregister
NotificationCenter.unregister(${1:object: nil}, ${2: message: nil}, ${3: listener: nil})
endsnippet

snippet NotificationCenter.registerOneShot
NotificationCenter.registerOneShot(${1:object: nil}, ${2: message: nil}, ${3: listener: nil}, ${4: action: nil})
endsnippet

snippet NotificationCenter.clear
NotificationCenter.clear(${1:})
endsnippet

snippet NotificationCenter.registrationExists
NotificationCenter.registrationExists(${1:object: nil}, ${2: message: nil}, ${3: listener: nil})
endsnippet

snippet NotificationCenter.initClass
NotificationCenter.initClass(${1:})
endsnippet

snippet NotificationCenter.removeForListener
NotificationCenter.removeForListener(${1:listener: nil})
endsnippet

snippet NotificationRegistration.new
NotificationRegistration.new(${1:o: nil}, ${2: m: nil}, ${3: l: nil})
endsnippet

snippet NumChannels.ar
NumChannels.ar(${1:input: nil}, ${2: numChannels: 2}, ${3: mixdown: true})
endsnippet

snippet NumRunningSynths.kr
NumRunningSynths.kr(${1:})
endsnippet

snippet NumberBox.qtClass
NumberBox.qtClass(${1:})
endsnippet

snippet NumberBox.new
NumberBox.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet OSCArgsMatcher.new
OSCArgsMatcher.new(${1:argTemplate: nil}, ${2: func: nil})
endsnippet

snippet OSCFunc.initClass
OSCFunc.initClass(${1:})
endsnippet

snippet OSCFunc.new
OSCFunc.new(${1:func: nil}, ${2: path: nil}, ${3: srcID: nil}, ${4: recvPort: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet OSCFunc.newMatching
OSCFunc.newMatching(${1:func: nil}, ${2: path: nil}, ${3: srcID: nil}, ${4: recvPort: nil}, ${5: argTemplate: nil})
endsnippet

snippet OSCFunc.trace
OSCFunc.trace(${1:bool: true}, ${2: hideStatusMsg: false})
endsnippet

snippet OSCFunc.cmdPeriod
OSCFunc.cmdPeriod(${1:})
endsnippet

snippet OSCFuncAddrMessageMatcher.new
OSCFuncAddrMessageMatcher.new(${1:addr: nil}, ${2: func: nil})
endsnippet

snippet OSCFuncBothMessageMatcher.new
OSCFuncBothMessageMatcher.new(${1:addr: nil}, ${2: recvPort: nil}, ${3: func: nil})
endsnippet

snippet OSCFuncRecvPortMessageMatcher.new
OSCFuncRecvPortMessageMatcher.new(${1:recvPort: nil}, ${2: func: nil})
endsnippet

snippet OSCdef.initClass
OSCdef.initClass(${1:})
endsnippet

snippet OSCdef.new
OSCdef.new(${1:key: nil}, ${2: func: nil}, ${3: path: nil}, ${4: srcID: nil}, ${5: recvPort: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet OSCdef.newMatching
OSCdef.newMatching(${1:key: nil}, ${2: func: nil}, ${3: path: nil}, ${4: srcID: nil}, ${5: recvPort: nil}, ${6: argTemplate: nil})
endsnippet

snippet OSCdef.freeAll
OSCdef.freeAll(${1:})
endsnippet

snippet OSCpathDispatcher.new
OSCpathDispatcher.new(${1:addr: nil}, ${2: cmdName: nil}, ${3: action: nil}, ${4: pathSize: nil})
endsnippet

snippet OSCpathResponder.new
OSCpathResponder.new(${1:addr: nil}, ${2: cmdPath: nil}, ${3: action: nil})
endsnippet

snippet OSCresponder.new
OSCresponder.new(${1:addr: nil}, ${2: cmdName: nil}, ${3: action: nil})
endsnippet

snippet OSCresponder.initClass
OSCresponder.initClass(${1:})
endsnippet

snippet OSCresponder.respond
OSCresponder.respond(${1:time: nil}, ${2: addr: nil}, ${3: msg: nil})
endsnippet

snippet OSCresponder.add
OSCresponder.add(${1:responder: nil})
endsnippet

snippet OSCresponder.remove
OSCresponder.remove(${1:responder: nil})
endsnippet

snippet OSCresponder.removeAddr
OSCresponder.removeAddr(${1:addr: nil})
endsnippet

snippet Object.new
Object.new(${1:maxSize: 0})
endsnippet

snippet Object.newCopyArgs
Object.newCopyArgs(${1:args: [  ]})
endsnippet

snippet Object.initClass
Object.initClass(${1:})
endsnippet

snippet Object.prNew
Object.prNew(${1:maxSize: 0})
endsnippet

snippet Object.prNewCopyArgs
Object.prNewCopyArgs(${1:args: [  ]})
endsnippet

snippet Object.readArchive
Object.readArchive(${1:pathname: nil})
endsnippet

snippet Object.readTextArchive
Object.readTextArchive(${1:pathname: nil})
endsnippet

snippet Object.readBinaryArchive
Object.readBinaryArchive(${1:pathname: nil})
endsnippet

snippet Object.implClass
Object.implClass(${1:})
endsnippet

snippet ObjectGui.new
ObjectGui.new(${1:model: nil})
endsnippet

snippet ObjectTable.new
ObjectTable.new(${1:})
endsnippet

snippet ObjectTable.initClass
ObjectTable.initClass(${1:})
endsnippet

snippet ObjectTable.add
ObjectTable.add(${1:obj: nil})
endsnippet

snippet ObjectTable.put
ObjectTable.put(${1:key: nil}, ${2: obj: nil})
endsnippet

snippet ObjectTable.remove
ObjectTable.remove(${1:obj: nil})
endsnippet

snippet ObjectTable.at
ObjectTable.at(${1:id: nil})
endsnippet

snippet ObjectTable.getID
ObjectTable.getID(${1:obj: nil})
endsnippet

snippet ObjectTable.objPerform
ObjectTable.objPerform(${1:id: nil}, ${2: selector: nil}, ${3: args: [  ]})
endsnippet

snippet OffsetOut.kr
OffsetOut.kr(${1:})
endsnippet

snippet OnError.run
OnError.run(${1:})
endsnippet

snippet OnePole.ar
OnePole.ar(${1:in: 0.0}, ${2: coef: 0.5}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet OnePole.kr
OnePole.kr(${1:in: 0.0}, ${2: coef: 0.5}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet OneShotStream.new
OneShotStream.new(${1:value: nil})
endsnippet

snippet Onsets.kr
Onsets.kr(${1:chain: nil}, ${2: threshold: 0.5}, ${3: odftype: rcomplex}, ${4: relaxtime: 1}, ${5: floor: 0.1}, ${6: mingap: 10}, ${7: medianspan: 11}, ${8: whtype: 1}, ${9: rawodf: 0})
endsnippet

snippet Operand.new
Operand.new(${1:value: nil})
endsnippet

snippet Order.new
Order.new(${1:size: 8})
endsnippet

snippet Order.newFromIndices
Order.newFromIndices(${1:array: nil}, ${2: indices: nil})
endsnippet

snippet Osc.ar
Osc.ar(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Osc.kr
Osc.kr(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet OscN.ar
OscN.ar(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet OscN.kr
OscN.kr(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Out.ar
Out.ar(${1:bus: nil}, ${2: channelsArray: nil})
endsnippet

snippet Out.kr
Out.kr(${1:bus: nil}, ${2: channelsArray: nil})
endsnippet

snippet Out.numFixedArgs
Out.numFixedArgs(${1:})
endsnippet

snippet OutOfContextReturnError.new
OutOfContextReturnError.new(${1:receiver: nil}, ${2: method: nil}, ${3: result: nil})
endsnippet

snippet OutputProxy.new
OutputProxy.new(${1:rate: nil}, ${2: itsSourceUGen: nil}, ${3: index: nil})
endsnippet

snippet P3n1.new
P3n1.new(${1:pattern: nil}, ${2: endWhen: nil})
endsnippet

snippet PAbstractGroup.embedLoop
PAbstractGroup.embedLoop(${1:inevent: nil}, ${2: stream: nil}, ${3: groupID: nil}, ${4: ingroup: nil}, ${5: cleanup: nil})
endsnippet

snippet PMOsc.ar
PMOsc.ar(${1:carfreq: nil}, ${2: modfreq: nil}, ${3: pmindex: 0.0}, ${4: modphase: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet PMOsc.kr
PMOsc.kr(${1:carfreq: nil}, ${2: modfreq: nil}, ${3: pmindex: 0.0}, ${4: modphase: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet PSinGrain.ar
PSinGrain.ar(${1:freq: 440.0}, ${2: dur: 0.2}, ${3: amp: 0.1})
endsnippet

snippet PV_BinScramble.new
PV_BinScramble.new(${1:buffer: nil}, ${2: wipe: 0.0}, ${3: width: 0.2}, ${4: trig: 0.0})
endsnippet

snippet PV_BinShift.new
PV_BinShift.new(${1:buffer: nil}, ${2: stretch: 1.0}, ${3: shift: 0.0}, ${4: interp: 0})
endsnippet

snippet PV_BinWipe.new
PV_BinWipe.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: wipe: 0.0})
endsnippet

snippet PV_BrickWall.new
PV_BrickWall.new(${1:buffer: nil}, ${2: wipe: 0.0})
endsnippet

snippet PV_ConformalMap.new
PV_ConformalMap.new(${1:buffer: nil}, ${2: areal: 0.0}, ${3: aimag: 0.0})
endsnippet

snippet PV_Diffuser.new
PV_Diffuser.new(${1:buffer: nil}, ${2: trig: 0.0})
endsnippet

snippet PV_HainsworthFoote.ar
PV_HainsworthFoote.ar(${1:buffer: nil}, ${2: proph: 0.0}, ${3: propf: 0.0}, ${4: threshold: 1.0}, ${5: waittime: 0.04})
endsnippet

snippet PV_JensenAndersen.ar
PV_JensenAndersen.ar(${1:buffer: nil}, ${2: propsc: 0.25}, ${3: prophfe: 0.25}, ${4: prophfc: 0.25}, ${5: propsf: 0.25}, ${6: threshold: 1.0}, ${7: waittime: 0.04})
endsnippet

snippet PV_MagAbove.new
PV_MagAbove.new(${1:buffer: nil}, ${2: threshold: 0.0})
endsnippet

snippet PV_MagDiv.new
PV_MagDiv.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: zeroed: 0.0001})
endsnippet

snippet PV_MagFreeze.new
PV_MagFreeze.new(${1:buffer: nil}, ${2: freeze: 0.0})
endsnippet

snippet PV_MagMul.new
PV_MagMul.new(${1:bufferA: nil}, ${2: bufferB: nil})
endsnippet

snippet PV_MagShift.new
PV_MagShift.new(${1:buffer: nil}, ${2: stretch: 1.0}, ${3: shift: 0.0})
endsnippet

snippet PV_MagSmear.new
PV_MagSmear.new(${1:buffer: nil}, ${2: bins: 0.0})
endsnippet

snippet PV_MagSquared.new
PV_MagSquared.new(${1:buffer: nil})
endsnippet

snippet PV_PhaseShift.new
PV_PhaseShift.new(${1:buffer: nil}, ${2: shift: nil}, ${3: integrate: 0})
endsnippet

snippet PV_RandComb.new
PV_RandComb.new(${1:buffer: nil}, ${2: wipe: 0.0}, ${3: trig: 0.0})
endsnippet

snippet PV_RandWipe.new
PV_RandWipe.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: wipe: 0.0}, ${4: trig: 0.0})
endsnippet

snippet PV_RectComb.new
PV_RectComb.new(${1:buffer: nil}, ${2: numTeeth: 0.0}, ${3: phase: 0.0}, ${4: width: 0.5})
endsnippet

snippet PV_RectComb2.new
PV_RectComb2.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: numTeeth: 0.0}, ${4: phase: 0.0}, ${5: width: 0.5})
endsnippet

snippet PackFFT.new
PackFFT.new(${1:chain: nil}, ${2: bufsize: nil}, ${3: magsphases: nil}, ${4: frombin: 0}, ${5: tobin: nil}, ${6: zeroothers: 0})
endsnippet

snippet PageLayout.new
PageLayout.new(${1:title: nil}, ${2: bounds: nil}, ${3: margin: nil}, ${4: background: nil}, ${5: scroll: true}, ${6: front: true})
endsnippet

snippet PageLayout.on
PageLayout.on(${1:window: nil}, ${2: bounds: nil}, ${3: margin: nil}, ${4: background: nil})
endsnippet

snippet PageLayout.guify
PageLayout.guify(${1:parent: nil}, ${2: title: nil}, ${3: width: nil}, ${4: height: nil}, ${5: background: nil})
endsnippet

snippet Pair.new
Pair.new(${1:linkDown: nil}, ${2: linkAcross: nil})
endsnippet

snippet Pair.newFrom
Pair.newFrom(${1:collection: nil})
endsnippet

snippet Pan2.ar
Pan2.ar(${1:in: nil}, ${2: pos: 0.0}, ${3: level: 1.0})
endsnippet

snippet Pan2.kr
Pan2.kr(${1:in: nil}, ${2: pos: 0.0}, ${3: level: 1.0})
endsnippet

snippet Pan4.ar
Pan4.ar(${1:in: nil}, ${2: xpos: 0.0}, ${3: ypos: 0.0}, ${4: level: 1.0})
endsnippet

snippet Pan4.kr
Pan4.kr(${1:in: nil}, ${2: xpos: 0.0}, ${3: ypos: 0.0}, ${4: level: 1.0})
endsnippet

snippet PanAz.ar
PanAz.ar(${1:numChans: nil}, ${2: in: nil}, ${3: pos: 0.0}, ${4: level: 1.0}, ${5: width: 2.0}, ${6: orientation: 0.5})
endsnippet

snippet PanAz.kr
PanAz.kr(${1:numChans: nil}, ${2: in: nil}, ${3: pos: 0.0}, ${4: level: 1.0}, ${5: width: 2.0}, ${6: orientation: 0.5})
endsnippet

snippet PanB.ar
PanB.ar(${1:in: nil}, ${2: azimuth: 0}, ${3: elevation: 0}, ${4: gain: 1})
endsnippet

snippet PanB.kr
PanB.kr(${1:in: nil}, ${2: azimuth: 0}, ${3: elevation: 0}, ${4: gain: 1})
endsnippet

snippet PanB2.ar
PanB2.ar(${1:in: nil}, ${2: azimuth: 0}, ${3: gain: 1})
endsnippet

snippet PanB2.kr
PanB2.kr(${1:in: nil}, ${2: azimuth: 0}, ${3: gain: 1})
endsnippet

snippet ParGroup.creationCmd
ParGroup.creationCmd(${1:})
endsnippet

snippet ParamView.new
ParamView.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: spec: nil}, ${5: action: nil}, ${6: initVal: nil}, ${7: initAction: false})
endsnippet

snippet PartConv.ar
PartConv.ar(${1:in: nil}, ${2: fftsize: nil}, ${3: irbufnum: nil}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet PartConv.calcNumPartitions
PartConv.calcNumPartitions(${1:fftsize: nil}, ${2: irbuffer: nil})
endsnippet

snippet PartConv.calcBufSize
PartConv.calcBufSize(${1:fftsize: nil}, ${2: irbuffer: nil})
endsnippet

snippet PathName.new
PathName.new(${1:path: })
endsnippet

snippet PathName.initClass
PathName.initClass(${1:})
endsnippet

snippet PatternConductor.new
PatternConductor.new(${1:patterns: nil}, ${2: event: nil}, ${3: quant: nil})
endsnippet

snippet PatternProxy.new
PatternProxy.new(${1:source: nil})
endsnippet

snippet PatternProxy.default
PatternProxy.default(${1:})
endsnippet

snippet PatternProxy.defaultValue
PatternProxy.defaultValue(${1:})
endsnippet

snippet PatternProxy.parallelise
PatternProxy.parallelise(${1:list: nil})
endsnippet

snippet PatternProxy.removeAll
PatternProxy.removeAll(${1:})
endsnippet

snippet PatternProxy.clear
PatternProxy.clear(${1:})
endsnippet

snippet PatternProxy.basicNew
PatternProxy.basicNew(${1:source: nil})
endsnippet

snippet PatternProxy.at
PatternProxy.at(${1:key: nil})
endsnippet

snippet PatternProxy.postRepository
PatternProxy.postRepository(${1:keys: nil}, ${2: stream: nil})
endsnippet

snippet PatternProxy.event
PatternProxy.event(${1:proxyClass: nil})
endsnippet

snippet PatternProxy.hasGlobalDictionary
PatternProxy.hasGlobalDictionary(${1:})
endsnippet

snippet Pause.kr
Pause.kr(${1:gate: nil}, ${2: id: nil})
endsnippet

snippet PauseSelf.kr
PauseSelf.kr(${1:in: nil})
endsnippet

snippet PauseSelfWhenDone.kr
PauseSelfWhenDone.kr(${1:src: nil})
endsnippet

snippet PauseStream.new
PauseStream.new(${1:argStream: nil}, ${2: clock: nil})
endsnippet

snippet Pavaroh.new
Pavaroh.new(${1:pattern: nil}, ${2: aroh: nil}, ${3: avaroh: nil}, ${4: stepsPerOctave: 12})
endsnippet

snippet Pbeta.new
Pbeta.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: prob1: 1}, ${4: prob2: 1}, ${5: length: inf})
endsnippet

snippet Pbind.new
Pbind.new(${1:pairs: [  ]})
endsnippet

snippet PbindProxy.new
PbindProxy.new(${1:pairs: [  ]})
endsnippet

snippet Pbindef.new
Pbindef.new(${1:key: nil}, ${2: pairs: [  ]})
endsnippet

snippet Pbindef.hasGlobalDictionary
Pbindef.hasGlobalDictionary(${1:})
endsnippet

snippet Pbindf.new
Pbindf.new(${1:pattern: nil}, ${2: pairs: [  ]})
endsnippet

snippet Pbinop.new
Pbinop.new(${1:operator: nil}, ${2: a: nil}, ${3: b: nil}, ${4: adverb: nil})
endsnippet

snippet Pboolnet.new
Pboolnet.new(${1:nodes: nil}, ${2: repeats: 1}, ${3: loops: 1})
endsnippet

snippet Pbrown.new
Pbrown.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: step: 0.125}, ${4: length: inf})
endsnippet

snippet Pbus.new
Pbus.new(${1:pattern: nil}, ${2: dur: 2.0}, ${3: fadeTime: 0.02}, ${4: numChannels: 2}, ${5: rate: audio})
endsnippet

snippet Pcauchy.new
Pcauchy.new(${1:mean: 0.0}, ${2: spread: 1.0}, ${3: length: inf})
endsnippet

snippet Pchain.new
Pchain.new(${1:patterns: [  ]})
endsnippet

snippet Pclump.new
Pclump.new(${1:n: nil}, ${2: pattern: nil})
endsnippet

snippet Pclutch.new
Pclutch.new(${1:pattern: nil}, ${2: connected: true})
endsnippet

snippet Pcollatz.new
Pcollatz.new(${1:pattern: nil}, ${2: rules: nil}, ${3: endCondition: false})
endsnippet

snippet PcollatzLike.new
PcollatzLike.new(${1:pattern: nil}, ${2: mod: 2}, ${3: muls: nil}, ${4: adds: nil}, ${5: endCondition: false})
endsnippet

snippet Pconst.new
Pconst.new(${1:sum: nil}, ${2: pattern: nil}, ${3: tolerance: 0.001})
endsnippet

snippet Pdef.new
Pdef.new(${1:key: nil}, ${2: item: nil})
endsnippet

snippet Pdef.hasGlobalDictionary
Pdef.hasGlobalDictionary(${1:})
endsnippet

snippet Pdef.initClass
Pdef.initClass(${1:})
endsnippet

snippet Pdef.gui
Pdef.gui(${1:numItems: nil}, ${2: bounds: nil}, ${3: preset: nil})
endsnippet

snippet PdefAllGui.observedClass
PdefAllGui.observedClass(${1:})
endsnippet

snippet PdefAllGui.tpGuiClass
PdefAllGui.tpGuiClass(${1:})
endsnippet

snippet PdefGui.observedClass
PdefGui.observedClass(${1:})
endsnippet

snippet PdefPreset.initClass
PdefPreset.initClass(${1:})
endsnippet

snippet PdefPreset.proxyClass
PdefPreset.proxyClass(${1:})
endsnippet

snippet PdefPreset.new
PdefPreset.new(${1:key: nil}, ${2: namesToStore: nil}, ${3: settings: nil}, ${4: specs: nil}, ${5: morphFuncs: nil})
endsnippet

snippet Pdefn.initClass
Pdefn.initClass(${1:})
endsnippet

snippet Pdefn.new
Pdefn.new(${1:key: nil}, ${2: item: nil})
endsnippet

snippet Pdefn.hasGlobalDictionary
Pdefn.hasGlobalDictionary(${1:})
endsnippet

snippet PdefnAllGui.observedClass
PdefnAllGui.observedClass(${1:})
endsnippet

snippet PdefnAllGui.tpGuiClass
PdefnAllGui.tpGuiClass(${1:})
endsnippet

snippet PdefnGui.observedClass
PdefnGui.observedClass(${1:})
endsnippet

snippet PdegreeToKey.new
PdegreeToKey.new(${1:pattern: nil}, ${2: scale: nil}, ${3: stepsPerOctave: 12})
endsnippet

snippet Pdfsm.new
Pdfsm.new(${1:list: nil}, ${2: startState: 0}, ${3: repeats: 1})
endsnippet

snippet Pdict.new
Pdict.new(${1:dict: nil}, ${2: which: nil}, ${3: repeats: inf}, ${4: default: nil})
endsnippet

snippet Pdrop.new
Pdrop.new(${1:count: nil}, ${2: pattern: nil})
endsnippet

snippet Pdup.new
Pdup.new(${1:n: nil}, ${2: pattern: nil})
endsnippet

snippet PdurStutter.initClass
PdurStutter.initClass(${1:})
endsnippet

snippet PdurStutter.new
PdurStutter.new(${1:n: nil}, ${2: pattern: nil})
endsnippet

snippet Peak.ar
Peak.ar(${1:in: 0.0}, ${2: trig: 0.0})
endsnippet

snippet Peak.kr
Peak.kr(${1:in: 0.0}, ${2: trig: 0.0})
endsnippet

snippet PeakFollower.ar
PeakFollower.ar(${1:in: 0.0}, ${2: decay: 0.999})
endsnippet

snippet PeakFollower.kr
PeakFollower.kr(${1:in: 0.0}, ${2: decay: 0.999})
endsnippet

snippet Pen.push
Pen.push(${1:})
endsnippet

snippet Pen.pop
Pen.pop(${1:})
endsnippet

snippet Pen.use
Pen.use(${1:aFunction: nil})
endsnippet

snippet Pen.fillColor_
Pen.fillColor_(${1:aColor: nil})
endsnippet

snippet Pen.strokeColor_
Pen.strokeColor_(${1:aColor: nil})
endsnippet

snippet Pen.color_
Pen.color_(${1:aColor: nil})
endsnippet

snippet Pen.width_
Pen.width_(${1:width: nil})
endsnippet

snippet Pen.joinStyle_
Pen.joinStyle_(${1:style: nil})
endsnippet

snippet Pen.capStyle_
Pen.capStyle_(${1:style: nil})
endsnippet

snippet Pen.lineDash_
Pen.lineDash_(${1:pattern: nil})
endsnippet

snippet Pen.alpha_
Pen.alpha_(${1:value: nil})
endsnippet

snippet Pen.blendMode_
Pen.blendMode_(${1:mode: nil})
endsnippet

snippet Pen.beginTransparencyLayer
Pen.beginTransparencyLayer(${1:})
endsnippet

snippet Pen.endTransparencyLayer
Pen.endTransparencyLayer(${1:})
endsnippet

snippet Pen.clip
Pen.clip(${1:})
endsnippet

snippet Pen.smoothing_
Pen.smoothing_(${1:flag: nil})
endsnippet

snippet Pen.font_
Pen.font_(${1:aFont: nil})
endsnippet

snippet Pen.prSetFont
Pen.prSetFont(${1:aFont: nil})
endsnippet

snippet Pen.translate
Pen.translate(${1:x: 0}, ${2: y: 0})
endsnippet

snippet Pen.scale
Pen.scale(${1:x: 0}, ${2: y: 0})
endsnippet

snippet Pen.skew
Pen.skew(${1:x: 0}, ${2: y: 0})
endsnippet

snippet Pen.rotate
Pen.rotate(${1:angle: 0}, ${2: x: 0}, ${3: y: 0})
endsnippet

snippet Pen.rotateDeg
Pen.rotateDeg(${1:angle: 0}, ${2: x: 0}, ${3: y: 0})
endsnippet

snippet Pen.matrix
Pen.matrix(${1:})
endsnippet

snippet Pen.matrix_
Pen.matrix_(${1:matrixArray: nil})
endsnippet

snippet Pen.beginPath
Pen.beginPath(${1:})
endsnippet

snippet Pen.path
Pen.path(${1:})
endsnippet

snippet Pen.moveTo
Pen.moveTo(${1:point: nil})
endsnippet

snippet Pen.lineTo
Pen.lineTo(${1:point: nil})
endsnippet

snippet Pen.line
Pen.line(${1:p1: nil}, ${2: p2: nil})
endsnippet

snippet Pen.curveTo
Pen.curveTo(${1:endPoint: nil}, ${2: cPoint1: nil}, ${3: cPoint2: nil})
endsnippet

snippet Pen.quadCurveTo
Pen.quadCurveTo(${1:endPoint: nil}, ${2: cPoint: nil})
endsnippet

snippet Pen.arcTo
Pen.arcTo(${1:point1: nil}, ${2: point2: nil}, ${3: radius: nil})
endsnippet

snippet Pen.addRect
Pen.addRect(${1:aRect: nil})
endsnippet

snippet Pen.addRoundedRect
Pen.addRoundedRect(${1:aRect: nil}, ${2: radiusX: nil}, ${3: radiusY: nil})
endsnippet

snippet Pen.addOval
Pen.addOval(${1:rect: nil})
endsnippet

snippet Pen.addArc
Pen.addArc(${1:center: nil}, ${2: radius: nil}, ${3: startAngle: nil}, ${4: arcAngle: nil})
endsnippet

snippet Pen.prAddArc
Pen.prAddArc(${1:center: nil}, ${2: radius: nil}, ${3: startAngle: nil}, ${4: arcAngle: nil})
endsnippet

snippet Pen.addWedge
Pen.addWedge(${1:center: nil}, ${2: radius: nil}, ${3: startAngle: nil}, ${4: sweepLength: nil})
endsnippet

snippet Pen.addWedge_Deg
Pen.addWedge_Deg(${1:center: nil}, ${2: radius: nil}, ${3: startAngle: nil}, ${4: sweepLength: nil})
endsnippet

snippet Pen.addAnnularWedge
Pen.addAnnularWedge(${1:center: nil}, ${2: innerRadius: nil}, ${3: outerRadius: nil}, ${4: startAngle: nil}, ${5: sweepLength: nil})
endsnippet

snippet Pen.prAddAnnularWedge
Pen.prAddAnnularWedge(${1:center: nil}, ${2: innerRadius: nil}, ${3: outerRadius: nil}, ${4: startAngle: nil}, ${5: sweepLength: nil})
endsnippet

snippet Pen.fill
Pen.fill(${1:})
endsnippet

snippet Pen.stroke
Pen.stroke(${1:})
endsnippet

snippet Pen.draw
Pen.draw(${1:style: nil})
endsnippet

snippet Pen.fillStroke
Pen.fillStroke(${1:})
endsnippet

snippet Pen.strokeRect
Pen.strokeRect(${1:rect: nil})
endsnippet

snippet Pen.fillRect
Pen.fillRect(${1:rect: nil})
endsnippet

snippet Pen.strokeOval
Pen.strokeOval(${1:rect: nil})
endsnippet

snippet Pen.fillOval
Pen.fillOval(${1:rect: nil})
endsnippet

snippet Pen.fillAxialGradient
Pen.fillAxialGradient(${1:startPoint: nil}, ${2: endPoint: nil}, ${3: startColor: nil}, ${4: endColor: nil})
endsnippet

snippet Pen.fillRadialGradient
Pen.fillRadialGradient(${1:innerCircleCenter: nil}, ${2: outerCircleCenter: nil}, ${3: startRadius: nil}, ${4: endRadius: nil}, ${5: startColor: nil}, ${6: endColor: nil})
endsnippet

snippet Pen.setShadow
Pen.setShadow(${1:offsetPoint: nil}, ${2: blur: nil}, ${3: color: nil})
endsnippet

snippet Pen.string
Pen.string(${1:aString: nil})
endsnippet

snippet Pen.stringAtPoint
Pen.stringAtPoint(${1:string: nil}, ${2: point: nil}, ${3: font: nil}, ${4: color: nil})
endsnippet

snippet Pen.stringInRect
Pen.stringInRect(${1:string: nil}, ${2: rect: nil}, ${3: font: nil}, ${4: color: nil}, ${5: alignment: nil})
endsnippet

snippet Pen.stringCenteredIn
Pen.stringCenteredIn(${1:string: nil}, ${2: rect: nil}, ${3: font: nil}, ${4: color: nil})
endsnippet

snippet Pen.stringLeftJustIn
Pen.stringLeftJustIn(${1:string: nil}, ${2: rect: nil}, ${3: font: nil}, ${4: color: nil})
endsnippet

snippet Pen.stringRightJustIn
Pen.stringRightJustIn(${1:string: nil}, ${2: rect: nil}, ${3: font: nil}, ${4: color: nil})
endsnippet

snippet Pen.drawImage
Pen.drawImage(${1:target: nil}, ${2: image: nil}, ${3: source: nil}, ${4: operation: sourceOver}, ${5: opacity: 1.0})
endsnippet

snippet Pen.tileImage
Pen.tileImage(${1:target: nil}, ${2: image: nil}, ${3: source: nil}, ${4: operation: sourceOver}, ${5: opacity: 1.0})
endsnippet

snippet Pen.prBegin
Pen.prBegin(${1:aView: nil})
endsnippet

snippet Pen.prEnd
Pen.prEnd(${1:})
endsnippet

snippet Pen.prDrawImage
Pen.prDrawImage(${1:target: nil}, ${2: image: nil}, ${3: source: nil}, ${4: operation: nil}, ${5: opacity: nil})
endsnippet

snippet Pen.prTileImage
Pen.prTileImage(${1:target: nil}, ${2: image: nil}, ${3: source: nil}, ${4: operation: nil}, ${5: opacity: nil})
endsnippet

snippet Pen.nonimpl
Pen.nonimpl(${1:methodName: nil})
endsnippet

snippet Penvir.new
Penvir.new(${1:envir: nil}, ${2: pattern: nil}, ${3: independent: true})
endsnippet

snippet Pevent.new
Pevent.new(${1:pattern: nil}, ${2: event: nil})
endsnippet

snippet Peventmod.new
Peventmod.new(${1:func: nil}, ${2: event: nil}, ${3: repeats: inf})
endsnippet

snippet Pexprand.new
Pexprand.new(${1:lo: 0.0001}, ${2: hi: 1.0}, ${3: length: inf})
endsnippet

snippet PfadeIn.new
PfadeIn.new(${1:pattern: nil}, ${2: fadeTime: 1.0}, ${3: holdTime: 0.0}, ${4: tolerance: 0.0001})
endsnippet

snippet Pfin.new
Pfin.new(${1:count: nil}, ${2: pattern: nil})
endsnippet

snippet PfinQuant.new
PfinQuant.new(${1:pattern: nil}, ${2: quant: nil}, ${3: clock: nil})
endsnippet

snippet Pfindur.new
Pfindur.new(${1:dur: nil}, ${2: pattern: nil}, ${3: tolerance: 0.001})
endsnippet

snippet Pfset.new
Pfset.new(${1:func: nil}, ${2: pattern: nil}, ${3: cleanupFunc: nil})
endsnippet

snippet Pfsm2.new
Pfsm2.new(${1:markovset: nil}, ${2: repeats: 1})
endsnippet

snippet Pfunc.new
Pfunc.new(${1:nextFunc: nil}, ${2: resetFunc: nil})
endsnippet

snippet Pfuncn.new
Pfuncn.new(${1:func: nil}, ${2: repeats: 1})
endsnippet

snippet Pfx.new
Pfx.new(${1:pattern: nil}, ${2: fxname: nil}, ${3: pairs: [  ]})
endsnippet

snippet Pfxb.new
Pfxb.new(${1:pattern: nil}, ${2: fxname: nil}, ${3: pairs: [  ]})
endsnippet

snippet Pgate.new
Pgate.new(${1:pattern: nil}, ${2: repeats: inf}, ${3: key: nil})
endsnippet

snippet Pgauss.new
Pgauss.new(${1:mean: 0.0}, ${2: dev: 1}, ${3: length: inf})
endsnippet

snippet Pgeom.new
Pgeom.new(${1:start: 0}, ${2: grow: 1}, ${3: length: inf})
endsnippet

snippet Pget.new
Pget.new(${1:key: nil}, ${2: default: nil}, ${3: repeats: 1})
endsnippet

snippet Pgpar.implClass
Pgpar.implClass(${1:})
endsnippet

snippet Pgroup.eventType
Pgroup.eventType(${1:})
endsnippet

snippet Pgtpar.implClass
Pgtpar.implClass(${1:})
endsnippet

snippet Phasor.ar
Phasor.ar(${1:trig: 0.0}, ${2: rate: 1.0}, ${3: start: 0.0}, ${4: end: 1.0}, ${5: resetPos: 0.0})
endsnippet

snippet Phasor.kr
Phasor.kr(${1:trig: 0.0}, ${2: rate: 1.0}, ${3: start: 0.0}, ${4: end: 1.0}, ${5: resetPos: 0.0})
endsnippet

snippet Pif.new
Pif.new(${1:condition: nil}, ${2: iftrue: nil}, ${3: iffalse: nil}, ${4: default: nil})
endsnippet

snippet Pindex.new
Pindex.new(${1:listPat: nil}, ${2: indexPat: nil}, ${3: repeats: 1})
endsnippet

snippet PingPong.ar
PingPong.ar(${1:bufnum: 0}, ${2: inputs: nil}, ${3: delayTime: nil}, ${4: feedback: 0.7}, ${5: rotate: 1})
endsnippet

snippet Pipe.new
Pipe.new(${1:commandLine: nil}, ${2: mode: nil})
endsnippet

snippet Pipe.argv
Pipe.argv(${1:args: nil}, ${2: mode: nil})
endsnippet

snippet Pipe.call
Pipe.call(${1:command: nil}, ${2: onSuccess: nil}, ${3: onError: nil}, ${4: maxLineLength: 4096})
endsnippet

snippet Pipe.callSync
Pipe.callSync(${1:command: nil}, ${2: onSuccess: nil}, ${3: onError: nil}, ${4: maxLineLength: 4096})
endsnippet

snippet Pitch.kr
Pitch.kr(${1:in: 0.0}, ${2: initFreq: 440.0}, ${3: minFreq: 60.0}, ${4: maxFreq: 4000.0}, ${5: execFreq: 100.0}, ${6: maxBinsPerOctave: 16}, ${7: median: 1}, ${8: ampThreshold: 0.01}, ${9: peakThreshold: 0.5}, ${10: downSample: 1}, ${11: clar: 0})
endsnippet

snippet PitchShift.ar
PitchShift.ar(${1:in: 0.0}, ${2: windowSize: 0.2}, ${3: pitchRatio: 1.0}, ${4: pitchDispersion: 0.0}, ${5: timeDispersion: 0.0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet Pkey.new
Pkey.new(${1:key: nil}, ${2: repeats: nil})
endsnippet

snippet Plag.new
Plag.new(${1:lag: nil}, ${2: pattern: nil})
endsnippet

snippet Plambda.new
Plambda.new(${1:pattern: nil}, ${2: scope: nil})
endsnippet

snippet Platform.initClass
Platform.initClass(${1:})
endsnippet

snippet Platform.case
Platform.case(${1:cases: [  ]})
endsnippet

snippet Platform.classLibraryDir
Platform.classLibraryDir(${1:})
endsnippet

snippet Platform.helpDir
Platform.helpDir(${1:})
endsnippet

snippet Platform.userHomeDir
Platform.userHomeDir(${1:})
endsnippet

snippet Platform.systemAppSupportDir
Platform.systemAppSupportDir(${1:})
endsnippet

snippet Platform.userAppSupportDir
Platform.userAppSupportDir(${1:})
endsnippet

snippet Platform.systemExtensionDir
Platform.systemExtensionDir(${1:})
endsnippet

snippet Platform.userExtensionDir
Platform.userExtensionDir(${1:})
endsnippet

snippet Platform.userConfigDir
Platform.userConfigDir(${1:})
endsnippet

snippet Platform.resourceDir
Platform.resourceDir(${1:})
endsnippet

snippet Platform.recordingsDir
Platform.recordingsDir(${1:})
endsnippet

snippet Platform.defaultTempDir
Platform.defaultTempDir(${1:})
endsnippet

snippet Platform.ideName
Platform.ideName(${1:})
endsnippet

snippet Platform.platformDir
Platform.platformDir(${1:})
endsnippet

snippet Platform.pathSeparator
Platform.pathSeparator(${1:})
endsnippet

snippet Platform.pathDelimiter
Platform.pathDelimiter(${1:})
endsnippet

snippet Platform.isPathSeparator
Platform.isPathSeparator(${1:char: nil})
endsnippet

snippet Platform.clearMetadata
Platform.clearMetadata(${1:path: nil})
endsnippet

snippet Platform.deprecatedStartupFiles
Platform.deprecatedStartupFiles(${1:paths: nil})
endsnippet

snippet Platform.when
Platform.when(${1:features: nil}, ${2: ifFunction: nil}, ${3: elseFunction: nil})
endsnippet

snippet Platform.hasQt
Platform.hasQt(${1:})
endsnippet

snippet Platform.hasQtWebEngine
Platform.hasQtWebEngine(${1:})
endsnippet

snippet Platform.architecture
Platform.architecture(${1:})
endsnippet

snippet Platform.hasBelaSupport
Platform.hasBelaSupport(${1:})
endsnippet

snippet PlayBuf.ar
PlayBuf.ar(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: trigger: 1.0}, ${5: startPos: 0.0}, ${6: loop: 0.0}, ${7: doneAction: 0})
endsnippet

snippet PlayBuf.kr
PlayBuf.kr(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: trigger: 1.0}, ${5: startPos: 0.0}, ${6: loop: 0.0}, ${7: doneAction: 0})
endsnippet

snippet Plazy.new
Plazy.new(${1:func: nil})
endsnippet

snippet PlazyEnvirN.new
PlazyEnvirN.new(${1:func: nil})
endsnippet

snippet Plet.new
Plet.new(${1:key: nil}, ${2: pattern: nil}, ${3: return: nil})
endsnippet

snippet Plot.initClass
Plot.initClass(${1:})
endsnippet

snippet Plot.new
Plot.new(${1:plotter: nil})
endsnippet

snippet Plotter.new
Plotter.new(${1:name: nil}, ${2: bounds: nil}, ${3: parent: nil})
endsnippet

snippet Plsys.new
Plsys.new(${1:pattern: nil}, ${2: rules: nil}, ${3: level: 1}, ${4: contextSize: nil})
endsnippet

snippet Pluck.ar
Pluck.ar(${1:in: 0.0}, ${2: trig: 1.0}, ${3: maxdelaytime: 0.2}, ${4: delaytime: 0.2}, ${5: decaytime: 1.0}, ${6: coef: 0.5}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet Pmono.new
Pmono.new(${1:name: nil}, ${2: pairs: [  ]})
endsnippet

snippet PmonoStream.new
PmonoStream.new(${1:pattern: nil})
endsnippet

snippet Pmswitch.new
Pmswitch.new(${1:markovset: nil}, ${2: which: nil}, ${3: repeats: 1})
endsnippet

snippet Pn.new
Pn.new(${1:pattern: nil}, ${2: repeats: inf}, ${3: key: nil})
endsnippet

snippet Pnaryop.new
Pnaryop.new(${1:operator: nil}, ${2: a: nil}, ${3: arglist: nil})
endsnippet

snippet Point.new
Point.new(${1:x: 0}, ${2: y: 0})
endsnippet

snippet Point.big
Point.big(${1:x: nil}, ${2: y: nil})
endsnippet

snippet PointArray.new
PointArray.new(${1:n: nil})
endsnippet

snippet Polar.new
Polar.new(${1:rho: nil}, ${2: theta: nil})
endsnippet

snippet Poll.ar
Poll.ar(${1:trig: nil}, ${2: in: nil}, ${3: label: nil}, ${4: trigid: -1})
endsnippet

snippet Poll.kr
Poll.kr(${1:trig: nil}, ${2: in: nil}, ${3: label: nil}, ${4: trigid: -1})
endsnippet

snippet Poll.new
Poll.new(${1:trig: nil}, ${2: in: nil}, ${3: label: nil}, ${4: trigid: -1})
endsnippet

snippet Poll.new1
Poll.new1(${1:rate: nil}, ${2: trig: nil}, ${3: in: nil}, ${4: label: nil}, ${5: trigid: nil})
endsnippet

snippet Polynomial.expandBinomialFactors
Polynomial.expandBinomialFactors(${1:factors: nil})
endsnippet

snippet Polynomial.newReverseBessel
Polynomial.newReverseBessel(${1:degree: nil})
endsnippet

snippet PopUpMenu.qtClass
PopUpMenu.qtClass(${1:})
endsnippet

snippet Post.initClass
Post.initClass(${1:})
endsnippet

snippet Post.put
Post.put(${1:item: nil})
endsnippet

snippet Post.putAll
Post.putAll(${1:aCollection: nil})
endsnippet

snippet Post.comma
Post.comma(${1:})
endsnippet

snippet Post.space
Post.space(${1:})
endsnippet

snippet Post.nl
Post.nl(${1:})
endsnippet

snippet Post.ff
Post.ff(${1:})
endsnippet

snippet Post.tab
Post.tab(${1:})
endsnippet

snippet Post.close
Post.close(${1:})
endsnippet

snippet PowerOfTwoAllocator.new
PowerOfTwoAllocator.new(${1:size: nil}, ${2: pos: 0})
endsnippet

snippet PowerOfTwoBlock.new
PowerOfTwoBlock.new(${1:address: nil}, ${2: size: nil})
endsnippet

snippet PparGroup.eventType
PparGroup.eventType(${1:})
endsnippet

snippet Ppatmod.new
Ppatmod.new(${1:pattern: nil}, ${2: func: nil}, ${3: repeats: nil})
endsnippet

snippet Pperform.new
Pperform.new(${1:selectorPattern: nil}, ${2: arguments: [  ]})
endsnippet

snippet Pplayer.new
Pplayer.new(${1:playerPattern: nil}, ${2: subPattern: nil})
endsnippet

snippet Ppoisson.new
Ppoisson.new(${1:mean: 1}, ${2: length: inf})
endsnippet

snippet Pprob.new
Pprob.new(${1:distribution: nil}, ${2: lo: 0.0}, ${3: hi: 1.0}, ${4: length: inf}, ${5: tableSize: nil})
endsnippet

snippet Pprotect.new
Pprotect.new(${1:pattern: nil}, ${2: func: nil})
endsnippet

snippet Pproto.new
Pproto.new(${1:makeFunction: nil}, ${2: pattern: nil}, ${3: cleanupFunc: nil})
endsnippet

snippet PrePostView.initClass
PrePostView.initClass(${1:})
endsnippet

snippet PrePostView.new
PrePostView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet PrePostView.forMonitor
PrePostView.forMonitor(${1:monitorGui: nil})
endsnippet

snippet Preduce.new
Preduce.new(${1:selectorPattern: nil}, ${2: patterns: [  ]})
endsnippet

snippet Pretty.new
Pretty.new(${1:out: nil})
endsnippet

snippet PrettyState.new
PrettyState.new(${1:pretty: nil})
endsnippet

snippet Prewrite.new
Prewrite.new(${1:pattern: nil}, ${2: dict: nil}, ${3: levels: 1})
endsnippet

snippet PrimitiveFailedError.new
PrimitiveFailedError.new(${1:receiver: nil})
endsnippet

snippet Process.tailCallOptimize
Process.tailCallOptimize(${1:})
endsnippet

snippet Process.tailCallOptimize_
Process.tailCallOptimize_(${1:bool: nil})
endsnippet

snippet Process.elapsedTime
Process.elapsedTime(${1:})
endsnippet

snippet Process.monotonicClockTime
Process.monotonicClockTime(${1:})
endsnippet

snippet ProgramChangeResponder.new
ProgramChangeResponder.new(${1:function: nil}, ${2: src: nil}, ${3: chan: nil}, ${4: value: nil}, ${5: install: true})
endsnippet

snippet ProgramChangeResponder.init
ProgramChangeResponder.init(${1:})
endsnippet

snippet ProgramChangeResponder.initialized
ProgramChangeResponder.initialized(${1:})
endsnippet

snippet ProgramChangeResponder.responders
ProgramChangeResponder.responders(${1:})
endsnippet

snippet ProgramChangeResponder.add
ProgramChangeResponder.add(${1:resp: nil})
endsnippet

snippet ProgramChangeResponder.remove
ProgramChangeResponder.remove(${1:resp: nil})
endsnippet

snippet Prorate.new
Prorate.new(${1:proportion: nil}, ${2: pattern: 1})
endsnippet

snippet Prout.new
Prout.new(${1:routineFunc: nil})
endsnippet

snippet ProxyChain.initClass
ProxyChain.initClass(${1:})
endsnippet

snippet ProxyChain.add
ProxyChain.add(${1:args: [  ]})
endsnippet

snippet ProxyChain.add3
ProxyChain.add3(${1:srcName: nil}, ${2: source: nil}, ${3: level: nil}, ${4: specs: nil})
endsnippet

snippet ProxyChain.addSource
ProxyChain.addSource(${1:srcName: nil}, ${2: source: nil})
endsnippet

snippet ProxyChain.addLevel
ProxyChain.addLevel(${1:srcName: nil}, ${2: level: nil})
endsnippet

snippet ProxyChain.addSpecs
ProxyChain.addSpecs(${1:srcName: nil}, ${2: specs: nil}, ${3: srcDict: nil})
endsnippet

snippet ProxyChain.checkDicts
ProxyChain.checkDicts(${1:})
endsnippet

snippet ProxyChain.checkSourceDictAt
ProxyChain.checkSourceDictAt(${1:srcname: nil})
endsnippet

snippet ProxyChain.atSrcDict
ProxyChain.atSrcDict(${1:key: nil})
endsnippet

snippet ProxyChain.from
ProxyChain.from(${1:proxy: nil}, ${2: slotNames: [  ]})
endsnippet

snippet ProxyChain.new
ProxyChain.new(${1:key: nil}, ${2: slotNames: nil}, ${3: numChannels: nil}, ${4: server: nil})
endsnippet

snippet ProxyChainGui.new
ProxyChainGui.new(${1:chain: nil}, ${2: numItems: 16}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: nil})
endsnippet

snippet ProxyChainPreset.initClass
ProxyChainPreset.initClass(${1:})
endsnippet

snippet ProxyChainPreset.new
ProxyChainPreset.new(${1:keyOrObj: nil})
endsnippet

snippet ProxyMeter.initClass
ProxyMeter.initClass(${1:})
endsnippet

snippet ProxyMeter.cmdPeriod
ProxyMeter.cmdPeriod(${1:})
endsnippet

snippet ProxyMeter.addNdefGui
ProxyMeter.addNdefGui(${1:gui: nil})
endsnippet

snippet ProxyMeter.removeNdefGui
ProxyMeter.removeNdefGui(${1:gui: nil})
endsnippet

snippet ProxyMeter.addMixer
ProxyMeter.addMixer(${1:mixer: nil})
endsnippet

snippet ProxyMeter.removeMixer
ProxyMeter.removeMixer(${1:mixer: nil})
endsnippet

snippet ProxyMeter.addMonitorGui
ProxyMeter.addMonitorGui(${1:gui: nil})
endsnippet

snippet ProxyMeter.removeMonitorGui
ProxyMeter.removeMonitorGui(${1:gui: nil})
endsnippet

snippet ProxyMeter.checkSkip
ProxyMeter.checkSkip(${1:})
endsnippet

snippet ProxyMeter.makeSkipJack
ProxyMeter.makeSkipJack(${1:})
endsnippet

snippet ProxyMeter.checkGuiObjects
ProxyMeter.checkGuiObjects(${1:})
endsnippet

snippet ProxyMeter.checkChangedGuis
ProxyMeter.checkChangedGuis(${1:})
endsnippet

snippet ProxyMeter.checkAll
ProxyMeter.checkAll(${1:})
endsnippet

snippet ProxyMeter.checkAddPrePost
ProxyMeter.checkAddPrePost(${1:proxy: nil}, ${2: ppv: nil})
endsnippet

snippet ProxyMeter.checkAdd
ProxyMeter.checkAdd(${1:proxy: nil})
endsnippet

snippet ProxyMeter.clear
ProxyMeter.clear(${1:})
endsnippet

snippet ProxyMeter.new
ProxyMeter.new(${1:proxy: nil}, ${2: view: nil})
endsnippet

snippet ProxyMeter.showKrs
ProxyMeter.showKrs(${1:})
endsnippet

snippet ProxyMeter.hideKrs
ProxyMeter.hideKrs(${1:})
endsnippet

snippet ProxyMixer.new
ProxyMixer.new(${1:obj: nil}, ${2: numItems: 16}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: nil})
endsnippet

snippet ProxyMixer.small
ProxyMixer.small(${1:obj: nil}, ${2: numItems: 16}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true})
endsnippet

snippet ProxyMonitorGui.new
ProxyMonitorGui.new(${1:proxy: nil}, ${2: w: nil}, ${3: bounds: nil}, ${4: showLevel: false}, ${5: showPlayN: true}, ${6: showName: true}, ${7: showPauseSend: true}, ${8: makeWatcher: true}, ${9: skin: nil})
endsnippet

snippet ProxyMonitorGui.initClass
ProxyMonitorGui.initClass(${1:})
endsnippet

snippet ProxyPreset.initClass
ProxyPreset.initClass(${1:})
endsnippet

snippet ProxyPreset.new
ProxyPreset.new(${1:proxy: nil}, ${2: namesToStore: nil}, ${3: settings: nil}, ${4: specs: nil}, ${5: morphFuncs: nil})
endsnippet

snippet ProxySpace.initClass
ProxySpace.initClass(${1:})
endsnippet

snippet ProxySpace.new
ProxySpace.new(${1:server: nil}, ${2: name: nil}, ${3: clock: nil})
endsnippet

snippet ProxySpace.push
ProxySpace.push(${1:server: nil}, ${2: name: nil}, ${3: clock: nil})
endsnippet

snippet ProxySpace.clearAll
ProxySpace.clearAll(${1:})
endsnippet

snippet ProxySpace.findSpace
ProxySpace.findSpace(${1:proxy: nil}, ${2: getCode: false})
endsnippet

snippet ProxySynthDef.new
ProxySynthDef.new(${1:name: nil}, ${2: func: nil}, ${3: rates: nil}, ${4: prependArgs: nil}, ${5: makeFadeEnv: true}, ${6: channelOffset: 0}, ${7: chanConstraint: nil}, ${8: rateConstraint: nil})
endsnippet

snippet Pseed.new
Pseed.new(${1:randSeed: nil}, ${2: pattern: nil})
endsnippet

snippet Pseg.new
Pseg.new(${1:levels: nil}, ${2: durs: 1}, ${3: curves: lin}, ${4: repeats: 1})
endsnippet

snippet Pseq.new
Pseq.new(${1:list: nil}, ${2: repeats: 1}, ${3: offset: 0})
endsnippet

snippet Pseries.new
Pseries.new(${1:start: 0}, ${2: step: 1}, ${3: length: inf})
endsnippet

snippet Pset.new
Pset.new(${1:name: nil}, ${2: value: nil}, ${3: pattern: nil})
endsnippet

snippet Psetpre.new
Psetpre.new(${1:name: nil}, ${2: value: nil}, ${3: pattern: nil})
endsnippet

snippet Pslide.new
Pslide.new(${1:list: nil}, ${2: repeats: 1}, ${3: len: 3}, ${4: step: 1}, ${5: start: 0}, ${6: wrapAtEnd: true})
endsnippet

snippet Pspawn.new
Pspawn.new(${1:pattern: nil}, ${2: spawnProtoEvent: nil})
endsnippet

snippet Pspy.new
Pspy.new(${1:markovset: nil}, ${2: pattern: nil}, ${3: repeats: inf})
endsnippet

snippet Pstep.new
Pstep.new(${1:levels: nil}, ${2: durs: 1}, ${3: repeats: 1})
endsnippet

snippet Pstep2add.new
Pstep2add.new(${1:pattern1: nil}, ${2: pattern2: nil})
endsnippet

snippet Pstep3add.new
Pstep3add.new(${1:pattern1: nil}, ${2: pattern2: nil}, ${3: pattern3: nil})
endsnippet

snippet PstepNadd.new
PstepNadd.new(${1:patterns: [  ]})
endsnippet

snippet PstepNfunc.new
PstepNfunc.new(${1:function: nil}, ${2: patterns: nil})
endsnippet

snippet Pstretch.new
Pstretch.new(${1:value: nil}, ${2: pattern: nil})
endsnippet

snippet Pstutter.initClass
Pstutter.initClass(${1:})
endsnippet

snippet Pstutter.new
Pstutter.new(${1:n: nil}, ${2: pattern: nil})
endsnippet

snippet Pswitch.new
Pswitch.new(${1:list: nil}, ${2: which: 0})
endsnippet

snippet Psym.new
Psym.new(${1:pattern: nil}, ${2: dict: nil})
endsnippet

snippet Psync.new
Psync.new(${1:pattern: nil}, ${2: quant: nil}, ${3: maxdur: nil}, ${4: tolerance: 0.001}, ${5: mindur: 0})
endsnippet

snippet Ptime.new
Ptime.new(${1:repeats: inf})
endsnippet

snippet Ptrace.new
Ptrace.new(${1:pattern: nil}, ${2: key: nil}, ${3: printStream: nil}, ${4: prefix: })
endsnippet

snippet Ptsym.new
Ptsym.new(${1:pattern: nil}, ${2: dict: nil}, ${3: quant: nil}, ${4: dur: nil}, ${5: tolerance: 0.001})
endsnippet

snippet Public.getListening
Public.getListening(${1:channelName: nil}, ${2: nickname: nil})
endsnippet

snippet Public.startListen
Public.startListen(${1:addr: nil})
endsnippet

snippet Public.stopListen
Public.stopListen(${1:})
endsnippet

snippet Pulse.ar
Pulse.ar(${1:freq: 440.0}, ${2: width: 0.5}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Pulse.kr
Pulse.kr(${1:freq: 440.0}, ${2: width: 0.5}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet PulseCount.ar
PulseCount.ar(${1:trig: 0.0}, ${2: reset: 0.0})
endsnippet

snippet PulseCount.kr
PulseCount.kr(${1:trig: 0.0}, ${2: reset: 0.0})
endsnippet

snippet PulseDivider.ar
PulseDivider.ar(${1:trig: 0.0}, ${2: div: 2.0}, ${3: start: 0.0})
endsnippet

snippet PulseDivider.kr
PulseDivider.kr(${1:trig: 0.0}, ${2: div: 2.0}, ${3: start: 0.0})
endsnippet

snippet Punop.new
Punop.new(${1:operator: nil}, ${2: a: nil})
endsnippet

snippet Pwalk.new
Pwalk.new(${1:list: nil}, ${2: stepPattern: nil}, ${3: directionPattern: 1}, ${4: startPos: 0})
endsnippet

snippet Pwhite.new
Pwhite.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: length: inf})
endsnippet

snippet Pwrand.new
Pwrand.new(${1:list: nil}, ${2: weights: nil}, ${3: repeats: 1})
endsnippet

snippet Pwrap.new
Pwrap.new(${1:pattern: nil}, ${2: lo: nil}, ${3: hi: nil})
endsnippet

snippet QAlignment.initClass
QAlignment.initClass(${1:})
endsnippet

snippet QAlignment.new
QAlignment.new(${1:alignment: nil})
endsnippet

snippet QCallback.qtClass
QCallback.qtClass(${1:})
endsnippet

snippet QCallback.new
QCallback.new(${1:func: nil})
endsnippet

snippet QCallback.newFrom
QCallback.newFrom(${1:other: nil})
endsnippet

snippet QColorGroup.new
QColorGroup.new(${1:name: nil})
endsnippet

snippet QColorRole.new
QColorRole.new(${1:name: nil})
endsnippet

snippet QCurve.new
QCurve.new(${1:curve: nil})
endsnippet

snippet QKeyModifiers.toCocoa
QKeyModifiers.toCocoa(${1:mods: nil})
endsnippet

snippet QLevelIndicatorStyle.new
QLevelIndicatorStyle.new(${1:style: nil})
endsnippet

snippet QLimits.initClass
QLimits.initClass(${1:})
endsnippet

snippet QLimits.new
QLimits.new(${1:limit: nil})
endsnippet

snippet QMenuRole.new
QMenuRole.new(${1:name: nil})
endsnippet

snippet QMetaObject.new
QMetaObject.new(${1:className: nil})
endsnippet

snippet QObject.qtClass
QObject.qtClass(${1:})
endsnippet

snippet QObject.meta
QObject.meta(${1:})
endsnippet

snippet QObject.new
QObject.new(${1:argumentArray: nil})
endsnippet

snippet QObject.heap
QObject.heap(${1:})
endsnippet

snippet QOrientation.initClass
QOrientation.initClass(${1:})
endsnippet

snippet QOrientation.new
QOrientation.new(${1:alignment: nil})
endsnippet

snippet QPalette.new
QPalette.new(${1:})
endsnippet

snippet QPalette.auto
QPalette.auto(${1:buttonColor: nil}, ${2: windowColor: nil})
endsnippet

snippet QPalette.system
QPalette.system(${1:})
endsnippet

snippet QPalette.light
QPalette.light(${1:})
endsnippet

snippet QPalette.dark
QPalette.dark(${1:})
endsnippet

snippet QPenPrinter.qtClass
QPenPrinter.qtClass(${1:})
endsnippet

snippet QPenPrinter.new
QPenPrinter.new(${1:})
endsnippet

snippet QPenPrinter.print
QPenPrinter.print(${1:printFunc: nil}, ${2: cancelFunc: nil})
endsnippet

snippet QRenderProcessTerminationStatus.new
QRenderProcessTerminationStatus.new(${1:symbol: nil})
endsnippet

snippet QToolButtonStyle.new
QToolButtonStyle.new(${1:name: nil})
endsnippet

snippet QWebAttribute.new
QWebAttribute.new(${1:symbol: nil})
endsnippet

snippet QWebFontFamily.new
QWebFontFamily.new(${1:symbol: nil})
endsnippet

snippet QWebPageAction.new
QWebPageAction.new(${1:symbol: nil})
endsnippet

snippet QtGUI.initClass
QtGUI.initClass(${1:})
endsnippet

snippet QtGUI.id
QtGUI.id(${1:})
endsnippet

snippet QtGUI.stop
QtGUI.stop(${1:})
endsnippet

snippet QtGUI.debugLevel
QtGUI.debugLevel(${1:})
endsnippet

snippet QtGUI.debugLevel_
QtGUI.debugLevel_(${1:level: nil})
endsnippet

snippet QtGUI.view
QtGUI.view(${1:})
endsnippet

snippet QtGUI.compositeView
QtGUI.compositeView(${1:})
endsnippet

snippet QtGUI.hLayoutView
QtGUI.hLayoutView(${1:})
endsnippet

snippet QtGUI.vLayoutView
QtGUI.vLayoutView(${1:})
endsnippet

snippet QtGUI.window
QtGUI.window(${1:})
endsnippet

snippet QtGUI.scrollView
QtGUI.scrollView(${1:})
endsnippet

snippet QtGUI.staticText
QtGUI.staticText(${1:})
endsnippet

snippet QtGUI.button
QtGUI.button(${1:})
endsnippet

snippet QtGUI.checkBox
QtGUI.checkBox(${1:})
endsnippet

snippet QtGUI.textField
QtGUI.textField(${1:})
endsnippet

snippet QtGUI.numberBox
QtGUI.numberBox(${1:})
endsnippet

snippet QtGUI.slider
QtGUI.slider(${1:})
endsnippet

snippet QtGUI.multiSliderView
QtGUI.multiSliderView(${1:})
endsnippet

snippet QtGUI.rangeSlider
QtGUI.rangeSlider(${1:})
endsnippet

snippet QtGUI.slider2D
QtGUI.slider2D(${1:})
endsnippet

snippet QtGUI.knob
QtGUI.knob(${1:})
endsnippet

snippet QtGUI.listView
QtGUI.listView(${1:})
endsnippet

snippet QtGUI.treeView
QtGUI.treeView(${1:})
endsnippet

snippet QtGUI.popUpMenu
QtGUI.popUpMenu(${1:})
endsnippet

snippet QtGUI.textView
QtGUI.textView(${1:})
endsnippet

snippet QtGUI.freqScope
QtGUI.freqScope(${1:})
endsnippet

snippet QtGUI.freqScopeView
QtGUI.freqScopeView(${1:})
endsnippet

snippet QtGUI.scopeView
QtGUI.scopeView(${1:})
endsnippet

snippet QtGUI.stethoscope1
QtGUI.stethoscope1(${1:})
endsnippet

snippet QtGUI.stethoscope
QtGUI.stethoscope(${1:})
endsnippet

snippet QtGUI.soundFileView
QtGUI.soundFileView(${1:})
endsnippet

snippet QtGUI.envelopeView
QtGUI.envelopeView(${1:})
endsnippet

snippet QtGUI.levelIndicator
QtGUI.levelIndicator(${1:})
endsnippet

snippet QtGUI.webView
QtGUI.webView(${1:})
endsnippet

snippet QtGUI.userView
QtGUI.userView(${1:})
endsnippet

snippet QtGUI.dragSource
QtGUI.dragSource(${1:})
endsnippet

snippet QtGUI.dragSink
QtGUI.dragSink(${1:})
endsnippet

snippet QtGUI.dragBoth
QtGUI.dragBoth(${1:})
endsnippet

snippet QtGUI.dialog
QtGUI.dialog(${1:})
endsnippet

snippet QtGUI.ezScroller
QtGUI.ezScroller(${1:})
endsnippet

snippet QtGUI.ezSlider
QtGUI.ezSlider(${1:})
endsnippet

snippet QtGUI.ezListView
QtGUI.ezListView(${1:})
endsnippet

snippet QtGUI.ezPopUpMenu
QtGUI.ezPopUpMenu(${1:})
endsnippet

snippet QtGUI.ezNumber
QtGUI.ezNumber(${1:})
endsnippet

snippet QtGUI.ezRanger
QtGUI.ezRanger(${1:})
endsnippet

snippet QtGUI.hLayout
QtGUI.hLayout(${1:})
endsnippet

snippet QtGUI.vLayout
QtGUI.vLayout(${1:})
endsnippet

snippet QtGUI.gridLayout
QtGUI.gridLayout(${1:})
endsnippet

snippet QtGUI.stackLayout
QtGUI.stackLayout(${1:})
endsnippet

snippet QtGUI.pen
QtGUI.pen(${1:})
endsnippet

snippet QtGUI.font
QtGUI.font(${1:})
endsnippet

snippet QtGUI.image
QtGUI.image(${1:})
endsnippet

snippet QtGUI.qcView
QtGUI.qcView(${1:})
endsnippet

snippet QtGUI.notImplemented
QtGUI.notImplemented(${1:class: nil})
endsnippet

snippet QtGUI.cursorPosition
QtGUI.cursorPosition(${1:})
endsnippet

snippet QtGUI.availableStyles
QtGUI.availableStyles(${1:})
endsnippet

snippet QtGUI.style_
QtGUI.style_(${1:styleName: nil})
endsnippet

snippet QtGUI.stringBounds
QtGUI.stringBounds(${1:aString: nil}, ${2: aFont: nil})
endsnippet

snippet QtGUI.palette
QtGUI.palette(${1:})
endsnippet

snippet QtGUI.palette_
QtGUI.palette_(${1:p: nil})
endsnippet

snippet QtGUI.focusView
QtGUI.focusView(${1:})
endsnippet

snippet QtGUI.selectedText
QtGUI.selectedText(${1:})
endsnippet

snippet QtGUI.prStringBounds
QtGUI.prStringBounds(${1:aString: nil}, ${2: aFont: nil})
endsnippet

snippet QtGUI.prSetStyle
QtGUI.prSetStyle(${1:name: nil})
endsnippet

snippet QuadN.ar
QuadN.ar(${1:freq: 22050}, ${2: a: 1}, ${3: b: -1}, ${4: c: -0.75}, ${5: xi: 0}, ${6: mul: 1}, ${7: add: 0})
endsnippet

snippet Quant.default
Quant.default(${1:})
endsnippet

snippet Quant.default_
Quant.default_(${1:quant: nil})
endsnippet

snippet Quant.new
Quant.new(${1:quant: 0}, ${2: phase: nil}, ${3: timingOffset: nil})
endsnippet

snippet Quark.new
Quark.new(${1:name: nil}, ${2: refspec: nil}, ${3: url: nil}, ${4: localPath: nil})
endsnippet

snippet Quark.fromLocalPath
Quark.fromLocalPath(${1:path: nil})
endsnippet

snippet Quark.fromDirectoryEntry
Quark.fromDirectoryEntry(${1:name: nil}, ${2: directoryEntry: nil})
endsnippet

snippet Quark.parseDependency
Quark.parseDependency(${1:dep: nil}, ${2: forQuark: nil})
endsnippet

snippet Quark.prMakeDep
Quark.prMakeDep(${1:name: nil}, ${2: refspec: nil})
endsnippet

snippet Quark.parseQuarkName
Quark.parseQuarkName(${1:name: nil}, ${2: refspec: nil}, ${3: url: nil}, ${4: localPath: nil})
endsnippet

snippet QuarkRowView.new
QuarkRowView.new(${1:parent: nil}, ${2: quark: nil}, ${3: quarksGui: nil})
endsnippet

snippet Quarks.install
Quarks.install(${1:name: nil}, ${2: refspec: nil})
endsnippet

snippet Quarks.uninstall
Quarks.uninstall(${1:name: nil})
endsnippet

snippet Quarks.uninstallQuark
Quarks.uninstallQuark(${1:quark: nil})
endsnippet

snippet Quarks.clear
Quarks.clear(${1:})
endsnippet

snippet Quarks.clearCache
Quarks.clearCache(${1:})
endsnippet

snippet Quarks.load
Quarks.load(${1:path: nil}, ${2: done: nil})
endsnippet

snippet Quarks.save
Quarks.save(${1:path: nil})
endsnippet

snippet Quarks.update
Quarks.update(${1:name: nil})
endsnippet

snippet Quarks.installed
Quarks.installed(${1:})
endsnippet

snippet Quarks.installedPaths
Quarks.installedPaths(${1:})
endsnippet

snippet Quarks.isInstalled
Quarks.isInstalled(${1:name: nil})
endsnippet

snippet Quarks.pathIsInstalled
Quarks.pathIsInstalled(${1:path: nil})
endsnippet

snippet Quarks.openFolder
Quarks.openFolder(${1:})
endsnippet

snippet Quarks.gui
Quarks.gui(${1:})
endsnippet

snippet Quarks.installQuark
Quarks.installQuark(${1:quark: nil})
endsnippet

snippet Quarks.link
Quarks.link(${1:path: nil})
endsnippet

snippet Quarks.unlink
Quarks.unlink(${1:path: nil})
endsnippet

snippet Quarks.initClass
Quarks.initClass(${1:})
endsnippet

snippet Quarks.at
Quarks.at(${1:name: nil})
endsnippet

snippet Quarks.findQuarkURL
Quarks.findQuarkURL(${1:name: nil})
endsnippet

snippet Quarks.directory
Quarks.directory(${1:})
endsnippet

snippet Quarks.addFolder
Quarks.addFolder(${1:path: nil})
endsnippet

snippet Quarks.all
Quarks.all(${1:})
endsnippet

snippet Quarks.fetchDirectory
Quarks.fetchDirectory(${1:force: true})
endsnippet

snippet Quarks.checkForUpdates
Quarks.checkForUpdates(${1:done: nil}, ${2: quarkAction: nil})
endsnippet

snippet Quarks.prReadDirectoryFile
Quarks.prReadDirectoryFile(${1:dirTxtPath: nil})
endsnippet

snippet Quarks.prFetchDirectory
Quarks.prFetchDirectory(${1:})
endsnippet

snippet Quarks.quarkNameAsLocalPath
Quarks.quarkNameAsLocalPath(${1:name: nil})
endsnippet

snippet Quarks.isPath
Quarks.isPath(${1:string: nil})
endsnippet

snippet Quarks.asAbsolutePath
Quarks.asAbsolutePath(${1:path: nil}, ${2: relativeTo: nil})
endsnippet

snippet Quarks.asRelativePath
Quarks.asRelativePath(${1:path: nil}, ${2: relativeToDir: nil})
endsnippet

snippet Quarks.classesInPackage
Quarks.classesInPackage(${1:packageName: nil})
endsnippet

snippet Quarks.updateFolderPath
Quarks.updateFolderPath(${1:path: nil})
endsnippet

snippet QuarksGui.new
QuarksGui.new(${1:})
endsnippet

snippet QuartzComposerView.qtClass
QuartzComposerView.qtClass(${1:})
endsnippet

snippet Quaternion.new
Quaternion.new(${1:a: nil}, ${2: b: nil}, ${3: c: nil}, ${4: d: nil})
endsnippet

snippet Quaternion.rand
Quaternion.rand(${1:min: nil}, ${2: max: nil})
endsnippet

snippet RLPF.ar
RLPF.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet RLPF.kr
RLPF.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Rand.new
Rand.new(${1:lo: 0.0}, ${2: hi: 1.0})
endsnippet

snippet RandID.kr
RandID.kr(${1:id: 0})
endsnippet

snippet RandID.ir
RandID.ir(${1:id: 0})
endsnippet

snippet RandSeed.ar
RandSeed.ar(${1:trig: 0.0}, ${2: seed: 56789})
endsnippet

snippet RandSeed.kr
RandSeed.kr(${1:trig: 0.0}, ${2: seed: 56789})
endsnippet

snippet RandSeed.ir
RandSeed.ir(${1:trig: 0.0}, ${2: seed: 56789})
endsnippet

snippet Range.new
Range.new(${1:start: nil}, ${2: size: nil})
endsnippet

snippet RangeSlider.qtClass
RangeSlider.qtClass(${1:})
endsnippet

snippet RangeSlider.new
RangeSlider.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet ReadableNodeIDAllocator.new
ReadableNodeIDAllocator.new(${1:clientID: 0}, ${2: lowestTempID: 1000}, ${3: numClients: 32})
endsnippet

snippet RecNodeProxy.control
RecNodeProxy.control(${1:})
endsnippet

snippet RecNodeProxy.newFrom
RecNodeProxy.newFrom(${1:proxy: nil}, ${2: numChannels: nil})
endsnippet

snippet RecordBuf.ar
RecordBuf.ar(${1:inputArray: nil}, ${2: bufnum: 0}, ${3: offset: 0.0}, ${4: recLevel: 1.0}, ${5: preLevel: 0.0}, ${6: run: 1.0}, ${7: loop: 1.0}, ${8: trigger: 1.0}, ${9: doneAction: 0})
endsnippet

snippet RecordBuf.kr
RecordBuf.kr(${1:inputArray: nil}, ${2: bufnum: 0}, ${3: offset: 0.0}, ${4: recLevel: 1.0}, ${5: preLevel: 0.0}, ${6: run: 1.0}, ${7: loop: 1.0}, ${8: trigger: 1.0}, ${9: doneAction: 0})
endsnippet

snippet RecordProxyMixer2.initClass
RecordProxyMixer2.initClass(${1:})
endsnippet

snippet RecordProxyMixer2.new
RecordProxyMixer2.new(${1:proxymixer: nil}, ${2: bounds: nil})
endsnippet

snippet Recorder.new
Recorder.new(${1:server: nil})
endsnippet

snippet Rect.new
Rect.new(${1:left: 0}, ${2: top: 0}, ${3: width: 0}, ${4: height: 0})
endsnippet

snippet Rect.newSides
Rect.newSides(${1:left: 0}, ${2: top: 0}, ${3: right: 0}, ${4: bottom: 0})
endsnippet

snippet Rect.fromPoints
Rect.fromPoints(${1:pt1: nil}, ${2: pt2: nil})
endsnippet

snippet Rect.fromRect
Rect.fromRect(${1:rect: nil})
endsnippet

snippet Rect.fromArray
Rect.fromArray(${1:array: nil})
endsnippet

snippet Rect.aboutPoint
Rect.aboutPoint(${1:point: nil}, ${2: dx: nil}, ${3: dy: nil})
endsnippet

snippet Ref.new
Ref.new(${1:thing: nil})
endsnippet

snippet Require.test
Require.test(${1:})
endsnippet

snippet Require.initClass
Require.initClass(${1:})
endsnippet

snippet Require.reset
Require.reset(${1:})
endsnippet

snippet Require.new
Require.new(${1:identifier: nil}, ${2: cmdPeriod: false}, ${3: always: true})
endsnippet

snippet Require.resolveRelative
Require.resolveRelative(${1:str: nil}, ${2: relativeTo: nil})
endsnippet

snippet Require.pathMatch
Require.pathMatch(${1:str: nil}, ${2: extensions: nil})
endsnippet

snippet Require.canonicalPath
Require.canonicalPath(${1:path: nil})
endsnippet

snippet Require.resolvePaths
Require.resolvePaths(${1:identifier: nil}, ${2: relativeTo: nil}, ${3: extensions: nil}, ${4: attempts: nil})
endsnippet

snippet Require.require
Require.require(${1:identifier: nil}, ${2: cmdPeriod: false}, ${3: always: true})
endsnippet

snippet RequiredFile.new
RequiredFile.new(${1:path: nil}, ${2: result: nil}, ${3: mtime: nil})
endsnippet

snippet Resonz.ar
Resonz.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: bwr: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Resonz.kr
Resonz.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: bwr: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Rest.new
Rest.new(${1:value: 1})
endsnippet

snippet Rest.embedInStream
Rest.embedInStream(${1:inval: nil})
endsnippet

snippet Rest.asStream
Rest.asStream(${1:})
endsnippet

snippet RingBuffer.new
RingBuffer.new(${1:size: nil}, ${2: collectionClass: nil})
endsnippet

snippet RingNumberAllocator.new
RingNumberAllocator.new(${1:lo: nil}, ${2: hi: nil})
endsnippet

snippet Ringz.ar
Ringz.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: decaytime: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Ringz.kr
Ringz.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: decaytime: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet RootFinder.findRoot
RootFinder.findRoot(${1:func: nil}, ${2: jacobian: nil}, ${3: x0: nil}, ${4: param: nil}, ${5: opts: nil})
endsnippet

snippet RootNode.new
RootNode.new(${1:server: nil})
endsnippet

snippet RootNode.initClass
RootNode.initClass(${1:})
endsnippet

snippet RootNode.freeAll
RootNode.freeAll(${1:})
endsnippet

snippet Rotate2.ar
Rotate2.ar(${1:x: nil}, ${2: y: nil}, ${3: pos: 0.0})
endsnippet

snippet Rotate2.kr
Rotate2.kr(${1:x: nil}, ${2: y: nil}, ${3: pos: 0.0})
endsnippet

snippet Routine.run
Routine.run(${1:func: nil}, ${2: stackSize: nil}, ${3: clock: nil}, ${4: quant: nil})
endsnippet

snippet RunningSum.ar
RunningSum.ar(${1:in: nil}, ${2: numsamp: 40})
endsnippet

snippet RunningSum.kr
RunningSum.kr(${1:in: nil}, ${2: numsamp: 40})
endsnippet

snippet RunningSum.rms
RunningSum.rms(${1:in: nil}, ${2: numsamp: 40})
endsnippet

snippet SCDoc.parseFileFull
SCDoc.parseFileFull(${1:path: nil})
endsnippet

snippet SCDoc.parseFilePartial
SCDoc.parseFilePartial(${1:path: nil})
endsnippet

snippet SCDoc.parseFileMetaData
SCDoc.parseFileMetaData(${1:dir: nil}, ${2: path: nil})
endsnippet

snippet SCDoc.prParseFile
SCDoc.prParseFile(${1:path: nil}, ${2: mode: nil})
endsnippet

snippet SCDoc.indexOldHelp
SCDoc.indexOldHelp(${1:})
endsnippet

snippet SCDoc.indexAllDocuments
SCDoc.indexAllDocuments(${1:clearCache: false})
endsnippet

snippet SCDoc.didIndexDocuments
SCDoc.didIndexDocuments(${1:})
endsnippet

snippet SCDoc.documents
SCDoc.documents(${1:})
endsnippet

snippet SCDoc.prRescanHelpSourceDirs
SCDoc.prRescanHelpSourceDirs(${1:})
endsnippet

snippet SCDoc.helpSourceDirs
SCDoc.helpSourceDirs(${1:})
endsnippet

snippet SCDoc.exportDocMapJS
SCDoc.exportDocMapJS(${1:path: nil})
endsnippet

snippet SCDoc.helpSourceDir_
SCDoc.helpSourceDir_(${1:path: nil})
endsnippet

snippet SCDoc.helpTargetDir_
SCDoc.helpTargetDir_(${1:path: nil})
endsnippet

snippet SCDoc.postMsg
SCDoc.postMsg(${1:txt: nil}, ${2: lvl: 0})
endsnippet

snippet SCDoc.parseDoc
SCDoc.parseDoc(${1:doc: nil})
endsnippet

snippet SCDoc.parseAndRender
SCDoc.parseAndRender(${1:doc: nil})
endsnippet

snippet SCDoc.prepareHelpForURL
SCDoc.prepareHelpForURL(${1:url: nil})
endsnippet

snippet SCDoc.initClass
SCDoc.initClass(${1:})
endsnippet

snippet SCDoc.classHasArKrIr
SCDoc.classHasArKrIr(${1:c: nil})
endsnippet

snippet SCDoc.checkVersion
SCDoc.checkVersion(${1:clearCache: false})
endsnippet

snippet SCDoc.renderAll
SCDoc.renderAll(${1:includeExtensions: true})
endsnippet

snippet SCDoc.makeClassTemplate
SCDoc.makeClassTemplate(${1:doc: nil})
endsnippet

snippet SCDoc.renderUndocClass
SCDoc.renderUndocClass(${1:doc: nil})
endsnippet

snippet SCDoc.getMethodDoc
SCDoc.getMethodDoc(${1:classname: nil}, ${2: methodname: nil})
endsnippet

snippet SCDoc.handleCopyMethods
SCDoc.handleCopyMethods(${1:node: nil}, ${2: doc: nil})
endsnippet

snippet SCDoc.findHelpFile
SCDoc.findHelpFile(${1:str: nil})
endsnippet

snippet SCDoc.getOldWrapUrl
SCDoc.getOldWrapUrl(${1:url: nil})
endsnippet

snippet SCDocEntry.new
SCDocEntry.new(${1:node: nil}, ${2: path: nil})
endsnippet

snippet SCDocEntry.newUndocClass
SCDocEntry.newUndocClass(${1:name: nil})
endsnippet

snippet SCDocHTMLRenderer.escapeSpecialChars
SCDocHTMLRenderer.escapeSpecialChars(${1:str: nil})
endsnippet

snippet SCDocHTMLRenderer.escapeSpacesInAnchor
SCDocHTMLRenderer.escapeSpacesInAnchor(${1:str: nil})
endsnippet

snippet SCDocHTMLRenderer.prLinkTargetForInternalLink
SCDocHTMLRenderer.prLinkTargetForInternalLink(${1:linkBase: nil}, ${2: linkAnchor: nil}, ${3: originalLink: nil})
endsnippet

snippet SCDocHTMLRenderer.prLinkTargetForExternalLink
SCDocHTMLRenderer.prLinkTargetForExternalLink(${1:linkBase: nil}, ${2: linkAnchor: nil})
endsnippet

snippet SCDocHTMLRenderer.prLinkTextForInternalLink
SCDocHTMLRenderer.prLinkTextForInternalLink(${1:linkBase: nil}, ${2: linkAnchor: nil}, ${3: linkText: nil})
endsnippet

snippet SCDocHTMLRenderer.htmlForLink
SCDocHTMLRenderer.htmlForLink(${1:link: nil}, ${2: escape: true})
endsnippet

snippet SCDocHTMLRenderer.makeArgString
SCDocHTMLRenderer.makeArgString(${1:m: nil}, ${2: par: true})
endsnippet

snippet SCDocHTMLRenderer.renderHeader
SCDocHTMLRenderer.renderHeader(${1:stream: nil}, ${2: doc: nil}, ${3: body: nil})
endsnippet

snippet SCDocHTMLRenderer.renderChildren
SCDocHTMLRenderer.renderChildren(${1:stream: nil}, ${2: node: nil})
endsnippet

snippet SCDocHTMLRenderer.renderMethod
SCDocHTMLRenderer.renderMethod(${1:stream: nil}, ${2: node: nil}, ${3: methodType: nil}, ${4: cls: nil}, ${5: icls: nil})
endsnippet

snippet SCDocHTMLRenderer.renderSubTree
SCDocHTMLRenderer.renderSubTree(${1:stream: nil}, ${2: node: nil})
endsnippet

snippet SCDocHTMLRenderer.renderTOC
SCDocHTMLRenderer.renderTOC(${1:stream: nil}, ${2: node: nil})
endsnippet

snippet SCDocHTMLRenderer.addUndocumentedMethods
SCDocHTMLRenderer.addUndocumentedMethods(${1:list: nil}, ${2: body: nil}, ${3: id2: nil}, ${4: id: nil}, ${5: title: nil})
endsnippet

snippet SCDocHTMLRenderer.renderClassTree
SCDocHTMLRenderer.renderClassTree(${1:stream: nil}, ${2: cls: nil})
endsnippet

snippet SCDocHTMLRenderer.renderFootNotes
SCDocHTMLRenderer.renderFootNotes(${1:stream: nil})
endsnippet

snippet SCDocHTMLRenderer.renderFooter
SCDocHTMLRenderer.renderFooter(${1:stream: nil}, ${2: doc: nil})
endsnippet

snippet SCDocHTMLRenderer.renderOnStream
SCDocHTMLRenderer.renderOnStream(${1:stream: nil}, ${2: doc: nil}, ${3: root: nil})
endsnippet

snippet SCDocHTMLRenderer.renderToFile
SCDocHTMLRenderer.renderToFile(${1:filename: nil}, ${2: doc: nil}, ${3: root: nil})
endsnippet

snippet SCNvim.sendJSON
SCNvim.sendJSON(${1:data: nil})
endsnippet

snippet SCNvim.eval
SCNvim.eval(${1:expr: nil})
endsnippet

snippet SCNvim.updateStatusLine
SCNvim.updateStatusLine(${1:interval: 1})
endsnippet

snippet SCNvim.generateAssets
SCNvim.generateAssets(${1:rootDir: nil})
endsnippet

snippet SCNvim.generateSyntax
SCNvim.generateSyntax(${1:outputPath: nil})
endsnippet

snippet SCNvim.generateTags
SCNvim.generateTags(${1:outputPath: nil})
endsnippet

snippet SCNvim.generateSnippets
SCNvim.generateSnippets(${1:outputPath: nil})
endsnippet

snippet SCNvim.methodArgs
SCNvim.methodArgs(${1:method: nil})
endsnippet

snippet SCNvim.prepareHelpFor
SCNvim.prepareHelpFor(${1:text: nil})
endsnippet

snippet SCNvim.openHelpFor
SCNvim.openHelpFor(${1:text: nil}, ${2: pattern: nil}, ${3: renderPrg: nil}, ${4: renderArgs: nil})
endsnippet

snippet SCNvim.renderMethod
SCNvim.renderMethod(${1:uri: nil}, ${2: pattern: nil}, ${3: renderPrg: nil}, ${4: renderArgs: nil})
endsnippet

snippet SCNvimDoc.exportDocMapJson
SCNvimDoc.exportDocMapJson(${1:path: nil})
endsnippet

snippet SCNvimDoc.parseFileMetaData
SCNvimDoc.parseFileMetaData(${1:dir: nil}, ${2: path: nil})
endsnippet

snippet SCNvimDoc.indexAllDocuments
SCNvimDoc.indexAllDocuments(${1:clearCache: false})
endsnippet

snippet SCNvimDoc.findHelpFile
SCNvimDoc.findHelpFile(${1:str: nil})
endsnippet

snippet SCNvimDoc.prepareHelpForURL
SCNvimDoc.prepareHelpForURL(${1:url: nil})
endsnippet

snippet SCNvimDocRenderer.renderTOC
SCNvimDocRenderer.renderTOC(${1:})
endsnippet

snippet SCNvimDocRenderer.renderHeader
SCNvimDocRenderer.renderHeader(${1:stream: nil}, ${2: doc: nil}, ${3: body: nil})
endsnippet

snippet SCNvimDocRenderer.renderFooter
SCNvimDocRenderer.renderFooter(${1:stream: nil}, ${2: doc: nil})
endsnippet

snippet SCNvimDocRenderer.renderMethod
SCNvimDocRenderer.renderMethod(${1:stream: nil}, ${2: node: nil}, ${3: methodType: nil}, ${4: cls: nil}, ${5: icls: nil})
endsnippet

snippet SCNvimDocRenderer.renderSubTree
SCNvimDocRenderer.renderSubTree(${1:stream: nil}, ${2: node: nil})
endsnippet

snippet SCNvimJSON.initClass
SCNvimJSON.initClass(${1:})
endsnippet

snippet SCNvimJSON.stringify
SCNvimJSON.stringify(${1:object: nil})
endsnippet

snippet SCNvimJSON.parse
SCNvimJSON.parse(${1:string: nil})
endsnippet

snippet SCNvimJSON.prParseRecursive
SCNvimJSON.prParseRecursive(${1:object: nil})
endsnippet

snippet SCNvimJSON.prAddAssoc
SCNvimJSON.prAddAssoc(${1:key: nil}, ${2: value: nil}, ${3: isLastItem: nil})
endsnippet

snippet SCScope.qtClass
SCScope.qtClass(${1:})
endsnippet

snippet SOS.ar
SOS.ar(${1:in: 0.0}, ${2: a0: 0.0}, ${3: a1: 0.0}, ${4: a2: 0.0}, ${5: b1: 0.0}, ${6: b2: 0.0}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet SOS.kr
SOS.kr(${1:in: 0.0}, ${2: a0: 0.0}, ${3: a1: 0.0}, ${4: a2: 0.0}, ${5: b1: 0.0}, ${6: b2: 0.0}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet Sanitize.ar
Sanitize.ar(${1:in: 0.0}, ${2: replace: 0.0})
endsnippet

snippet Sanitize.kr
Sanitize.kr(${1:in: 0.0}, ${2: replace: 0.0})
endsnippet

snippet Saw.ar
Saw.ar(${1:freq: 440.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Saw.kr
Saw.kr(${1:freq: 440.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Scale.new
Scale.new(${1:degrees: ionian}, ${2: pitchesPerOctave: nil}, ${3: tuning: nil}, ${4: name: Unknown Scale})
endsnippet

snippet Scale.at
Scale.at(${1:key: nil})
endsnippet

snippet Scale.doesNotUnderstand
Scale.doesNotUnderstand(${1:selector: nil}, ${2: args: nil})
endsnippet

snippet Scale.newFromKey
Scale.newFromKey(${1:key: nil}, ${2: tuning: nil})
endsnippet

snippet Scale.chromatic
Scale.chromatic(${1:tuning: et12})
endsnippet

snippet Scale.choose
Scale.choose(${1:size: 7}, ${2: pitchesPerOctave: 12})
endsnippet

snippet Scale.chooseFromSelected
Scale.chooseFromSelected(${1:selectFunc: nil})
endsnippet

snippet Scale.names
Scale.names(${1:})
endsnippet

snippet Scale.directory
Scale.directory(${1:})
endsnippet

snippet Scale.initClass
Scale.initClass(${1:})
endsnippet

snippet ScaleAD.new
ScaleAD.new(${1:degrees: nil}, ${2: pitchesPerOctave: nil}, ${3: descDegrees: nil}, ${4: tuning: nil}, ${5: name: Unknown Scale})
endsnippet

snippet ScaleStream.new
ScaleStream.new(${1:scale: nil}, ${2: startDegree: 0})
endsnippet

snippet ScatterView.new
ScatterView.new(${1:parent: nil}, ${2: bounds: nil}, ${3: data: nil}, ${4: specX: nil}, ${5: specY: nil})
endsnippet

snippet ScatterView2.new
ScatterView2.new(${1:parent: nil}, ${2: bounds: nil}, ${3: data: nil}, ${4: specX: nil}, ${5: specY: nil})
endsnippet

snippet ScatterView3d.new
ScatterView3d.new(${1:parent: nil}, ${2: bounds: nil}, ${3: data: nil}, ${4: specX: nil}, ${5: specY: nil}, ${6: specZ: nil}, ${7: rotX: 0}, ${8: rotY: 0}, ${9: rotZ: 0})
endsnippet

snippet Scheduler.new
Scheduler.new(${1:clock: nil}, ${2: drift: false}, ${3: recursive: true})
endsnippet

snippet ScopeBuffer.alloc
ScopeBuffer.alloc(${1:server: nil}, ${2: numChannels: 1})
endsnippet

snippet ScopeBuffer.new
ScopeBuffer.new(${1:index: 0}, ${2: numChannels: 1}, ${3: server: nil})
endsnippet

snippet ScopeOut.ar
ScopeOut.ar(${1:inputArray: nil}, ${2: bufnum: 0})
endsnippet

snippet ScopeOut.kr
ScopeOut.kr(${1:inputArray: nil}, ${2: bufnum: 0})
endsnippet

snippet ScopeOut2.ar
ScopeOut2.ar(${1:inputArray: nil}, ${2: scopeNum: 0}, ${3: maxFrames: 4096}, ${4: scopeFrames: nil})
endsnippet

snippet ScopeOut2.kr
ScopeOut2.kr(${1:inputArray: nil}, ${2: scopeNum: 0}, ${3: maxFrames: 4096}, ${4: scopeFrames: nil})
endsnippet

snippet ScopeView.qtClass
ScopeView.qtClass(${1:})
endsnippet

snippet Score.initClass
Score.initClass(${1:})
endsnippet

snippet Score.new
Score.new(${1:list: nil})
endsnippet

snippet Score.newFromFile
Score.newFromFile(${1:path: nil})
endsnippet

snippet Score.playFromFile
Score.playFromFile(${1:path: nil}, ${2: server: nil})
endsnippet

snippet Score.play
Score.play(${1:list: nil}, ${2: server: nil})
endsnippet

snippet Score.recordNRT
Score.recordNRT(${1:list: nil}, ${2: oscFilePath: nil}, ${3: outputFilePath: nil}, ${4: inputFilePath: nil}, ${5: sampleRate: 44100}, ${6: headerFormat: AIFF}, ${7: sampleFormat: int16}, ${8: options: nil}, ${9: completionString: }, ${10: duration: nil}, ${11: action: nil})
endsnippet

snippet Score.writeFromFile
Score.writeFromFile(${1:path: nil}, ${2: oscFilePath: nil}, ${3: clock: nil})
endsnippet

snippet Score.write
Score.write(${1:list: nil}, ${2: oscFilePath: nil}, ${3: clock: nil})
endsnippet

snippet ScoreStreamPlayer.new
ScoreStreamPlayer.new(${1:})
endsnippet

snippet ScrollCanvas.qtClass
ScrollCanvas.qtClass(${1:})
endsnippet

snippet ScrollTopView.qtClass
ScrollTopView.qtClass(${1:})
endsnippet

snippet ScrollTopView.new
ScrollTopView.new(${1:win: nil}, ${2: name: nil}, ${3: bounds: nil}, ${4: resizable: nil}, ${5: border: nil})
endsnippet

snippet ScrollView.new
ScrollView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet ScrollView.qtClass
ScrollView.qtClass(${1:})
endsnippet

snippet Select.ar
Select.ar(${1:which: nil}, ${2: array: nil})
endsnippet

snippet Select.kr
Select.kr(${1:which: nil}, ${2: array: nil})
endsnippet

snippet SelectX.new1
SelectX.new1(${1:rate: nil}, ${2: which: nil}, ${3: array: nil})
endsnippet

snippet SelectX.ar
SelectX.ar(${1:which: nil}, ${2: array: nil}, ${3: wrap: 1})
endsnippet

snippet SelectX.kr
SelectX.kr(${1:which: nil}, ${2: array: nil}, ${3: wrap: 1})
endsnippet

snippet SelectX.crossfadeClass
SelectX.crossfadeClass(${1:})
endsnippet

snippet SelectXFocus.new
SelectXFocus.new(${1:which: nil}, ${2: array: nil}, ${3: focus: 1}, ${4: wrap: false})
endsnippet

snippet SelectXFocus.ar
SelectXFocus.ar(${1:which: nil}, ${2: array: nil}, ${3: focus: 1}, ${4: wrap: false})
endsnippet

snippet SelectXFocus.kr
SelectXFocus.kr(${1:which: nil}, ${2: array: nil}, ${3: focus: 1}, ${4: wrap: false})
endsnippet

snippet Semaphore.new
Semaphore.new(${1:count: 1})
endsnippet

snippet SendPeakRMS.kr
SendPeakRMS.kr(${1:sig: nil}, ${2: replyRate: 20.0}, ${3: peakLag: 3}, ${4: cmdName: /reply}, ${5: replyID: -1})
endsnippet

snippet SendPeakRMS.ar
SendPeakRMS.ar(${1:sig: nil}, ${2: replyRate: 20.0}, ${3: peakLag: 3}, ${4: cmdName: /reply}, ${5: replyID: -1})
endsnippet

snippet SendPeakRMS.new1
SendPeakRMS.new1(${1:rate: nil}, ${2: sig: nil}, ${3: replyRate: nil}, ${4: peakLag: nil}, ${5: cmdName: nil}, ${6: replyID: nil})
endsnippet

snippet SendReply.kr
SendReply.kr(${1:trig: 0.0}, ${2: cmdName: /reply}, ${3: values: nil}, ${4: replyID: -1})
endsnippet

snippet SendReply.ar
SendReply.ar(${1:trig: 0.0}, ${2: cmdName: /reply}, ${3: values: nil}, ${4: replyID: -1})
endsnippet

snippet SendReply.new1
SendReply.new1(${1:rate: nil}, ${2: trig: 0.0}, ${3: cmdName: /reply}, ${4: values: nil}, ${5: replyID: -1})
endsnippet

snippet SendTrig.ar
SendTrig.ar(${1:in: 0.0}, ${2: id: 0}, ${3: value: 0.0})
endsnippet

snippet SendTrig.kr
SendTrig.kr(${1:in: 0.0}, ${2: id: 0}, ${3: value: 0.0})
endsnippet

snippet SequenceableCollection.series
SequenceableCollection.series(${1:size: nil}, ${2: start: 0}, ${3: step: 1})
endsnippet

snippet SequenceableCollection.geom
SequenceableCollection.geom(${1:size: nil}, ${2: start: nil}, ${3: grow: nil})
endsnippet

snippet SequenceableCollection.fib
SequenceableCollection.fib(${1:size: nil}, ${2: a: 0.0}, ${3: b: 1.0})
endsnippet

snippet SequenceableCollection.rand
SequenceableCollection.rand(${1:size: nil}, ${2: minVal: nil}, ${3: maxVal: nil})
endsnippet

snippet SequenceableCollection.exprand
SequenceableCollection.exprand(${1:size: nil}, ${2: minVal: nil}, ${3: maxVal: nil})
endsnippet

snippet SequenceableCollection.rand2
SequenceableCollection.rand2(${1:size: nil}, ${2: val: nil})
endsnippet

snippet SequenceableCollection.linrand
SequenceableCollection.linrand(${1:size: nil}, ${2: minVal: nil}, ${3: maxVal: nil})
endsnippet

snippet SequenceableCollection.interpolation
SequenceableCollection.interpolation(${1:size: nil}, ${2: start: 0.0}, ${3: end: 1.0})
endsnippet

snippet SequenceableCollection.streamContents
SequenceableCollection.streamContents(${1:function: nil})
endsnippet

snippet SequenceableCollection.streamContentsLimit
SequenceableCollection.streamContentsLimit(${1:function: nil}, ${2: limit: 2000})
endsnippet

snippet SequenceableCollection.meshgrid
SequenceableCollection.meshgrid(${1:arrays: nil})
endsnippet

snippet SerialPort.initClass
SerialPort.initClass(${1:})
endsnippet

snippet SerialPort.devices
SerialPort.devices(${1:})
endsnippet

snippet SerialPort.listDevices
SerialPort.listDevices(${1:})
endsnippet

snippet SerialPort.new
SerialPort.new(${1:port: nil}, ${2: baudrate: 9600}, ${3: databits: 8}, ${4: stopbit: true}, ${5: parity: nil}, ${6: crtscts: false}, ${7: xonxoff: false}, ${8: exclusive: false})
endsnippet

snippet SerialPort.closeAll
SerialPort.closeAll(${1:})
endsnippet

snippet SerialPort.cleanupAll
SerialPort.cleanupAll(${1:})
endsnippet

snippet Server.initClass
Server.initClass(${1:})
endsnippet

snippet Server.fromName
Server.fromName(${1:name: nil})
endsnippet

snippet Server.default_
Server.default_(${1:server: nil})
endsnippet

snippet Server.new
Server.new(${1:name: nil}, ${2: addr: nil}, ${3: options: nil}, ${4: clientID: nil})
endsnippet

snippet Server.remote
Server.remote(${1:name: nil}, ${2: addr: nil}, ${3: options: nil}, ${4: clientID: nil})
endsnippet

snippet Server.resumeThreads
Server.resumeThreads(${1:})
endsnippet

snippet Server.quitAll
Server.quitAll(${1:watchShutDown: true})
endsnippet

snippet Server.killAll
Server.killAll(${1:})
endsnippet

snippet Server.freeAll
Server.freeAll(${1:evenRemote: false})
endsnippet

snippet Server.hardFreeAll
Server.hardFreeAll(${1:evenRemote: false})
endsnippet

snippet Server.allBootedServers
Server.allBootedServers(${1:})
endsnippet

snippet Server.allRunningServers
Server.allRunningServers(${1:})
endsnippet

snippet Server.scsynth
Server.scsynth(${1:})
endsnippet

snippet Server.supernova
Server.supernova(${1:})
endsnippet

snippet Server.set
Server.set(${1:})
endsnippet

snippet Server.set_
Server.set_(${1:item: nil})
endsnippet

snippet ServerBoot.functionSelector
ServerBoot.functionSelector(${1:})
endsnippet

snippet ServerMeter.new
ServerMeter.new(${1:server: nil}, ${2: numIns: nil}, ${3: numOuts: nil})
endsnippet

snippet ServerMeterView.new
ServerMeterView.new(${1:aserver: nil}, ${2: parent: nil}, ${3: leftUp: nil}, ${4: numIns: nil}, ${5: numOuts: nil})
endsnippet

snippet ServerMeterView.getWidth
ServerMeterView.getWidth(${1:numIns: nil}, ${2: numOuts: nil}, ${3: server: nil})
endsnippet

snippet ServerOptions.initClass
ServerOptions.initClass(${1:})
endsnippet

snippet ServerOptions.new
ServerOptions.new(${1:})
endsnippet

snippet ServerOptions.prListDevices
ServerOptions.prListDevices(${1:in: nil}, ${2: out: nil})
endsnippet

snippet ServerOptions.devices
ServerOptions.devices(${1:})
endsnippet

snippet ServerOptions.inDevices
ServerOptions.inDevices(${1:})
endsnippet

snippet ServerOptions.outDevices
ServerOptions.outDevices(${1:})
endsnippet

snippet ServerQuit.functionSelector
ServerQuit.functionSelector(${1:})
endsnippet

snippet ServerShmInterface.new
ServerShmInterface.new(${1:port: nil})
endsnippet

snippet ServerStatusWatcher.new
ServerStatusWatcher.new(${1:server: nil})
endsnippet

snippet ServerTree.functionSelector
ServerTree.functionSelector(${1:})
endsnippet

snippet Set.new
Set.new(${1:n: 2})
endsnippet

snippet SetBuf.new
SetBuf.new(${1:buf: nil}, ${2: values: nil}, ${3: offset: 0})
endsnippet

snippet ShannonMarkovSet.new
ShannonMarkovSet.new(${1:size: 8})
endsnippet

snippet ShannonMarkovSet.fill
ShannonMarkovSet.fill(${1:size: nil}, ${2: stream: nil})
endsnippet

snippet SharedIn.kr
SharedIn.kr(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet SharedOut.kr
SharedOut.kr(${1:bus: nil}, ${2: channelsArray: nil})
endsnippet

snippet SharedOut.numFixedArgs
SharedOut.numFixedArgs(${1:})
endsnippet

snippet ShouldNotImplementError.new
ShouldNotImplementError.new(${1:receiver: nil}, ${2: method: nil}, ${3: class: nil})
endsnippet

snippet ShutDown.run
ShutDown.run(${1:})
endsnippet

snippet Signal.sineFill
Signal.sineFill(${1:size: nil}, ${2: amplitudes: nil}, ${3: phases: nil})
endsnippet

snippet Signal.chebyFill
Signal.chebyFill(${1:size: nil}, ${2: amplitudes: nil}, ${3: normalize: true}, ${4: zeroOffset: false})
endsnippet

snippet Signal.hammingWindow_old
Signal.hammingWindow_old(${1:size: nil}, ${2: pad: 0})
endsnippet

snippet Signal.hammingWindow
Signal.hammingWindow(${1:size: nil}, ${2: pad: 0})
endsnippet

snippet Signal.hanningWindow
Signal.hanningWindow(${1:size: nil}, ${2: pad: 0})
endsnippet

snippet Signal.welchWindow
Signal.welchWindow(${1:size: nil}, ${2: pad: 0})
endsnippet

snippet Signal.rectWindow
Signal.rectWindow(${1:size: nil}, ${2: pad: 0})
endsnippet

snippet Signal.readNew
Signal.readNew(${1:file: nil})
endsnippet

snippet Signal.fftCosTable
Signal.fftCosTable(${1:fftsize: nil})
endsnippet

snippet Silent.ar
Silent.ar(${1:numChannels: 1})
endsnippet

snippet SimpleController.new
SimpleController.new(${1:model: nil})
endsnippet

snippet SimpleNumber.new
SimpleNumber.new(${1:})
endsnippet

snippet SinOsc.ar
SinOsc.ar(${1:freq: 440.0}, ${2: phase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet SinOsc.kr
SinOsc.kr(${1:freq: 440.0}, ${2: phase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet SinOscFB.ar
SinOscFB.ar(${1:freq: 440.0}, ${2: feedback: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet SinOscFB.kr
SinOscFB.kr(${1:freq: 440.0}, ${2: feedback: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Singleton.initClass
Singleton.initClass(${1:})
endsnippet

snippet Singleton.default
Singleton.default(${1:})
endsnippet

snippet Singleton.all
Singleton.all(${1:})
endsnippet

snippet Singleton.new
Singleton.new(${1:name: nil}, ${2: settings: [  ]})
endsnippet

snippet Singleton.createNew
Singleton.createNew(${1:args: [  ]})
endsnippet

snippet Singleton.doesNotUnderstand
Singleton.doesNotUnderstand(${1:selector: nil}, ${2: args: [  ]})
endsnippet

snippet Singleton.clear
Singleton.clear(${1:sing: nil})
endsnippet

snippet Size.new
Size.new(${1:width: 0}, ${2: height: 0})
endsnippet

snippet SkipJack.new
SkipJack.new(${1:updateFunc: nil}, ${2: dt: 0.2}, ${3: stopTest: false}, ${4: name: anon}, ${5: clock: nil}, ${6: autostart: true})
endsnippet

snippet SkipJack.initClass
SkipJack.initClass(${1:})
endsnippet

snippet SkipJack.stop
SkipJack.stop(${1:name: nil})
endsnippet

snippet SkipJack.stopAll
SkipJack.stopAll(${1:})
endsnippet

snippet Slew.ar
Slew.ar(${1:in: 0.0}, ${2: up: 1.0}, ${3: dn: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Slew.kr
Slew.kr(${1:in: 0.0}, ${2: up: 1.0}, ${3: dn: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Slider.qtClass
Slider.qtClass(${1:})
endsnippet

snippet Slider.new
Slider.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet Slider2D.qtClass
Slider2D.qtClass(${1:})
endsnippet

snippet Slider2D.new
Slider2D.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet Slope.ar
Slope.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Slope.kr
Slope.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet SlotInspector.new
SlotInspector.new(${1:inspector: nil}, ${2: index: nil}, ${3: vpos: nil})
endsnippet

snippet Solver.new
Solver.new(${1:f: nil}, ${2: dt: nil}, ${3: t: 0}, ${4: y: 0})
endsnippet

snippet Solver.newHO
Solver.newHO(${1:f: nil}, ${2: dt: nil}, ${3: t: nil}, ${4: y: nil})
endsnippet

snippet SortedList.new
SortedList.new(${1:size: 8}, ${2: function: nil})
endsnippet

snippet SoundFile.closeAll
SoundFile.closeAll(${1:})
endsnippet

snippet SoundFile.new
SoundFile.new(${1:pathName: nil})
endsnippet

snippet SoundFile.openRead
SoundFile.openRead(${1:pathName: nil})
endsnippet

snippet SoundFile.openWrite
SoundFile.openWrite(${1:pathName: nil}, ${2: headerFormat: nil}, ${3: sampleFormat: nil}, ${4: numChannels: nil}, ${5: sampleRate: nil})
endsnippet

snippet SoundFile.use
SoundFile.use(${1:path: nil}, ${2: function: nil})
endsnippet

snippet SoundFile.normalize
SoundFile.normalize(${1:path: nil}, ${2: outPath: nil}, ${3: newHeaderFormat: nil}, ${4: newSampleFormat: nil}, ${5: startFrame: 0}, ${6: numFrames: nil}, ${7: maxAmp: 1.0}, ${8: linkChannels: true}, ${9: chunkSize: 4194304}, ${10: threaded: false})
endsnippet

snippet SoundFile.groupNormalize
SoundFile.groupNormalize(${1:paths: nil}, ${2: outDir: nil}, ${3: newHeaderFormat: nil}, ${4: newSampleFormat: nil}, ${5: maxAmp: 1.0}, ${6: chunkSize: 4194304}, ${7: threaded: true})
endsnippet

snippet SoundFile.collect
SoundFile.collect(${1:path: sounds/*})
endsnippet

snippet SoundFile.collectIntoBuffers
SoundFile.collectIntoBuffers(${1:path: sounds/*}, ${2: server: nil})
endsnippet

snippet SoundFileView.qtClass
SoundFileView.qtClass(${1:})
endsnippet

snippet SoundIn.ar
SoundIn.ar(${1:bus: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet SoundIn.channelOffset
SoundIn.channelOffset(${1:})
endsnippet

snippet SparseArray.newClear
SparseArray.newClear(${1:size: nil}, ${2: default: nil})
endsnippet

snippet SparseArray.reduceArray
SparseArray.reduceArray(${1:array: nil}, ${2: default: nil})
endsnippet

snippet Spawner.new
Spawner.new(${1:func: nil}, ${2: stackSize: 64})
endsnippet

snippet Spec.initClass
Spec.initClass(${1:})
endsnippet

snippet Spec.add
Spec.add(${1:name: nil}, ${2: args: nil})
endsnippet

snippet Spec.guess
Spec.guess(${1:key: nil}, ${2: value: nil})
endsnippet

snippet Spec.suggestString
Spec.suggestString(${1:key: nil}, ${2: value: nil})
endsnippet

snippet SpecCentroid.kr
SpecCentroid.kr(${1:buffer: nil})
endsnippet

snippet SpecFlatness.kr
SpecFlatness.kr(${1:buffer: nil})
endsnippet

snippet SpecPcile.kr
SpecPcile.kr(${1:buffer: nil}, ${2: fraction: 0.5}, ${3: interpolate: 0})
endsnippet

snippet Spherical.new
Spherical.new(${1:rho: nil}, ${2: theta: nil}, ${3: phi: nil})
endsnippet

snippet Splay.new1
Splay.new1(${1:rate: nil}, ${2: spread: 1}, ${3: level: 1}, ${4: center: 0.0}, ${5: levelComp: true}, ${6: inArray: [  ]})
endsnippet

snippet Splay.kr
Splay.kr(${1:inArray: nil}, ${2: spread: 1}, ${3: level: 1}, ${4: center: 0.0}, ${5: levelComp: true})
endsnippet

snippet Splay.ar
Splay.ar(${1:inArray: nil}, ${2: spread: 1}, ${3: level: 1}, ${4: center: 0.0}, ${5: levelComp: true})
endsnippet

snippet Splay.arFill
Splay.arFill(${1:n: nil}, ${2: function: nil}, ${3: spread: 1}, ${4: level: 1}, ${5: center: 0.0}, ${6: levelComp: true})
endsnippet

snippet SplayAz.kr
SplayAz.kr(${1:numChans: 4}, ${2: inArray: nil}, ${3: spread: 1}, ${4: level: 1}, ${5: width: 2}, ${6: center: 0.0}, ${7: orientation: 0.5}, ${8: levelComp: true})
endsnippet

snippet SplayAz.ar
SplayAz.ar(${1:numChans: 4}, ${2: inArray: nil}, ${3: spread: 1}, ${4: level: 1}, ${5: width: 2}, ${6: center: 0.0}, ${7: orientation: 0.5}, ${8: levelComp: true})
endsnippet

snippet SplayAz.arFill
SplayAz.arFill(${1:numChans: 4}, ${2: n: nil}, ${3: function: nil}, ${4: spread: 1}, ${5: level: 1}, ${6: width: 2}, ${7: center: 0.0}, ${8: orientation: 0.5}, ${9: levelComp: true})
endsnippet

snippet SplayZ.ar
SplayZ.ar(${1:numChans: 4}, ${2: inArray: nil}, ${3: spread: 1}, ${4: level: 1}, ${5: width: 2}, ${6: center: 0.0}, ${7: orientation: 0.5}, ${8: levelComp: true})
endsnippet

snippet SplayZ.arFill
SplayZ.arFill(${1:numChans: 4}, ${2: n: nil}, ${3: function: nil}, ${4: spread: 1}, ${5: level: 1}, ${6: width: 2}, ${7: center: 0.0}, ${8: orientation: 0.5}, ${9: levelComp: true})
endsnippet

snippet Spring.ar
Spring.ar(${1:in: 0.0}, ${2: spring: 1}, ${3: damp: 0})
endsnippet

snippet Spring.kr
Spring.kr(${1:in: 0.0}, ${2: spring: 1}, ${3: damp: 0})
endsnippet

snippet StackLayout.qtClass
StackLayout.qtClass(${1:})
endsnippet

snippet StackLayout.new
StackLayout.new(${1:views: [  ]})
endsnippet

snippet StackNumberAllocator.new
StackNumberAllocator.new(${1:lo: nil}, ${2: hi: nil})
endsnippet

snippet StageLimiter.activate
StageLimiter.activate(${1:numChannels: 2})
endsnippet

snippet StageLimiter.deactivate
StageLimiter.deactivate(${1:})
endsnippet

snippet StandardN.ar
StandardN.ar(${1:freq: 22050}, ${2: k: 1.0}, ${3: xi: 0.5}, ${4: yi: 0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet StartUp.run
StartUp.run(${1:})
endsnippet

snippet StartUp.defer
StartUp.defer(${1:object: nil})
endsnippet

snippet StaticText.qtClass
StaticText.qtClass(${1:})
endsnippet

snippet StaticText.new
StaticText.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet Stepper.ar
Stepper.ar(${1:trig: 0}, ${2: reset: 0}, ${3: min: 0}, ${4: max: 7}, ${5: step: 1}, ${6: resetval: nil})
endsnippet

snippet Stepper.kr
Stepper.kr(${1:trig: 0}, ${2: reset: 0}, ${3: min: 0}, ${4: max: 7}, ${5: step: 1}, ${6: resetval: nil})
endsnippet

snippet StereoConvolution2L.ar
StereoConvolution2L.ar(${1:in: nil}, ${2: kernelL: nil}, ${3: kernelR: nil}, ${4: trigger: 0}, ${5: framesize: 2048}, ${6: crossfade: 1}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet Stethoscope.isValidServer
Stethoscope.isValidServer(${1:aServer: nil})
endsnippet

snippet Stethoscope.ugenScopes
Stethoscope.ugenScopes(${1:})
endsnippet

snippet Stethoscope.tileBounds
Stethoscope.tileBounds(${1:})
endsnippet

snippet Stethoscope.new
Stethoscope.new(${1:server: nil}, ${2: numChannels: 2}, ${3: index: 0}, ${4: bufsize: 4096}, ${5: zoom: 1.0}, ${6: rate: audio}, ${7: view: nil}, ${8: bufnum: nil})
endsnippet

snippet StoredList.new
StoredList.new(${1:id: nil}, ${2: list: nil}, ${3: suffix: .pxpreset})
endsnippet

snippet StoredList.boundsAround
StoredList.boundsAround(${1:loc: nil}, ${2: winSize: nil}, ${3: flip: true})
endsnippet

snippet StreamClutch.new
StreamClutch.new(${1:pattern: nil}, ${2: connected: true})
endsnippet

snippet String.initClass
String.initClass(${1:})
endsnippet

snippet String.doUnixCmdAction
String.doUnixCmdAction(${1:res: nil}, ${2: pid: nil})
endsnippet

snippet String.readNew
String.readNew(${1:file: nil})
endsnippet

snippet String.scDir
String.scDir(${1:})
endsnippet

snippet SubclassResponsibilityError.new
SubclassResponsibilityError.new(${1:receiver: nil}, ${2: method: nil}, ${3: class: nil})
endsnippet

snippet Sum3.new
Sum3.new(${1:in0: nil}, ${2: in1: nil}, ${3: in2: nil})
endsnippet

snippet Sum3.new1
Sum3.new1(${1:dummyRate: nil}, ${2: in0: nil}, ${3: in1: nil}, ${4: in2: nil})
endsnippet

snippet Sum4.new
Sum4.new(${1:in0: nil}, ${2: in1: nil}, ${3: in2: nil}, ${4: in3: nil})
endsnippet

snippet Sum4.new1
Sum4.new1(${1:dummyRate: nil}, ${2: in0: nil}, ${3: in1: nil}, ${4: in2: nil}, ${5: in3: nil})
endsnippet

snippet Sweep.ar
Sweep.ar(${1:trig: 0.0}, ${2: rate: 1.0})
endsnippet

snippet Sweep.kr
Sweep.kr(${1:trig: 0.0}, ${2: rate: 1.0})
endsnippet

snippet Symbol.new
Symbol.new(${1:})
endsnippet

snippet SyncSaw.ar
SyncSaw.ar(${1:syncFreq: 440.0}, ${2: sawFreq: 440.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet SyncSaw.kr
SyncSaw.kr(${1:syncFreq: 440.0}, ${2: sawFreq: 440.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Synth.new
Synth.new(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead})
endsnippet

snippet Synth.newPaused
Synth.newPaused(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead})
endsnippet

snippet Synth.replace
Synth.replace(${1:nodeToReplace: nil}, ${2: defName: nil}, ${3: args: nil}, ${4: sameID: false})
endsnippet

snippet Synth.basicNew
Synth.basicNew(${1:defName: nil}, ${2: server: nil}, ${3: nodeID: nil})
endsnippet

snippet Synth.after
Synth.after(${1:aNode: nil}, ${2: defName: nil}, ${3: args: nil})
endsnippet

snippet Synth.before
Synth.before(${1:aNode: nil}, ${2: defName: nil}, ${3: args: nil})
endsnippet

snippet Synth.head
Synth.head(${1:aGroup: nil}, ${2: defName: nil}, ${3: args: nil})
endsnippet

snippet Synth.tail
Synth.tail(${1:aGroup: nil}, ${2: defName: nil}, ${3: args: nil})
endsnippet

snippet Synth.grain
Synth.grain(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead})
endsnippet

snippet SynthDef.synthDefDir_
SynthDef.synthDefDir_(${1:dir: nil})
endsnippet

snippet SynthDef.initClass
SynthDef.initClass(${1:})
endsnippet

snippet SynthDef.new
SynthDef.new(${1:name: nil}, ${2: ugenGraphFunc: nil}, ${3: rates: nil}, ${4: prependArgs: nil}, ${5: variants: nil}, ${6: metadata: nil})
endsnippet

snippet SynthDef.wrap
SynthDef.wrap(${1:func: nil}, ${2: rates: nil}, ${3: prependArgs: nil})
endsnippet

snippet SynthDef.writeOnce
SynthDef.writeOnce(${1:name: nil}, ${2: func: nil}, ${3: rates: nil}, ${4: prependArgs: nil}, ${5: variants: nil}, ${6: dir: nil}, ${7: metadata: nil}, ${8: mdPlugin: nil})
endsnippet

snippet SynthDef.removeAt
SynthDef.removeAt(${1:name: nil}, ${2: libname: global})
endsnippet

snippet SynthDefOld.new
SynthDefOld.new(${1:name: nil}, ${2: ugenGraphFunc: nil}, ${3: rates: nil}, ${4: prependArgs: nil}, ${5: variants: nil}, ${6: metadata: nil})
endsnippet

snippet SynthDesc.newFrom
SynthDesc.newFrom(${1:synthdef: nil})
endsnippet

snippet SynthDesc.initClass
SynthDesc.initClass(${1:})
endsnippet

snippet SynthDesc.read
SynthDesc.read(${1:path: nil}, ${2: keepDefs: false}, ${3: dict: nil})
endsnippet

snippet SynthDesc.readFile
SynthDesc.readFile(${1:stream: nil}, ${2: keepDefs: false}, ${3: dict: nil}, ${4: path: nil})
endsnippet

snippet SynthDesc.defNameFromBytes
SynthDesc.defNameFromBytes(${1:int8Array: nil})
endsnippet

snippet SynthDescLib.new
SynthDescLib.new(${1:name: nil}, ${2: servers: nil})
endsnippet

snippet SynthDescLib.initClass
SynthDescLib.initClass(${1:})
endsnippet

snippet SynthDescLib.getLib
SynthDescLib.getLib(${1:libname: nil})
endsnippet

snippet SynthDescLib.default
SynthDescLib.default(${1:})
endsnippet

snippet SynthDescLib.send
SynthDescLib.send(${1:server: nil}, ${2: tryToLoadReconstructedDefs: true})
endsnippet

snippet SynthDescLib.read
SynthDescLib.read(${1:path: nil})
endsnippet

snippet SynthDescLib.at
SynthDescLib.at(${1:i: nil})
endsnippet

snippet SynthDescLib.match
SynthDescLib.match(${1:key: nil})
endsnippet

snippet SystemClock.clear
SystemClock.clear(${1:})
endsnippet

snippet SystemClock.sched
SystemClock.sched(${1:delta: nil}, ${2: item: nil})
endsnippet

snippet SystemClock.schedAbs
SystemClock.schedAbs(${1:time: nil}, ${2: item: nil})
endsnippet

snippet SystemClock.prClear
SystemClock.prClear(${1:})
endsnippet

snippet SystemSynthDefs.generateTempName
SystemSynthDefs.generateTempName(${1:})
endsnippet

snippet SystemSynthDefs.initClass
SystemSynthDefs.initClass(${1:})
endsnippet

snippet T2A.ar
T2A.ar(${1:in: 0.0}, ${2: offset: 0})
endsnippet

snippet TBall.ar
TBall.ar(${1:in: 0.0}, ${2: g: 10}, ${3: damp: 0}, ${4: friction: 0.01})
endsnippet

snippet TBall.kr
TBall.kr(${1:in: 0.0}, ${2: g: 10}, ${3: damp: 0}, ${4: friction: 0.01})
endsnippet

snippet TChoose.ar
TChoose.ar(${1:trig: nil}, ${2: array: nil})
endsnippet

snippet TChoose.kr
TChoose.kr(${1:trig: nil}, ${2: array: nil})
endsnippet

snippet TDuty.ar
TDuty.ar(${1:dur: 1.0}, ${2: reset: 0.0}, ${3: level: 1.0}, ${4: doneAction: 0}, ${5: gapFirst: 0})
endsnippet

snippet TDuty.kr
TDuty.kr(${1:dur: 1.0}, ${2: reset: 0.0}, ${3: level: 1.0}, ${4: doneAction: 0}, ${5: gapFirst: 0})
endsnippet

snippet TExpRand.ar
TExpRand.ar(${1:lo: 0.01}, ${2: hi: 1.0}, ${3: trig: 0.0})
endsnippet

snippet TExpRand.kr
TExpRand.kr(${1:lo: 0.01}, ${2: hi: 1.0}, ${3: trig: 0.0})
endsnippet

snippet TGrains.ar
TGrains.ar(${1:numChannels: nil}, ${2: trigger: 0}, ${3: bufnum: 0}, ${4: rate: 1}, ${5: centerPos: 0}, ${6: dur: 0.1}, ${7: pan: 0}, ${8: amp: 0.1}, ${9: interp: 4})
endsnippet

snippet TIRand.kr
TIRand.kr(${1:lo: 0}, ${2: hi: 127}, ${3: trig: 0.0})
endsnippet

snippet TIRand.ar
TIRand.ar(${1:lo: 0}, ${2: hi: 127}, ${3: trig: 0.0})
endsnippet

snippet TRand.ar
TRand.ar(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: trig: 0.0})
endsnippet

snippet TRand.kr
TRand.kr(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: trig: 0.0})
endsnippet

snippet TWChoose.ar
TWChoose.ar(${1:trig: nil}, ${2: array: nil}, ${3: weights: nil}, ${4: normalize: 0})
endsnippet

snippet TWChoose.kr
TWChoose.kr(${1:trig: nil}, ${2: array: nil}, ${3: weights: nil}, ${4: normalize: 0})
endsnippet

snippet TWindex.ar
TWindex.ar(${1:in: nil}, ${2: array: nil}, ${3: normalize: 0})
endsnippet

snippet TWindex.kr
TWindex.kr(${1:in: nil}, ${2: array: nil}, ${3: normalize: 0})
endsnippet

snippet Tap.ar
Tap.ar(${1:bufnum: 0}, ${2: numChannels: 1}, ${3: delaytime: 0.2})
endsnippet

snippet Task.new
Task.new(${1:func: nil}, ${2: clock: nil})
endsnippet

snippet TaskProxy.default
TaskProxy.default(${1:})
endsnippet

snippet TaskProxyAllGui.observedClass
TaskProxyAllGui.observedClass(${1:})
endsnippet

snippet TaskProxyAllGui.tpGuiClass
TaskProxyAllGui.tpGuiClass(${1:})
endsnippet

snippet TaskProxyAllGui.observedAll
TaskProxyAllGui.observedAll(${1:})
endsnippet

snippet TaskProxyAllGui.new
TaskProxyAllGui.new(${1:numItems: 16}, ${2: parent: nil}, ${3: bounds: nil}, ${4: makeSkip: true}, ${5: options: [  ]})
endsnippet

snippet TaskProxyGui.observedClass
TaskProxyGui.observedClass(${1:})
endsnippet

snippet Tdef.initClass
Tdef.initClass(${1:})
endsnippet

snippet Tdef.new
Tdef.new(${1:key: nil}, ${2: item: nil})
endsnippet

snippet Tdef.hasGlobalDictionary
Tdef.hasGlobalDictionary(${1:})
endsnippet

snippet Tdef.gui
Tdef.gui(${1:numItems: nil}, ${2: bounds: nil}, ${3: preset: nil})
endsnippet

snippet TdefAllGui.observedClass
TdefAllGui.observedClass(${1:})
endsnippet

snippet TdefAllGui.tpGuiClass
TdefAllGui.tpGuiClass(${1:})
endsnippet

snippet TdefGui.observedClass
TdefGui.observedClass(${1:})
endsnippet

snippet TdefPreset.initClass
TdefPreset.initClass(${1:})
endsnippet

snippet TdefPreset.proxyClass
TdefPreset.proxyClass(${1:})
endsnippet

snippet TdefPreset.new
TdefPreset.new(${1:key: nil}, ${2: namesToStore: nil}, ${3: settings: nil}, ${4: specs: nil}, ${5: morphFuncs: nil})
endsnippet

snippet TempoBusClock.new
TempoBusClock.new(${1:control: nil}, ${2: tempo: nil}, ${3: beats: nil}, ${4: seconds: nil})
endsnippet

snippet TempoClock.new
TempoClock.new(${1:tempo: nil}, ${2: beats: nil}, ${3: seconds: nil}, ${4: queueSize: 256})
endsnippet

snippet TempoClock.initClass
TempoClock.initClass(${1:})
endsnippet

snippet TempoClock.cmdPeriod
TempoClock.cmdPeriod(${1:})
endsnippet

snippet TempoClock.stop
TempoClock.stop(${1:})
endsnippet

snippet TempoClock.play
TempoClock.play(${1:task: nil}, ${2: quant: nil})
endsnippet

snippet TempoClock.sched
TempoClock.sched(${1:delta: nil}, ${2: item: nil})
endsnippet

snippet TempoClock.schedAbs
TempoClock.schedAbs(${1:beat: nil}, ${2: item: nil})
endsnippet

snippet TempoClock.clear
TempoClock.clear(${1:releaseNodes: nil})
endsnippet

snippet TempoClock.tempo_
TempoClock.tempo_(${1:newTempo: nil})
endsnippet

snippet TempoClock.etempo_
TempoClock.etempo_(${1:newTempo: nil})
endsnippet

snippet TempoClock.tempo
TempoClock.tempo(${1:})
endsnippet

snippet TempoClock.beats
TempoClock.beats(${1:})
endsnippet

snippet TempoClock.beats2secs
TempoClock.beats2secs(${1:beats: nil})
endsnippet

snippet TempoClock.secs2beats
TempoClock.secs2beats(${1:secs: nil})
endsnippet

snippet TempoClock.nextTimeOnGrid
TempoClock.nextTimeOnGrid(${1:quant: 1}, ${2: phase: 0})
endsnippet

snippet TempoClock.timeToNextBeat
TempoClock.timeToNextBeat(${1:quant: 1})
endsnippet

snippet TempoClock.setTempoAtBeat
TempoClock.setTempoAtBeat(${1:newTempo: nil}, ${2: beats: nil})
endsnippet

snippet TempoClock.setTempoAtSec
TempoClock.setTempoAtSec(${1:newTempo: nil}, ${2: secs: nil})
endsnippet

snippet TempoClock.setMeterAtBeat
TempoClock.setMeterAtBeat(${1:newBeatsPerBar: nil}, ${2: beats: nil})
endsnippet

snippet TempoClock.beatsPerBar
TempoClock.beatsPerBar(${1:})
endsnippet

snippet TempoClock.baseBarBeat
TempoClock.baseBarBeat(${1:})
endsnippet

snippet TempoClock.baseBar
TempoClock.baseBar(${1:})
endsnippet

snippet TempoClock.playNextBar
TempoClock.playNextBar(${1:task: nil})
endsnippet

snippet TempoClock.beatDur
TempoClock.beatDur(${1:})
endsnippet

snippet TempoClock.elapsedBeats
TempoClock.elapsedBeats(${1:})
endsnippet

snippet TempoClock.beatsPerBar_
TempoClock.beatsPerBar_(${1:newBeatsPerBar: nil})
endsnippet

snippet TempoClock.beats2bars
TempoClock.beats2bars(${1:beats: nil})
endsnippet

snippet TempoClock.bars2beats
TempoClock.bars2beats(${1:bars: nil})
endsnippet

snippet TempoClock.bar
TempoClock.bar(${1:})
endsnippet

snippet TempoClock.nextBar
TempoClock.nextBar(${1:beat: nil})
endsnippet

snippet TempoClock.beatInBar
TempoClock.beatInBar(${1:})
endsnippet

snippet TempoClock.isRunning
TempoClock.isRunning(${1:})
endsnippet

snippet TextArchiveMDPlugin.writeMetadataFile
TextArchiveMDPlugin.writeMetadataFile(${1:metadata: nil}, ${2: synthdef: nil}, ${3: path: nil})
endsnippet

snippet TextArchiveMDPlugin.readMetadataFile
TextArchiveMDPlugin.readMetadataFile(${1:path: nil})
endsnippet

snippet TextArchiveMDPlugin.mdExtension
TextArchiveMDPlugin.mdExtension(${1:})
endsnippet

snippet TextField.qtClass
TextField.qtClass(${1:})
endsnippet

snippet TextView.qtClass
TextView.qtClass(${1:})
endsnippet

snippet Thread.new
Thread.new(${1:func: nil}, ${2: stackSize: 512})
endsnippet

snippet Thread.primitiveError
Thread.primitiveError(${1:})
endsnippet

snippet Thread.primitiveErrorString
Thread.primitiveErrorString(${1:})
endsnippet

snippet Thunk.new
Thunk.new(${1:function: nil})
endsnippet

snippet Timer.ar
Timer.ar(${1:trig: 0.0})
endsnippet

snippet Timer.kr
Timer.kr(${1:trig: 0.0})
endsnippet

snippet ToggleFF.ar
ToggleFF.ar(${1:trig: 0.0})
endsnippet

snippet ToggleFF.kr
ToggleFF.kr(${1:trig: 0.0})
endsnippet

snippet ToolBar.qtClass
ToolBar.qtClass(${1:})
endsnippet

snippet ToolBar.new
ToolBar.new(${1:actions: [  ]})
endsnippet

snippet TopView.qtClass
TopView.qtClass(${1:})
endsnippet

snippet TopView.new
TopView.new(${1:win: nil}, ${2: name: nil}, ${3: bounds: nil}, ${4: resizable: nil}, ${5: border: nil})
endsnippet

snippet TouchResponder.new
TouchResponder.new(${1:function: nil}, ${2: src: nil}, ${3: chan: nil}, ${4: value: nil}, ${5: install: true}, ${6: swallowEvent: false})
endsnippet

snippet TouchResponder.init
TouchResponder.init(${1:})
endsnippet

snippet TouchResponder.initialized
TouchResponder.initialized(${1:})
endsnippet

snippet TouchResponder.responders
TouchResponder.responders(${1:})
endsnippet

snippet TouchResponder.add
TouchResponder.add(${1:resp: nil})
endsnippet

snippet TouchResponder.remove
TouchResponder.remove(${1:resp: nil})
endsnippet

snippet Trafo.basicNew
Trafo.basicNew(${1:matrix: nil})
endsnippet

snippet Trafo.newFromRotTrans
Trafo.newFromRotTrans(${1:rot: nil}, ${2: trans: nil})
endsnippet

snippet Trafo.new
Trafo.new(${1:basis: nil}, ${2: d: nil})
endsnippet

snippet Trafo.from3dPoints
Trafo.from3dPoints(${1:a: nil}, ${2: b: nil}, ${3: c: nil})
endsnippet

snippet Trafo.inverseFrom3dPoints
Trafo.inverseFrom3dPoints(${1:a: nil}, ${2: b: nil}, ${3: c: nil})
endsnippet

snippet Trafo.pr_Point3toBasis
Trafo.pr_Point3toBasis(${1:a: nil}, ${2: b: nil}, ${3: c: nil})
endsnippet

snippet Trafo.pr_normVec
Trafo.pr_normVec(${1:a: nil})
endsnippet

snippet Trafo.pr_cross
Trafo.pr_cross(${1:a: nil}, ${2: b: nil})
endsnippet

snippet TreeView.qtClass
TreeView.qtClass(${1:})
endsnippet

snippet Trig1.ar
Trig1.ar(${1:in: 0.0}, ${2: dur: 0.1})
endsnippet

snippet Trig1.kr
Trig1.kr(${1:in: 0.0}, ${2: dur: 0.1})
endsnippet

snippet Tuning.new
Tuning.new(${1:tuning: nil}, ${2: octaveRatio: 2.0}, ${3: name: Unknown Tuning})
endsnippet

snippet Tuning.at
Tuning.at(${1:key: nil})
endsnippet

snippet Tuning.doesNotUnderstand
Tuning.doesNotUnderstand(${1:selector: nil}, ${2: args: nil})
endsnippet

snippet Tuning.newFromKey
Tuning.newFromKey(${1:key: nil})
endsnippet

snippet Tuning.default
Tuning.default(${1:pitchesPerOctave: nil})
endsnippet

snippet Tuning.et
Tuning.et(${1:pitchesPerOctave: 12})
endsnippet

snippet Tuning.calcET
Tuning.calcET(${1:pitchesPerOctave: nil})
endsnippet

snippet Tuning.etName
Tuning.etName(${1:pitchesPerOctave: nil})
endsnippet

snippet Tuning.choose
Tuning.choose(${1:size: 12})
endsnippet

snippet Tuning.chooseFromSelected
Tuning.chooseFromSelected(${1:selectFunc: nil})
endsnippet

snippet Tuning.names
Tuning.names(${1:})
endsnippet

snippet Tuning.directory
Tuning.directory(${1:})
endsnippet

snippet Tuning.initClass
Tuning.initClass(${1:})
endsnippet

snippet TwoPole.ar
TwoPole.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: radius: 0.8}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet TwoPole.kr
TwoPole.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: radius: 0.8}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet TwoWayIdentityDictionary.new
TwoWayIdentityDictionary.new(${1:})
endsnippet

snippet UGen.new1
UGen.new1(${1:rate: nil}, ${2: args: [  ]})
endsnippet

snippet UGen.newFromDesc
UGen.newFromDesc(${1:rate: nil}, ${2: numOutputs: nil}, ${3: inputs: nil}, ${4: specialIndex: nil})
endsnippet

snippet UGen.multiNew
UGen.multiNew(${1:args: [  ]})
endsnippet

snippet UGen.multiNewList
UGen.multiNewList(${1:args: nil})
endsnippet

snippet UGen.methodSelectorForRate
UGen.methodSelectorForRate(${1:rate: nil})
endsnippet

snippet UGen.replaceZeroesWithSilence
UGen.replaceZeroesWithSilence(${1:array: nil})
endsnippet

snippet URI.new
URI.new(${1:validUriString: nil})
endsnippet

snippet URI.fromLocalPath
URI.fromLocalPath(${1:string: nil})
endsnippet

snippet URI.tolerant
URI.tolerant(${1:string: nil})
endsnippet

snippet UnaryOpFunction.new
UnaryOpFunction.new(${1:selector: nil}, ${2: a: nil})
endsnippet

snippet UnaryOpPlug.new
UnaryOpPlug.new(${1:operator: nil}, ${2: a: nil})
endsnippet

snippet UnaryOpStream.new
UnaryOpStream.new(${1:operator: nil}, ${2: a: nil})
endsnippet

snippet UnaryOpUGen.new
UnaryOpUGen.new(${1:selector: nil}, ${2: a: nil})
endsnippet

snippet UniqueID.initClass
UniqueID.initClass(${1:})
endsnippet

snippet UniqueID.next
UniqueID.next(${1:})
endsnippet

snippet UnitTest.initClass
UnitTest.initClass(${1:})
endsnippet

snippet UnitTest.findTestClasses
UnitTest.findTestClasses(${1:})
endsnippet

snippet UnitTest.runTest
UnitTest.runTest(${1:methodName: nil})
endsnippet

snippet UnitTest.setUpClass
UnitTest.setUpClass(${1:})
endsnippet

snippet UnitTest.tearDownClass
UnitTest.tearDownClass(${1:})
endsnippet

snippet UnitTest.run
UnitTest.run(${1:reset: true}, ${2: report: true})
endsnippet

snippet UnitTest.runAll
UnitTest.runAll(${1:})
endsnippet

snippet UnitTest.prRunAllTestMethods
UnitTest.prRunAllTestMethods(${1:report: true})
endsnippet

snippet UnitTest.prRunWithinSetUpClass
UnitTest.prRunWithinSetUpClass(${1:func: nil})
endsnippet

snippet UnitTest.gui
UnitTest.gui(${1:})
endsnippet

snippet UnitTest.runTestClassForClass
UnitTest.runTestClassForClass(${1:class: nil}, ${2: reset: true}, ${3: report: true})
endsnippet

snippet UnitTest.findTestClass
UnitTest.findTestClass(${1:forClass: nil})
endsnippet

snippet UnitTest.report
UnitTest.report(${1:})
endsnippet

snippet UnitTest.forkIfNeeded
UnitTest.forkIfNeeded(${1:function: nil})
endsnippet

snippet UnitTest.findTestMethods
UnitTest.findTestMethods(${1:})
endsnippet

snippet UnitTest.classesWithTests
UnitTest.classesWithTests(${1:package: Common})
endsnippet

snippet UnitTest.classesWithoutTests
UnitTest.classesWithoutTests(${1:package: Common})
endsnippet

snippet UnitTest.findTestedClass
UnitTest.findTestedClass(${1:})
endsnippet

snippet UnitTest.untestedMethods
UnitTest.untestedMethods(${1:})
endsnippet

snippet UnitTest.listUntestedMethods
UnitTest.listUntestedMethods(${1:forClass: nil})
endsnippet

snippet UnitTest.reset
UnitTest.reset(${1:})
endsnippet

snippet UnitTestGUI.new
UnitTestGUI.new(${1:allTestClasses: nil})
endsnippet

snippet UnitTestResult.new
UnitTestResult.new(${1:testClass: nil}, ${2: testMethod: nil}, ${3: message: }, ${4: details: nil}, ${5: debug: nil})
endsnippet

snippet UnitTestScript.new
UnitTestScript.new(${1:name: nil}, ${2: path: nil})
endsnippet

snippet UnitTestScript.initClass
UnitTestScript.initClass(${1:})
endsnippet

snippet UnitTestScript.runTest
UnitTestScript.runTest(${1:scriptName: nil})
endsnippet

snippet UnitTestScript.findTestScripts
UnitTestScript.findTestScripts(${1:})
endsnippet

snippet UnitTestScript.findTestMethods
UnitTestScript.findTestMethods(${1:})
endsnippet

snippet Unix.errno
Unix.errno(${1:})
endsnippet

snippet UnixFILE.closeAll
UnixFILE.closeAll(${1:})
endsnippet

snippet Unpack1FFT.new
Unpack1FFT.new(${1:chain: nil}, ${2: bufsize: nil}, ${3: binindex: nil}, ${4: whichmeasure: 0})
endsnippet

snippet UnpackFFT.new
UnpackFFT.new(${1:chain: nil}, ${2: bufsize: nil}, ${3: frombin: 0}, ${4: tobin: nil})
endsnippet

snippet UserView.qtClass
UserView.qtClass(${1:})
endsnippet

snippet UserView.new
UserView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet UserView.sizeHint
UserView.sizeHint(${1:})
endsnippet

snippet VDiskIn.ar
VDiskIn.ar(${1:numChannels: nil}, ${2: bufnum: nil}, ${3: rate: 1}, ${4: loop: 0}, ${5: sendID: 0})
endsnippet

snippet VLayout.qtClass
VLayout.qtClass(${1:})
endsnippet

snippet VLayoutView.qtClass
VLayoutView.qtClass(${1:})
endsnippet

snippet VOsc.ar
VOsc.ar(${1:bufpos: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet VOsc.kr
VOsc.kr(${1:bufpos: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet VOsc3.ar
VOsc3.ar(${1:bufpos: nil}, ${2: freq1: 110.0}, ${3: freq2: 220.0}, ${4: freq3: 440.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet VOsc3.kr
VOsc3.kr(${1:bufpos: nil}, ${2: freq1: 110.0}, ${3: freq2: 220.0}, ${4: freq3: 440.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet VarLag.ar
VarLag.ar(${1:in: 0.0}, ${2: time: 0.1}, ${3: curvature: 0}, ${4: warp: 5}, ${5: start: nil}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet VarLag.kr
VarLag.kr(${1:in: 0.0}, ${2: time: 0.1}, ${3: curvature: 0}, ${4: warp: 5}, ${5: start: nil}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet VarLag.new1
VarLag.new1(${1:rate: nil}, ${2: in: nil}, ${3: time: nil}, ${4: curvature: nil}, ${5: warp: nil}, ${6: start: nil})
endsnippet

snippet VarSaw.ar
VarSaw.ar(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: width: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet VarSaw.kr
VarSaw.kr(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: width: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Vibrato.ar
Vibrato.ar(${1:freq: 440.0}, ${2: rate: 6}, ${3: depth: 0.02}, ${4: delay: 0.0}, ${5: onset: 0.0}, ${6: rateVariation: 0.04}, ${7: depthVariation: 0.1}, ${8: iphase: 0.0}, ${9: trig: 0.0})
endsnippet

snippet Vibrato.kr
Vibrato.kr(${1:freq: 440.0}, ${2: rate: 6}, ${3: depth: 0.02}, ${4: delay: 0.0}, ${5: onset: 0.0}, ${6: rateVariation: 0.04}, ${7: depthVariation: 0.1}, ${8: iphase: 0.0}, ${9: trig: 0.0})
endsnippet

snippet View.initClass
View.initClass(${1:})
endsnippet

snippet View.new
View.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet View.newCustom
View.newCustom(${1:customArgs: nil})
endsnippet

snippet View.qtClass
View.qtClass(${1:})
endsnippet

snippet View.globalKeyDownAction_
View.globalKeyDownAction_(${1:action: nil})
endsnippet

snippet View.globalKeyUpAction_
View.globalKeyUpAction_(${1:action: nil})
endsnippet

snippet View.prSetCurrentDrag
View.prSetCurrentDrag(${1:obj: nil})
endsnippet

snippet View.prClearCurrentDrag
View.prClearCurrentDrag(${1:})
endsnippet

snippet View.setGlobalEventEnabled
View.setGlobalEventEnabled(${1:event: nil}, ${2: enabled: nil})
endsnippet

snippet View.prInsertMenuAction
View.prInsertMenuAction(${1:view: nil}, ${2: action: nil}, ${3: addBefore: nil})
endsnippet

snippet View.prRemoveMenuAction
View.prRemoveMenuAction(${1:view: nil}, ${2: action: nil})
endsnippet

snippet View.prRemoveAllMenuActions
View.prRemoveAllMenuActions(${1:view: nil})
endsnippet

snippet View.nonimpl
View.nonimpl(${1:methodName: nil})
endsnippet

snippet View.debug
View.debug(${1:level: 1}, ${2: msg: })
endsnippet

snippet Volume.new
Volume.new(${1:server: nil}, ${2: startBus: 0}, ${3: numChannels: nil}, ${4: min: -90}, ${5: max: 6}, ${6: persist: false})
endsnippet

snippet VolumeGui.new
VolumeGui.new(${1:model: nil}, ${2: win: nil}, ${3: bounds: nil})
endsnippet

snippet Warp.new
Warp.new(${1:spec: nil})
endsnippet

snippet Warp.asWarp
Warp.asWarp(${1:spec: nil})
endsnippet

snippet Warp.initClass
Warp.initClass(${1:})
endsnippet

snippet Warp1.ar
Warp1.ar(${1:numChannels: 1}, ${2: bufnum: 0}, ${3: pointer: 0}, ${4: freqScale: 1}, ${5: windowSize: 0.2}, ${6: envbufnum: -1}, ${7: overlaps: 8}, ${8: windowRandRatio: 0.0}, ${9: interp: 1}, ${10: mul: 1}, ${11: add: 0})
endsnippet

snippet Wavetable.new
Wavetable.new(${1:})
endsnippet

snippet Wavetable.newClear
Wavetable.newClear(${1:})
endsnippet

snippet Wavetable.sineFill
Wavetable.sineFill(${1:size: nil}, ${2: amplitudes: nil}, ${3: phases: nil})
endsnippet

snippet Wavetable.chebyFill
Wavetable.chebyFill(${1:size: nil}, ${2: amplitudes: nil}, ${3: normalize: true}, ${4: zeroOffset: false})
endsnippet

snippet Wavetable.chebyFill_old
Wavetable.chebyFill_old(${1:size: nil}, ${2: amplitudes: nil})
endsnippet

snippet Wavetable.readNew
Wavetable.readNew(${1:file: nil})
endsnippet

snippet WebView.qtClass
WebView.qtClass(${1:})
endsnippet

snippet WebView.initClass
WebView.initClass(${1:})
endsnippet

snippet WebView.setUrlHandler
WebView.setUrlHandler(${1:prefix: nil}, ${2: function: nil})
endsnippet

snippet WebView.prSetUrlHandler
WebView.prSetUrlHandler(${1:prefix: nil}, ${2: function: nil})
endsnippet

snippet WebView.clearCache
WebView.clearCache(${1:})
endsnippet

snippet WeighBag.new
WeighBag.new(${1:})
endsnippet

snippet WeighBag.with
WeighBag.with(${1:items: nil}, ${2: weights: nil})
endsnippet

snippet WhiteNoise.ar
WhiteNoise.ar(${1:mul: 1.0}, ${2: add: 0.0})
endsnippet

snippet WhiteNoise.kr
WhiteNoise.kr(${1:mul: 1.0}, ${2: add: 0.0})
endsnippet

snippet Window.screenBounds
Window.screenBounds(${1:})
endsnippet

snippet Window.availableBounds
Window.availableBounds(${1:})
endsnippet

snippet Window.closeAll
Window.closeAll(${1:})
endsnippet

snippet Window.new
Window.new(${1:name: }, ${2: bounds: nil}, ${3: resizable: true}, ${4: border: true}, ${5: server: nil}, ${6: scroll: false})
endsnippet

snippet Window.flipY
Window.flipY(${1:aRect: nil})
endsnippet

snippet Window.addWindow
Window.addWindow(${1:window: nil})
endsnippet

snippet Window.removeWindow
Window.removeWindow(${1:window: nil})
endsnippet

snippet Window.centerRect
Window.centerRect(${1:argWidth: 500}, ${2: argHeight: 500})
endsnippet

snippet XFade2.ar
XFade2.ar(${1:inA: nil}, ${2: inB: 0.0}, ${3: pan: 0.0}, ${4: level: 1.0})
endsnippet

snippet XFade2.kr
XFade2.kr(${1:inA: nil}, ${2: inB: 0.0}, ${3: pan: 0.0}, ${4: level: 1.0})
endsnippet

snippet XIn.ar
XIn.ar(${1:which: nil}, ${2: n: nil})
endsnippet

snippet XIn.kr
XIn.kr(${1:which: nil}, ${2: n: nil})
endsnippet

snippet XInFeedback.ar
XInFeedback.ar(${1:which: nil}, ${2: n: nil})
endsnippet

snippet XLine.ar
XLine.ar(${1:start: 1.0}, ${2: end: 2.0}, ${3: dur: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0}, ${6: doneAction: 0})
endsnippet

snippet XLine.kr
XLine.kr(${1:start: 1.0}, ${2: end: 2.0}, ${3: dur: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0}, ${6: doneAction: 0})
endsnippet

snippet XOut.ar
XOut.ar(${1:bus: nil}, ${2: xfade: nil}, ${3: channelsArray: nil})
endsnippet

snippet XOut.kr
XOut.kr(${1:bus: nil}, ${2: xfade: nil}, ${3: channelsArray: nil})
endsnippet

snippet XOut.numFixedArgs
XOut.numFixedArgs(${1:})
endsnippet

snippet ZeroCrossing.ar
ZeroCrossing.ar(${1:in: 0.0})
endsnippet

snippet ZeroCrossing.kr
ZeroCrossing.kr(${1:in: 0.0})
endsnippet

